{"version":3,"file":"content_scripts/content-0.js","mappings":"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","sources":["webpack://vpnn-extension/./node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/dayjs.min.js","webpack://vpnn-extension/./node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/plugin/utc.js","webpack://vpnn-extension/./node_modules/.pnpm/webextension-polyfill@0.12.0/node_modules/webextension-polyfill/dist/browser-polyfill.js","webpack://vpnn-extension/webpack/bootstrap","webpack://vpnn-extension/webpack/runtime/compat get default export","webpack://vpnn-extension/webpack/runtime/define property getters","webpack://vpnn-extension/webpack/runtime/hasOwnProperty shorthand","webpack://vpnn-extension/./src/app/actions/premium.ts","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/debug-build.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/version.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/worldwide.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/carrier.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/debug-logger.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/integration.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/eventUtils.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/is.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/browser.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/string.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/object.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/misc.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/integrations/eventFilters.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/time.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/session.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/merge.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/propagationContext.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/spanOnScope.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/scope.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/asyncContext/stackStrategy.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/defaultScopes.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/asyncContext/index.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/currentScopes.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/integrations/functiontostring.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/stacktrace.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/integrations/dedupe.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/instrument/handlers.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/instrument/console.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/supports.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/instrument/fetch.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/breadcrumbs.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/breadcrumb-log-level.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/url.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/types.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/instrument/dom.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/instrument/xhr.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/instrument/history.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/debug-build.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/constants.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/syncpromise.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/eventProcessors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/semanticAttributes.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/baggage.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/dsn.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/hasSpansEnabled.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/spanstatus.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/utils.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/parseSampleRate.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/tracing.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/spanUtils.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/dynamicSamplingContext.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/applyScopeDataToEvent.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/debug-ids.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/normalize.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/prepareEvent.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/exports.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/helpers.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/breadcrumbs.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/severity.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/browserapierrors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/instrument/globalError.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/instrument/globalUnhandledRejection.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/eventbuilder.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/globalhandlers.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/aggregate-errors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/linkederrors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/integrations/extraerrordata.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/sentryNonRecordingSpan.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/envelope.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/measurement.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/sentrySpan.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/logSpans.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/envelope.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/trace.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/sampling.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/idleSpan.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/tracing/errors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/debug-build.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/bindReporter.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getNavigationEntry.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getActivationStart.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/initMetric.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/generateUniqueID.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/initUnique.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/LayoutShiftManager.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/observe.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/runOnce.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getVisibilityWatcher.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenActivated.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onFCP.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getCLS.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/onHidden.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getFID.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/InteractionManager.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenIdleOrHidden.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getINP.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/LCPEntryManager.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getLCP.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onTTFB.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/instrument.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/utils.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/browserMetrics.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/lcp.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/cls.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/inp.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/metrics/elementTiming.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/handleCallbackErrors.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/tracing/linkedTraces.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/traceData.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/fetch.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/tracing/resource-timing.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/tracing/request.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/tracing/browserTracingIntegration.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/tracing/backgroundtab.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/client.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/api.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/transactionEvent.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/clientreport.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/logs/exports.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/logs/envelope.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/ipAddress.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/client.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/sdkMetadata.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/env.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/promisebuffer.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/transports/base.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+core@9.42.1/node_modules/@sentry/core/build/esm/utils/ratelimit.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry-internal+browser-utils@9.42.1/node_modules/@sentry-internal/browser-utils/build/esm/getNativeImplementation.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/transports/fetch.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/stack-parsers.js","webpack://vpnn-extension/./src/app/sentry/createSentryScope.ts","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/sdk.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/httpcontext.js","webpack://vpnn-extension/./node_modules/.pnpm/@sentry+browser@9.42.1/node_modules/@sentry/browser/build/npm/esm/integrations/browsersession.js","webpack://vpnn-extension/./src/app/features/types/Feature.ts","webpack://vpnn-extension/./src/utils/wait/index.ts","webpack://vpnn-extension/./src/utils/getFibonacciNumber/index.ts","webpack://vpnn-extension/./src/app/storage/local/types/sharedTypes.ts","webpack://vpnn-extension/./src/app/storage/local/types/persistentTypes.ts","webpack://vpnn-extension/./src/app/storage/local/types/expirableTypes.ts","webpack://vpnn-extension/./src/app/storage/local/types/oneDayTypes.ts","webpack://vpnn-extension/./src/utils/getConfigsUrl/index.ts","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/errors/HTTPError.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/errors/TimeoutError.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/core/constants.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/is.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/merge.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/normalize.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/core/Ky.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/body.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/delay.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/options.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/utils/timeout.js","webpack://vpnn-extension/./node_modules/.pnpm/ky@1.8.2/node_modules/ky/distribution/index.js","webpack://vpnn-extension/./src/api/configsClient.ts","webpack://vpnn-extension/./src/popup/shared/helpers/versionStringToNumber.ts","webpack://vpnn-extension/./src/app/features/utils/formatResponse.ts","webpack://vpnn-extension/./src/app/storage/local/featuresData.ts","webpack://vpnn-extension/./src/api/features.ts","webpack://vpnn-extension/./src/app/features/list.ts","webpack://vpnn-extension/./src/app/storage/local/metaApiData.ts","webpack://vpnn-extension/./src/api/meta.ts","webpack://vpnn-extension/./src/app/storage/cookies/shared.ts","webpack://vpnn-extension/./src/api/httpClient.ts","webpack://vpnn-extension/./src/app/storage/local/shared.ts","webpack://vpnn-extension/./src/content/scripts/checkPayment.ts"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n  /* vim: set sts=2 sw=2 et tw=80: */\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n  if (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n    // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n          return super.get(key);\n        }\n      }\n\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args);\n\n                // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n        });\n      };\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n            if (!(prop in target)) {\n              return undefined;\n            }\n            let value = target[prop];\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return target[prop];\n                },\n                set(value) {\n                  target[prop] = value;\n                }\n              });\n              return value;\n            }\n            cache[prop] = value;\n            return value;\n          },\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n            return true;\n          },\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n        };\n\n        // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n      });\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {} /* wrappers */, {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          const isResultThenable = result !== true && isThenable(result);\n\n          // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          }\n\n          // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          };\n\n          // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          }\n\n          // Let Chrome know that the listener is replying.\n          return true;\n        };\n      });\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    };\n\n    // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export enum PremiumActions {\n  InitAdPremiumBanner = 'InitAdPremiumBanner',\n  CloseAdPremiumBanner = 'CloseAdPremiumBanner',\n  OverloadPageReady = 'OverloadPageReady',\n  OverloadTimerReady = 'OverloadTimerReady',\n  PaymentStarted = 'PaymentStarted',\n  PremiumCanceled = 'PremiumCanceled',\n}\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","// This is a magic string replaced by rollup\n\nconst SDK_VERSION = \"9.42.1\" ;\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\nexport { GLOBAL_OBJ };\n//# sourceMappingURL=worldwide.js.map\n","import { SDK_VERSION } from './utils/version.js';\nimport { GLOBAL_OBJ } from './utils/worldwide.js';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nfunction getSentryCarrier(carrier) {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(\n  name,\n  creator,\n  obj = GLOBAL_OBJ,\n) {\n  const __SENTRY__ = (obj.__SENTRY__ = obj.__SENTRY__ || {});\n  const carrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  // Note: We do not want to set `carrier.version` here, as this may be called before any `init` is called, e.g. for the default scopes\n  return carrier[name] || (carrier[name] = creator());\n}\n\nexport { getGlobalSingleton, getMainCarrier, getSentryCarrier };\n//# sourceMappingURL=carrier.js.map\n","import { getGlobalSingleton } from '../carrier.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * A Sentry Logger instance.\n *\n * @deprecated Use {@link debug} instead with the {@link SentryDebugLogger} type.\n */\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level];\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod ;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction enable() {\n  _getLoggerSettings().enabled = true;\n}\n\nfunction disable() {\n  _getLoggerSettings().enabled = false;\n}\n\nfunction isEnabled() {\n  return _getLoggerSettings().enabled;\n}\n\nfunction log(...args) {\n  _maybeLog('log', ...args);\n}\n\nfunction info(...args) {\n  _maybeLog('info', ...args);\n}\n\nfunction warn(...args) {\n  _maybeLog('warn', ...args);\n}\n\nfunction error(...args) {\n  _maybeLog('error', ...args);\n}\n\nfunction _debug(...args) {\n  _maybeLog('debug', ...args);\n}\n\nfunction assert(...args) {\n  _maybeLog('assert', ...args);\n}\n\nfunction trace(...args) {\n  _maybeLog('trace', ...args);\n}\n\nfunction _maybeLog(level, ...args) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  if (isEnabled()) {\n    consoleSandbox(() => {\n      GLOBAL_OBJ.console[level](`${PREFIX}[${level}]:`, ...args);\n    });\n  }\n}\n\nfunction _getLoggerSettings() {\n  if (!DEBUG_BUILD) {\n    return { enabled: false };\n  }\n\n  return getGlobalSingleton('loggerSettings', () => ({ enabled: false }));\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n *\n * @deprecated Use {@link debug} instead.\n */\nconst logger = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log level info */\n  info,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n  /** Log a debug message. */\n  debug: _debug,\n  /** Log an assertion. */\n  assert,\n  /** Log a trace. */\n  trace,\n  // eslint-disable-next-line deprecation/deprecation\n} ;\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n */\nconst debug = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n} ;\n\nexport { CONSOLE_LEVELS, consoleSandbox, debug, logger, originalConsoleMethods };\n//# sourceMappingURL=debug-logger.js.map\n","import { getClient } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { debug } from './utils/debug-logger.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach((currentInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  return filterDuplicates(integrations);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach((integration) => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration?.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && debug.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && debug.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && debug.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","/**\n * Get a list of possible event messages from a Sentry event.\n */\nfunction getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch {\n    // ignore errors here\n  }\n\n  return possibleMessages;\n}\n\nexport { getPossibleEventMessages };\n//# sourceMappingURL=eventUtils.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat?.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\n/**\n * Checks whether the given parameter is a Standard Web API Request instance.\n *\n * Returns false if Request is not available in the current runtime.\n */\nfunction isRequest(request) {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isRequest, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","import { isString } from './is.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem?.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexport { getComponentName, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { isString, isRegExp, isVueViewModel } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { htmlTreeAsString } from './browser.js';\nimport { debug } from './debug-logger.js';\nimport { isError, isEvent, isInstanceOf, isPrimitive, isElement } from './is.js';\nimport { truncate } from './string.js';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * If the method on the passed object is not a function, the wrapper will not be applied.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  // explicitly casting to unknown because we don't know the type of the method initially at all\n  const original = source[name] ;\n\n  if (typeof original !== 'function') {\n    return;\n  }\n\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n *\n * @deprecated This function is no longer used by the SDK and will be removed in a future major version.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  // Early return for primitive values\n  if (inputValue === null || typeof inputValue !== 'object') {\n    return inputValue;\n  }\n\n  // Check memo map first for all object types\n  const memoVal = memoizationMap.get(inputValue);\n  if (memoVal !== undefined) {\n    return memoVal ;\n  }\n\n  // handle arrays\n  if (Array.isArray(inputValue)) {\n    const returnValue = [];\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach(value => {\n      returnValue.push(_dropUndefinedKeys(value, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  if (isPojo(inputValue)) {\n    const returnValue = {};\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    const keys = Object.keys(inputValue);\n\n    keys.forEach(key => {\n      const val = inputValue[key];\n      if (val !== undefined) {\n        returnValue[key] = _dropUndefinedKeys(val, memoizationMap);\n      }\n    });\n\n    return returnValue ;\n  }\n\n  // For other object types, return as is\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  // Plain objects have Object as constructor or no constructor\n  const constructor = (input ).constructor;\n  return constructor === Object || constructor === undefined;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify };\n//# sourceMappingURL=object.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nfunction getCrypto() {\n  const gbl = GLOBAL_OBJ ;\n  return gbl.crypto || gbl.msCrypto;\n}\n\n/**\n * UUID4 generator\n * @param crypto Object that provides the crypto API.\n * @returns string Generated UUID4.\n */\nfunction uuid4(crypto = getCrypto()) {\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto?.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto?.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception?.values?.[0];\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...currentMechanism?.data, ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception) {\n  try {\n    return (exception ).__sentry_captured__;\n  } catch {} // eslint-disable-line no-empty\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getPossibleEventMessages } from '../utils/eventUtils.js';\nimport { getEventDescription } from '../utils/misc.js';\nimport { stringMatchesSomePattern } from '../utils/string.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  /^Can't find variable: gmo$/, // Error from Google Search App https://issuetracker.google.com/issues/396043331\n  /^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/, // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n  /^Java exception was raised during method invocation$/, // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nconst eventFiltersIntegration = defineIntegration((options = {}) => {\n  let mergedOptions;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nconst inboundFiltersIntegration = defineIntegration(((options = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters',\n  };\n}) );\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n            event,\n          )}`,\n        );\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])]\n      .reverse()\n      .find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch {\n    DEBUG_BUILD && debug.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\nexport { eventFiltersIntegration, inboundFiltersIntegration };\n//# sourceMappingURL=eventFilters.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = GLOBAL_OBJ ;\n  // Some browser and environments don't have a performance or timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  if (!performance?.now || !performance.timeOrigin) {\n    return dateTimestampInSeconds;\n  }\n\n  const timeOrigin = performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\nlet _cachedTimestampInSeconds;\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nfunction timestampInSeconds() {\n  // We store this in a closure so that we don't have to create a new function every time this is called.\n  const func = _cachedTimestampInSeconds ?? (_cachedTimestampInSeconds = createUnixTimestampInSecondsFunc());\n  return func();\n}\n\n/**\n * Cached result of getBrowserTimeOrigin.\n */\nlet cachedTimeOrigin;\n\n/**\n * Gets the time origin and the mode used to determine it.\n */\nfunction getBrowserTimeOrigin() {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance?.now) {\n    return [undefined, 'none'];\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing?.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      return [performance.timeOrigin, 'timeOrigin'];\n    } else {\n      return [navigationStart, 'navigationStart'];\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  return [dateNow, 'dateNow'];\n}\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nfunction browserPerformanceTimeOrigin() {\n  if (!cachedTimeOrigin) {\n    cachedTimeOrigin = getBrowserTimeOrigin();\n  }\n\n  return cachedTimeOrigin[0];\n}\n\nexport { browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds };\n//# sourceMappingURL=time.js.map\n","import { uuid4 } from './utils/misc.js';\nimport { timestampInSeconds } from './utils/time.js';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see Client.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return {\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  };\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nfunction merge(initialObj, mergeObj, levels = 2) {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n\nexport { merge };\n//# sourceMappingURL=merge.js.map\n","import { uuid4 } from './misc.js';\n\n/**\n * Generate a random, valid trace ID.\n */\nfunction generateTraceId() {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nfunction generateSpanId() {\n  return uuid4().substring(16);\n}\n\nexport { generateSpanId, generateTraceId };\n//# sourceMappingURL=propagationContext.js.map\n","import { addNonEnumerableProperty } from './object.js';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _setSpanForScope(scope, span) {\n  if (span) {\n    addNonEnumerableProperty(scope , SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope )[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _getSpanForScope(scope) {\n  return scope[SCOPE_SPAN_FIELD];\n}\n\nexport { _getSpanForScope, _setSpanForScope };\n//# sourceMappingURL=spanOnScope.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { updateSession } from './session.js';\nimport { debug } from './utils/debug-logger.js';\nimport { isPlainObject } from './utils/is.js';\nimport { merge } from './utils/merge.js';\nimport { uuid4 } from './utils/misc.js';\nimport { generateTraceId } from './utils/propagationContext.js';\nimport { _setSpanForScope, _getSpanForScope } from './utils/spanOnScope.js';\nimport { truncate } from './utils/string.js';\nimport { dateTimestampInSeconds } from './utils/time.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * A context to be used for capturing an event.\n * This can either be a Scope, or a partial ScopeContext,\n * or a callback that receives the current scope and returns a new scope to use.\n */\n\n/**\n * Holds additional event information.\n */\nclass Scope {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called during event processing. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n\n  /** Session */\n\n  /** The client on this scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  /**\n   * Clone all data from this scope into a new scope.\n   */\n   clone() {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * Update the client assigned to this scope.\n   * Note that not every scope will have a client assigned - isolation scopes & the global scope will generally not have a client,\n   * as well as manually created scopes.\n   */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * Set the ID of the last captured error event.\n   * This is generally only captured on the isolation scope.\n   */\n   setLastEventId(lastEventId) {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   */\n   getClient() {\n    return this._client ;\n  }\n\n  /**\n   * Get the ID of the last captured error event.\n   * This is generally only available on the isolation scope.\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * Add an event processor that will be called before an event is sent.\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * Set the user for this scope.\n   * Set to `null` to unset the user.\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the user from this scope.\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * Set an object that will be merged into existing tags on the scope,\n   * and will be sent as tags data with the event.\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single tag that will be sent as tags data with the event.\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set an object that will be merged into existing extra on the scope,\n   * and will be sent as extra data with the event.\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single key:value extra entry that will be sent as extra data with the event.\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param {string[]} fingerprint Fingerprint to group events in Sentry.\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the level on the scope for future events.\n   */\n   setLevel(level) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets context data with the given name.\n   * Data passed as context will be normalized. You can also pass `null` to unset the context.\n   * Note that context data will not be merged - calling `setContext` will overwrite an existing context with the same key.\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set the session for the scope.\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the session from the scope.\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * Updates the scope with provided data. Can work in three variations:\n   * - plain object containing updatable attributes\n   * - Scope instance that'll extract the attributes from\n   * - callback function that'll receive the current scope as an argument and allow for modifications\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const scopeInstance =\n      scopeToMerge instanceof Scope\n        ? scopeToMerge.getScopeData()\n        : isPlainObject(scopeToMerge)\n          ? (captureContext )\n          : undefined;\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clears the current scope and resets its properties.\n   * Note: The client will not be cleared.\n   */\n   clear() {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Adds a breadcrumb to the scope.\n   * By default, the last 100 breadcrumbs are kept.\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n      // Breadcrumb messages can theoretically be infinitely large and they're held in memory so we truncate them not to leak (too much) memory\n      message: breadcrumb.message ? truncate(breadcrumb.message, 2048) : breadcrumb.message,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      this._client?.recordDroppedEvent('buffer_overflow', 'log_item');\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * Get the last breadcrumb of the scope.\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * Clear all breadcrumbs from the scope.\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Add an attachment to the scope.\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * Clear all attachments from the scope.\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Get the data of this scope, which should be applied to an event during processing.\n   */\n   getScopeData() {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry.\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * Add propagation context to the scope, used for distributed tracing\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * Get propagation context from the scope, used for distributed tracing\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @returns {string} The id of the captured Sentry event.\n   */\n   captureException(exception, hint) {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @returns {string} The id of the captured message.\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a Sentry event for this scope.\n   *\n   * @returns {string} The id of the captured event.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\nexport { Scope };\n//# sourceMappingURL=scope.js.map\n","import { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes.js';\nimport { Scope } from '../scope.js';\nimport { isThenable } from '../utils/is.js';\nimport { getMainCarrier, getSentryCarrier } from '../carrier.js';\n\n/**\n * This is an object that holds a stack of scopes.\n */\nclass AsyncContextStack {\n\n   constructor(scope, isolationScope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n   withScope(callback) {\n    const scope = this._pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1] ;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n   _pushScope() {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n   _popScope() {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack() {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope(callback) {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope(scope, callback) {\n  const stack = getAsyncContextStack() ;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope(callback) {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nfunction getStackAsyncContextStrategy() {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: (_isolationScope, callback) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n\nexport { AsyncContextStack, getStackAsyncContextStrategy };\n//# sourceMappingURL=stackStrategy.js.map\n","import { getGlobalSingleton } from './carrier.js';\nimport { Scope } from './scope.js';\n\n/** Get the default current scope. */\nfunction getDefaultCurrentScope() {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nfunction getDefaultIsolationScope() {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n\nexport { getDefaultCurrentScope, getDefaultIsolationScope };\n//# sourceMappingURL=defaultScopes.js.map\n","import { getMainCarrier, getSentryCarrier } from '../carrier.js';\nimport { getStackAsyncContextStrategy } from './stackStrategy.js';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nfunction getAsyncContextStrategy(carrier) {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n\nexport { getAsyncContextStrategy, setAsyncContextStrategy };\n//# sourceMappingURL=index.js.map\n","import { getAsyncContextStrategy } from './asyncContext/index.js';\nimport { getMainCarrier, getGlobalSingleton } from './carrier.js';\nimport { Scope } from './scope.js';\nimport { generateSpanId } from './utils/propagationContext.js';\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nfunction getIsolationScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\n\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nfunction withIsolationScope(\n  ...rest\n\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentScope().getClient();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nfunction getTraceContextFromScope(scope) {\n  const propagationContext = scope.getPropagationContext();\n\n  const { traceId, parentSpanId, propagationSpanId } = propagationContext;\n\n  const traceContext = {\n    trace_id: traceId,\n    span_id: propagationSpanId || generateSpanId(),\n  };\n\n  if (parentSpanId) {\n    traceContext.parent_span_id = parentSpanId;\n  }\n\n  return traceContext;\n}\n\nexport { getClient, getCurrentScope, getGlobalScope, getIsolationScope, getTraceContextFromScope, withIsolationScope, withScope };\n//# sourceMappingURL=currentScopes.js.map\n","import { getClient } from '../currentScopes.js';\nimport { defineIntegration } from '../integration.js';\nimport { getOriginalFunction } from '../utils/object.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\nexport { functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","const STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the scope itself, making it:\n    //\n    //   Sentry.captureException()\n    //   scope.captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { UNKNOWN_FUNCTION, createStackParser, getFramesFromEvent, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getFramesFromEvent } from '../utils/stacktrace.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && debug.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\n/**\n * Deduplication filter.\n */\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception?.values?.[0];\n}\n\nexport { _shouldDropEvent, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getFunctionName } from '../utils/stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && debug.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        debug.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../utils/debug-logger.js';\nimport { fill } from '../utils/object.js';\nimport { GLOBAL_OBJ } from '../utils/worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log?.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from './debug-logger.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  return 'history' in WINDOW && !!WINDOW.history;\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nconst supportsFetch = _isFetchSupported;\n\nfunction _isFetchSupported() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow?.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD && debug.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isError, isRequest } from '../utils/is.js';\nimport { fill, addNonEnumerableProperty } from '../utils/object.js';\nimport { supportsNativeFetch } from '../utils/supports.js';\nimport { timestampInSeconds } from '../utils/time.js';\nimport { GLOBAL_OBJ } from '../utils/worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(\n  handler,\n  skipNativeFetchCheck,\n) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nfunction addFetchEndInstrumentationHandler(handler) {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved, skipNativeFetchCheck = false) {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n        headers: getHeadersFromFetchArgs(args),\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // We enhance the not-so-helpful \"Failed to fetch\" error messages with the host\n          // Possible messages we handle here:\n          // * \"Failed to fetch\" (chromium)\n          // * \"Load failed\" (webkit)\n          // * \"NetworkError when attempting to fetch resource.\" (firefox)\n          if (\n            error instanceof TypeError &&\n            (error.message === 'Failed to fetch' ||\n              error.message === 'Load failed' ||\n              error.message === 'NetworkError when attempting to fetch resource.')\n          ) {\n            try {\n              const url = new URL(handlerData.fetchData.url);\n              error.message = `${error.message} (${url.host})`;\n            } catch {\n              // ignore it if errors happen here\n            }\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res, onFinishedResolving) {\n  if (res?.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response) {\n  // clone response for awaiting stream\n  let clonedResponseForResolving;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nfunction getHeadersFromFetchArgs(fetchArgs) {\n  const [requestArgument, optionsArgument] = fetchArgs;\n\n  try {\n    if (\n      typeof optionsArgument === 'object' &&\n      optionsArgument !== null &&\n      'headers' in optionsArgument &&\n      optionsArgument.headers\n    ) {\n      return new Headers(optionsArgument.headers );\n    }\n\n    if (isRequest(requestArgument)) {\n      return new Headers(requestArgument.headers);\n    }\n  } catch {\n    // noop\n  }\n\n  return;\n}\n\nexport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","import { getClient, getIsolationScope } from './currentScopes.js';\nimport { consoleSandbox } from './utils/debug-logger.js';\nimport { dateTimestampInSeconds } from './utils/time.js';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\nexport { addBreadcrumb };\n//# sourceMappingURL=breadcrumbs.js.map\n","/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nfunction getBreadcrumbLogLevelFromHttpStatusCode(statusCode) {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n\nexport { getBreadcrumbLogLevelFromHttpStatusCode };\n//# sourceMappingURL=breadcrumb-log-level.js.map\n","import { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_URL_FULL, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '../semanticAttributes.js';\n\n// Curious about `thismessage:/`? See: https://www.rfc-editor.org/rfc/rfc2557.html\n//  > When the methods above do not yield an absolute URI, a base URL\n//  > of \"thismessage:/\" MUST be employed. This base URL has been\n//  > defined for the sole purpose of resolving relative references\n//  > within a multipart/related structure when no other base URI is\n//  > specified.\n//\n// We need to provide a base URL to `parseStringToURLObject` because the fetch API gives us a\n// relative URL sometimes.\n//\n// This is the only case where we need to provide a base URL to `parseStringToURLObject`\n// because the relative URL is not valid on its own.\nconst DEFAULT_BASE_URL = 'thismessage:/';\n\n/**\n * Checks if the URL object is relative\n *\n * @param url - The URL object to check\n * @returns True if the URL object is relative, false otherwise\n */\nfunction isURLObjectRelative(url) {\n  return 'isRelative' in url;\n}\n\n/**\n * Parses string to a URL object\n *\n * @param url - The URL to parse\n * @returns The parsed URL object or undefined if the URL is invalid\n */\nfunction parseStringToURLObject(url, urlBase) {\n  const isRelative = url.indexOf('://') <= 0 && url.indexOf('//') !== 0;\n  const base = urlBase ?? (isRelative ? DEFAULT_BASE_URL : undefined);\n  try {\n    // Use `canParse` to short-circuit the URL constructor if it's not a valid URL\n    // This is faster than trying to construct the URL and catching the error\n    // Node 20+, Chrome 120+, Firefox 115+, Safari 17+\n    if ('canParse' in URL && !(URL ).canParse(url, base)) {\n      return undefined;\n    }\n\n    const fullUrlObject = new URL(url, base);\n    if (isRelative) {\n      // Because we used a fake base URL, we need to return a relative URL object.\n      // We cannot return anything about the origin, host, etc. because it will refer to the fake base URL.\n      return {\n        isRelative,\n        pathname: fullUrlObject.pathname,\n        search: fullUrlObject.search,\n        hash: fullUrlObject.hash,\n      };\n    }\n    return fullUrlObject;\n  } catch {\n    // empty body\n  }\n\n  return undefined;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlStringFromUrlObject(url) {\n  if (isURLObjectRelative(url)) {\n    return url.pathname;\n  }\n\n  const newUrl = new URL(url);\n  newUrl.search = '';\n  newUrl.hash = '';\n  if (['80', '443'].includes(newUrl.port)) {\n    newUrl.port = '';\n  }\n  if (newUrl.password) {\n    newUrl.password = '%filtered%';\n  }\n  if (newUrl.username) {\n    newUrl.username = '%filtered%';\n  }\n\n  return newUrl.toString();\n}\n\nfunction getHttpSpanNameFromUrlObject(\n  urlObject,\n  kind,\n  request,\n  routeName,\n) {\n  const method = request?.method?.toUpperCase() ?? 'GET';\n  const route = routeName\n    ? routeName\n    : urlObject\n      ? kind === 'client'\n        ? getSanitizedUrlStringFromUrlObject(urlObject)\n        : urlObject.pathname\n      : '/';\n\n  return `${method} ${route}`;\n}\n\n/**\n * Takes a parsed URL object and returns a set of attributes for the span\n * that represents the HTTP request for that url. This is used for both server\n * and client http spans.\n *\n * Follows https://opentelemetry.io/docs/specs/semconv/http/.\n *\n * @param urlObject - see {@link parseStringToURLObject}\n * @param kind - The type of HTTP operation (server or client)\n * @param spanOrigin - The origin of the span\n * @param request - The request object, see {@link PartialRequest}\n * @param routeName - The name of the route, must be low cardinality\n * @returns The span name and attributes for the HTTP operation\n */\nfunction getHttpSpanDetailsFromUrlObject(\n  urlObject,\n  kind,\n  spanOrigin,\n  request,\n  routeName,\n) {\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n  };\n\n  if (routeName) {\n    // This is based on https://opentelemetry.io/docs/specs/semconv/http/http-spans/#name\n    attributes[kind === 'server' ? 'http.route' : 'url.template'] = routeName;\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n  }\n\n  if (request?.method) {\n    attributes[SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD] = request.method.toUpperCase();\n  }\n\n  if (urlObject) {\n    if (urlObject.search) {\n      attributes['url.query'] = urlObject.search;\n    }\n    if (urlObject.hash) {\n      attributes['url.fragment'] = urlObject.hash;\n    }\n    if (urlObject.pathname) {\n      attributes['url.path'] = urlObject.pathname;\n      if (urlObject.pathname === '/') {\n        attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n      }\n    }\n\n    if (!isURLObjectRelative(urlObject)) {\n      attributes[SEMANTIC_ATTRIBUTE_URL_FULL] = urlObject.href;\n      if (urlObject.port) {\n        attributes['url.port'] = urlObject.port;\n      }\n      if (urlObject.protocol) {\n        attributes['url.scheme'] = urlObject.protocol;\n      }\n      if (urlObject.hostname) {\n        attributes[kind === 'server' ? 'server.address' : 'url.domain'] = urlObject.hostname;\n      }\n    }\n  }\n\n  return [getHttpSpanNameFromUrlObject(urlObject, kind, request, routeName), attributes];\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    host\n      // Always filter out authority\n      ?.replace(/^.*@/, '[filtered]:[filtered]@')\n      // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n      // TODO: Use new URL global if it exists\n      .replace(/(:80)$/, '')\n      .replace(/(:443)$/, '') || '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getHttpSpanDetailsFromUrlObject, getSanitizedUrlString, getSanitizedUrlStringFromUrlObject, isURLObjectRelative, parseStringToURLObject, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ\n\n;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, fill, addNonEnumerableProperty, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    const globalObject = WINDOW ;\n    const proto = globalObject[target]?.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto?.hasOwnProperty?.('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function ( type, listener, options) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function ( type, listener, options) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target?.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { addHandler, maybeInstrument, timestampInSeconds, isString, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(\n      originalOpen,\n      xhrOpenThisArg,\n      xhrOpenArgArray\n\n,\n    ) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseXhrUrlArg(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg,\n          setRequestHeaderArgArray,\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg, sendArgArray) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\n/**\n * Parses the URL argument of a XHR method to a string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open#url\n * url: A string or any other object with a stringifier — including a URL object — that provides the URL of the resource to send the request to.\n *\n * @param url - The URL argument of an XHR method\n * @returns The parsed URL string or undefined if the URL is invalid\n */\nfunction parseXhrUrlArg(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // If the passed in argument is not a string, it should have a `toString` method as a stringifier.\n    // If that fails, we just return undefined (like in IE11 where URL is not available)\n    return (url ).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, supportsHistory, fill } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\n/**\n * Exported just for testing\n */\nfunction instrumentHistory() {\n  // The `popstate` event may also be triggered on `pushState`, but it may not always reliably be emitted by the browser\n  // Which is why we also monkey-patch methods below, in addition to this\n  WINDOW.addEventListener('popstate', () => {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n\n    if (from === to) {\n      return;\n    }\n\n    const handlerData = { from, to } ;\n    triggerHandlers('history', handlerData);\n  });\n\n  // Just guard against this not being available, in weird environments\n  if (!supportsHistory()) {\n    return;\n  }\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        const from = lastHref;\n\n        // Ensure the URL is absolute\n        // this can be either a path, then it is relative to the current origin\n        // or a full URL of the current origin - other origins are not allowed\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState#url\n        // coerce to string (this is what pushState does)\n        const to = getAbsoluteUrl(String(url));\n\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n\n        if (from === to) {\n          return originalHistoryFunction.apply(this, args);\n        }\n\n        const handlerData = { from, to } ;\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nfunction getAbsoluteUrl(urlOrPath) {\n  try {\n    const url = new URL(urlOrPath, WINDOW.location.origin);\n    return url.toString();\n  } catch {\n    // fallback, just do nothing\n    return urlOrPath;\n  }\n}\n\nexport { addHistoryInstrumentationHandler, instrumentHistory };\n//# sourceMappingURL=history.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nconst STATE_PENDING = 0;\nconst STATE_RESOLVED = 1;\nconst STATE_REJECTED = 2;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(executor) {\n    this._state = STATE_PENDING;\n    this._handlers = [];\n\n    this._runExecutor(executor);\n  }\n\n  /** @inheritdoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** @inheritdoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** @inheritdoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** Excute the resolve/reject handlers. */\n   _executeHandlers() {\n    if (this._state === STATE_PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === STATE_RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === STATE_REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  }\n\n  /** Run the executor for the SyncPromise. */\n   _runExecutor(executor) {\n    const setResult = (state, value) => {\n      if (this._state !== STATE_PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void (value ).then(resolve, reject);\n        return;\n      }\n\n      this._state = state;\n      this._value = value;\n\n      this._executeHandlers();\n    };\n\n    const resolve = (value) => {\n      setResult(STATE_RESOLVED, value);\n    };\n\n    const reject = (reason) => {\n      setResult(STATE_REJECTED, reason);\n    };\n\n    try {\n      executor(resolve, reject);\n    } catch (e) {\n      reject(e);\n    }\n  }\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { debug } from './utils/debug-logger.js';\nimport { isThenable } from './utils/is.js';\nimport { SyncPromise } from './utils/syncpromise.js';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && debug.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Attributes that holds the sample rate that was locally applied to a span.\n * If this attribute is not defined, it means that the span inherited a sampling decision.\n *\n * NOTE: Is only defined on root spans.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Attribute holding the sample rate of the previous trace.\n * This is used to sample consistently across subsequent traces in the browser SDK.\n *\n * Note: Only defined on root spans, if opted into consistent sampling\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE = 'sentry.previous_trace_sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nconst SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nconst SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nconst SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\n/**\n * A span link attribute to mark the link as a special span link.\n *\n * Known values:\n * - `previous_trace`: The span links to the frontend root span of the previous trace.\n * - `next_trace`: The span links to the frontend root span of the next trace. (Not set by the SDK)\n *\n * Other values may be set as appropriate.\n * @see https://develop.sentry.dev/sdk/telemetry/traces/span-links/#link-types\n */\nconst SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE = 'sentry.link.type';\n\nexport { SEMANTIC_ATTRIBUTE_CACHE_HIT, SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, SEMANTIC_ATTRIBUTE_CACHE_KEY, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_URL_FULL, SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE };\n//# sourceMappingURL=semanticAttributes.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from './debug-logger.js';\nimport { isString } from './is.js';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry =>\n      baggageEntry.split('=').map(keyOrValue => {\n        try {\n          return decodeURIComponent(keyOrValue.trim());\n        } catch {\n          // We ignore errors here, e.g. if the value cannot be URL decoded.\n          // This will then be skipped in the next step\n          return;\n        }\n      }),\n    )\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader, objectToBaggageHeader, parseBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { consoleSandbox, debug } from './debug-logger.js';\n\n/** Regular expression used to extract org ID from a DSN host. */\nconst ORG_ID_REGEX = /^o(\\d+)\\./;\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      debug.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    debug.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    debug.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    debug.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Extract the org ID from a DSN host.\n *\n * @param host The host from a DSN\n * @returns The org ID if found, undefined otherwise\n */\nfunction extractOrgIdFromDsnHost(host) {\n  const match = host.match(ORG_ID_REGEX);\n\n  return match?.[1];\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, extractOrgIdFromDsnHost, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { getClient } from '../currentScopes.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if span recording is currently enabled.\n *\n * Spans are recorded when at least one of `tracesSampleRate` and `tracesSampler`\n * is defined in the SDK config. This function does not make any assumption about\n * sampling decisions, it only checks if the SDK is configured to record spans.\n *\n * Important: This function only determines if span recording is enabled. Trace\n * continuation and propagation is separately controlled and not covered by this function.\n * If this function returns `false`, traces can still be propagated (which is what\n * we refer to by \"Tracing without Performance\")\n * @see https://develop.sentry.dev/sdk/telemetry/traces/tracing-without-performance/\n *\n * @param maybeOptions An SDK options object to be passed to this function.\n * If this option is not provided, the function will use the current client's options.\n */\nfunction hasSpansEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClient()?.getOptions();\n  return (\n    !!options &&\n    // Note: This check is `!= null`, meaning \"nullish\". `0` is not \"nullish\", `undefined` and `null` are. (This comment was brought to you by 15 minutes of questioning life)\n    (options.tracesSampleRate != null || !!options.tracesSampler)\n  );\n}\n\n/**\n * @see JSDoc of `hasSpansEnabled`\n * @deprecated Use `hasSpansEnabled` instead, which is a more accurately named version of this function.\n * This function will be removed in the next major version of the SDK.\n */\n// TODO(v10): Remove this export\nconst hasTracingEnabled = hasSpansEnabled;\n\nexport { hasSpansEnabled, hasTracingEnabled };\n//# sourceMappingURL=hasSpansEnabled.js.map\n","const SPAN_STATUS_UNSET = 0;\nconst SPAN_STATUS_OK = 1;\nconst SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\nexport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, SPAN_STATUS_UNSET, getSpanStatusFromHttpCode, setHttpStatus };\n//# sourceMappingURL=spanstatus.js.map\n","import { addNonEnumerableProperty } from '../utils/object.js';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan };\n//# sourceMappingURL=utils.js.map\n","/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nfunction parseSampleRate(sampleRate) {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    return undefined;\n  }\n\n  return rate;\n}\n\nexport { parseSampleRate };\n//# sourceMappingURL=parseSampleRate.js.map\n","import { baggageHeaderToDynamicSamplingContext } from './baggage.js';\nimport { parseSampleRate } from './parseSampleRate.js';\nimport { generateTraceId, generateSpanId } from './propagationContext.js';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  if (!traceparentData?.traceId) {\n    return {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  const sampleRand = getSampleRandFromTraceparentAndDsc(traceparentData, dynamicSamplingContext);\n\n  // The sample_rand on the DSC needs to be generated based on traceparent + baggage.\n  if (dynamicSamplingContext) {\n    dynamicSamplingContext.sample_rand = sampleRand.toString();\n  }\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData;\n\n  return {\n    traceId,\n    parentSpanId,\n    sampled: parentSampled,\n    dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    sampleRand,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = generateTraceId(),\n  spanId = generateSpanId(),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n/**\n * Given any combination of an incoming trace, generate a sample rand based on its defined semantics.\n *\n * Read more: https://develop.sentry.dev/sdk/telemetry/traces/#propagated-random-value\n */\nfunction getSampleRandFromTraceparentAndDsc(\n  traceparentData,\n  dsc,\n) {\n  // When there is an incoming sample rand use it.\n  const parsedSampleRand = parseSampleRate(dsc?.sample_rand);\n  if (parsedSampleRand !== undefined) {\n    return parsedSampleRand;\n  }\n\n  // Otherwise, if there is an incoming sampling decision + sample rate, generate a sample rand that would lead to the same sampling decision.\n  const parsedSampleRate = parseSampleRate(dsc?.sample_rate);\n  if (parsedSampleRate && traceparentData?.parentSampled !== undefined) {\n    return traceparentData.parentSampled\n      ? // Returns a sample rand with positive sampling decision [0, sampleRate)\n        Math.random() * parsedSampleRate\n      : // Returns a sample rand with negative sampling decision [sampleRate, 1)\n        parsedSampleRate + Math.random() * (1 - parsedSampleRate);\n  } else {\n    // If nothing applies, return a random sample rand.\n    return Math.random();\n  }\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, propagationContextFromHeaders };\n//# sourceMappingURL=tracing.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getCurrentScope } from '../currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes.js';\nimport { SPAN_STATUS_UNSET, SPAN_STATUS_OK } from '../tracing/spanstatus.js';\nimport { getCapturedScopesOnSpan } from '../tracing/utils.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { generateSpanId } from './propagationContext.js';\nimport { timestampInSeconds } from './time.js';\nimport { generateSentryTraceHeader } from './tracing.js';\nimport { consoleSandbox } from './debug-logger.js';\nimport { _getSpanForScope } from './spanOnScope.js';\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nfunction spanToTransactionTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin, links } = spanToJSON(span);\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n    links,\n  };\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const scope = getCapturedScopesOnSpan(span).scope;\n\n  const span_id = isRemote ? scope?.getPropagationContext().propagationSpanId || generateSpanId() : spanId;\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n  };\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n *  Converts the span links array to a flattened version to be sent within an envelope.\n *\n *  If the links array is empty, it returns `undefined` so the empty value can be dropped before it's sent.\n */\nfunction convertSpanLinksForEnvelope(links) {\n  if (links && links.length > 0) {\n    return links.map(({ context: { spanId, traceId, traceFlags, ...restContext }, attributes }) => ({\n      span_id: spanId,\n      trace_id: traceId,\n      sampled: traceFlags === TRACE_FLAG_SAMPLED,\n      attributes,\n      ...restContext,\n    }));\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nfunction spanToJSON(span) {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n  // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n  if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n    const { attributes, startTime, name, endTime, status, links } = span;\n\n    // In preparation for the next major of OpenTelemetry, we want to support\n    // looking up the parent span id according to the new API\n    // In OTel v1, the parent span id is accessed as `parentSpanId`\n    // In OTel v2, the parent span id is accessed as `spanId` on the `parentSpanContext`\n    const parentSpanId =\n      'parentSpanId' in span\n        ? span.parentSpanId\n        : 'parentSpanContext' in span\n          ? (span.parentSpanContext )?.spanId\n          : undefined;\n\n    return {\n      span_id,\n      trace_id,\n      data: attributes,\n      description: name,\n      parent_span_id: parentSpanId,\n      start_timestamp: spanTimeInputToSeconds(startTime),\n      // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n      timestamp: spanTimeInputToSeconds(endTime) || undefined,\n      status: getStatusMessage(status),\n      op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      links: convertSpanLinksForEnvelope(links),\n    };\n  }\n\n  // Finally, at least we have `spanContext()`....\n  // This should not actually happen in reality, but we need to handle it for type safety.\n  return {\n    span_id,\n    trace_id,\n    start_timestamp: 0,\n    data: {},\n  };\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span) {\n  const castSpan = span ;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nfunction getStatusMessage(status) {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\n/**\n * Adds an opaque child span reference to a span.\n */\nfunction addChildSpanToSpan(span, childSpan) {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan , ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nfunction removeChildSpanFromSpan(span, childSpan) {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nfunction getSpanDescendants(span) {\n  const resultSet = new Set();\n\n  function addSpanChildren(span) {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nfunction getRootSpan(span) {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n */\nfunction showSpanDropWarning() {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Returning null from `beforeSendSpan` is disallowed. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nfunction updateSpanName(span, name) {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n\nexport { TRACE_FLAG_NONE, TRACE_FLAG_SAMPLED, addChildSpanToSpan, convertSpanLinksForEnvelope, getActiveSpan, getRootSpan, getSpanDescendants, getStatusMessage, removeChildSpanFromSpan, showSpanDropWarning, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader, spanToTransactionTraceContext, updateSpanName };\n//# sourceMappingURL=spanUtils.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getClient } from '../currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes.js';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils/baggage.js';\nimport { extractOrgIdFromDsnHost } from '../utils/dsn.js';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled.js';\nimport { addNonEnumerableProperty } from '../utils/object.js';\nimport { getRootSpan, spanToJSON, spanIsSampled } from '../utils/spanUtils.js';\nimport { getCapturedScopesOnSpan } from './utils.js';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\n/**\n * Freeze the given DSC on the given span.\n */\nfunction freezeDscOnSpan(span, dsc) {\n  const spanWithMaybeDsc = span ;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(trace_id, client) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key, host } = client.getDsn() || {};\n\n  let org_id;\n  if (options.orgId) {\n    org_id = String(options.orgId);\n  } else if (host) {\n    org_id = extractOrgIdFromDsnHost(host);\n  }\n\n  // Instead of conditionally adding non-undefined values, we add them and then remove them if needed\n  // otherwise, the order of baggage entries changes, which \"breaks\" a bunch of tests etc.\n  const dsc = {\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n    org_id,\n  };\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nfunction getDynamicSamplingContextFromScope(client, scope) {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n  const rootSpanJson = spanToJSON(rootSpan);\n  const rootSpanAttributes = rootSpanJson.data;\n  const traceState = rootSpan.spanContext().traceState;\n\n  // The span sample rate that was locally applied to the root span should also always be applied to the DSC, even if the DSC is frozen.\n  // This is so that the downstream traces/services can use parentSampleRate in their `tracesSampler` to make consistent sampling decisions across the entire trace.\n  const rootSpanSampleRate =\n    traceState?.get('sentry.sample_rate') ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE];\n\n  function applyLocalSampleRateToDsc(dsc) {\n    if (typeof rootSpanSampleRate === 'number' || typeof rootSpanSampleRate === 'string') {\n      dsc.sample_rate = `${rootSpanSampleRate}`;\n    }\n    return dsc;\n  }\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan )[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return applyLocalSampleRateToDsc(frozenDsc);\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceStateDsc = traceState?.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return applyLocalSampleRateToDsc(dscOnTraceState);\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = rootSpanJson.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasSpansEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasSpansEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n    dsc.sample_rand =\n      // In OTEL we store the sample rand on the trace state because we cannot access scopes for NonRecordingSpans\n      // The Sentry OTEL SpanSampler takes care of writing the sample rand on the root span\n      traceState?.get('sentry.sample_rand') ??\n      // On all other platforms we can actually get the scopes from a root span (we use this as a fallback)\n      getCapturedScopesOnSpan(rootSpan).scope?.getPropagationContext().sampleRand.toString();\n  }\n\n  applyLocalSampleRateToDsc(dsc);\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nfunction spanToBaggageHeader(span) {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n\nexport { freezeDscOnSpan, getDynamicSamplingContextFromClient, getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan, spanToBaggageHeader };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext.js';\nimport { merge } from './merge.js';\nimport { spanToTraceContext, getRootSpan, spanToJSON } from './spanUtils.js';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\nfunction applyDataToEvent(event, data) {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n\n  if (Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n\n  if (Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n\n  if (Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (!event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\nexport { applyScopeDataToEvent, mergeAndOverwriteScopeData, mergeScopeData };\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nlet parsedStackResults;\nlet lastKeysCount;\nlet cachedFilenameDebugIds;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nfunction getFilenameToDebugIdMap(stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame?.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nfunction getDebugImagesForResources(\n  stackParser,\n  resource_paths,\n) {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\nexport { getDebugImagesForResources, getFilenameToDebugIdMap };\n//# sourceMappingURL=debug-ids.js.map\n","import { isVueViewModel, isSyntheticEvent } from './is.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype?.constructor ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const inner = new WeakSet();\n  function memoize(obj) {\n    if (inner.has(obj)) {\n      return true;\n    }\n    inner.add(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    inner.delete(obj);\n  }\n  return [memoize, unmemoize];\n}\n\nexport { normalize, normalizeToSize, normalizeUrlToBase };\n//# sourceMappingURL=normalize.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getGlobalScope } from '../currentScopes.js';\nimport { notifyEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\nimport { mergeScopeData, applyScopeDataToEvent } from './applyScopeDataToEvent.js';\nimport { getFilenameToDebugIdMap } from './debug-ids.js';\nimport { uuid4, addExceptionMechanism } from './misc.js';\nimport { normalize } from './normalize.js';\nimport { truncate } from './string.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  const request = event.request;\n  if (request?.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.filename) {\n        frame.debug_id = filenameDebugIdMap[frame.filename];\n      }\n    });\n  });\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.debug_id) {\n        if (frame.abs_path) {\n          filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n        } else if (frame.filename) {\n          filenameDebugIdMap[frame.filename] = frame.debug_id;\n        }\n        delete frame.debug_id;\n      }\n    });\n  });\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts?.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts?.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope, captureContext) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(hint) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\nexport { applyClientOptions, applyDebugIds, applyDebugMeta, parseEventHintOrCaptureContext, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { getCurrentScope, getClient, withIsolationScope, getIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { makeSession, updateSession, closeSession } from './session.js';\nimport { debug } from './utils/debug-logger.js';\nimport { isThenable } from './utils/is.js';\nimport { uuid4 } from './utils/misc.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\nimport { timestampInSeconds } from './utils/time.js';\nimport { GLOBAL_OBJ } from './utils/worldwide.js';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(exception, hint) {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(message, captureContext) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nfunction lastEventId() {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param callback Callback to be monitored\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      return maybePromiseResult.then(\n        r => {\n          finishCheckIn('ok');\n          return r;\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      ) ;\n    }\n    finishCheckIn('ok');\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nfunction isEnabled() {\n  const client = getClient();\n  return client?.getOptions().enabled !== false && !!client?.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nfunction addEventProcessor(callback) {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession?.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = getIsolationScope();\n  const client = getClient();\n  const session = isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\nexport { addEventProcessor, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, endSession, flush, isEnabled, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, withMonitor };\n//# sourceMappingURL=exports.js.map\n","import { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, withScope, addExceptionTypeValue, addExceptionMechanism, captureException, getLocationHref } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn ).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function ( ...args) {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } ;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property ] = fn[property ];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\n/**\n * Get HTTP request data from the current page.\n */\nfunction getHttpRequestData() {\n  // grab as much info as exists and add it to the event\n  const url = getLocationHref();\n  const { referrer } = WINDOW.document || {};\n  const { userAgent } = WINDOW.navigator || {};\n\n  const headers = {\n    ...(referrer && { Referer: referrer }),\n    ...(userAgent && { 'User-Agent': userAgent }),\n  };\n  const request = {\n    url,\n    headers,\n  };\n\n  return request;\n}\n\nexport { WINDOW, getHttpRequestData, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { defineIntegration, addConsoleInstrumentationHandler, addFetchInstrumentationHandler, getClient, safeJoin, severityLevelFromString, addBreadcrumb, debug, htmlTreeAsString, getComponentName, getBreadcrumbLogLevelFromHttpStatusCode, parseUrl, getEventDescription } from '@sentry/core';\nimport { addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addHistoryInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      // TODO(v10): Remove this functionality and use `consoleIntegration` from @sentry/core instead.\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const breadcrumb = {\n      category: 'xhr',\n      data,\n      type: 'http',\n      level: getBreadcrumbLogLevelFromHttpStatusCode(status_code),\n    };\n\n    client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint );\n\n    addBreadcrumb(breadcrumb, hint);\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    ({\n      method: handlerData.fetchData.method,\n      url: handlerData.fetchData.url,\n    });\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      } ;\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint );\n\n      addBreadcrumb(breadcrumb, hint);\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response?.status,\n      };\n\n      handlerData.fetchData.request_body_size;\n      handlerData.fetchData.response_body_size;\n      response?.status;\n\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        type: 'http',\n        level: getBreadcrumbLogLevelFromHttpStatusCode(data.status_code),\n      };\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint );\n\n      addBreadcrumb(breadcrumb, hint);\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom?.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) ;\n}\n\nexport { severityLevelFromString };\n//# sourceMappingURL=severity.js.map\n","import { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    unregisterOriginalCallbacks: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(target => _wrapEventTarget(target, _options));\n      }\n    },\n  };\n}) ;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original) {\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original) {\n  return function ( callback) {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target, integrationOptions) {\n  const globalObject = WINDOW ;\n  const proto = globalObject[target]?.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto?.hasOwnProperty?.('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function ( eventName, fn, options) {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      if (integrationOptions.unregisterOriginalCallbacks) {\n        unregisterOriginalCallback(this, eventName, fn);\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener)\n\n {\n    return function ( eventName, fn, options) {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn ).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj) {\n  return typeof (obj ).handleEvent === 'function';\n}\n\nfunction unregisterOriginalCallback(target, eventName, fn) {\n  if (\n    target &&\n    typeof target === 'object' &&\n    'removeEventListener' in target &&\n    typeof target.removeEventListener === 'function'\n  ) {\n    target.removeEventListener(eventName, fn);\n  }\n}\n\nexport { browserApiErrorsIntegration };\n//# sourceMappingURL=browserapierrors.js.map\n","import { GLOBAL_OBJ } from '../utils/worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../utils/worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, addExceptionMechanism, isParameterizedString, getClient, normalizeToSize, extractExceptionKeysForMessage, resolvedSyncPromise } from '@sentry/core';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client?.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } ,\n      ],\n    },\n    extra,\n  } ;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex) {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex) {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception) {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nfunction extractType(ex) {\n  const name = ex?.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex?.message;\n\n  if (isWebAssemblyException(ex)) {\n    // For Node 18, Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    if (Array.isArray(ex.message) && ex.message.length == 2) {\n      return ex.message[1];\n    }\n    return 'wasm exception';\n  }\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport { eventFromException, eventFromMessage, eventFromUnknownInput, exceptionFromError, extractMessage, extractType };\n//# sourceMappingURL=eventbuilder.js.map\n","import { defineIntegration, addGlobalErrorInstrumentationHandler, getClient, captureEvent, debug, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isString, getLocationHref, UNKNOWN_FUNCTION } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error )) {\n      return (error ).reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error ) && 'reason' in (error ).detail) {\n      return (error ).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event,\n  url,\n  line,\n  column,\n) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && debug.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = client?.getOptions() || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { isInstanceOf } from './is.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception?.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      hint.originalException ,\n      key,\n      event.exception.values,\n      originalException,\n      0,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { defineIntegration, applyAggregateErrorsToEvent } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { isError, isPlainObject } from '../utils/is.js';\nimport { normalize } from '../utils/normalize.js';\nimport { addNonEnumerableProperty } from '../utils/object.js';\nimport { truncate } from '../utils/string.js';\n\nconst INTEGRATION_NAME = 'ExtraErrorData';\n\n/**\n * Extract additional data for from original exceptions.\n */\nconst _extraErrorDataIntegration = ((options = {}) => {\n  const { depth = 3, captureErrorCause = true } = options;\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, hint, client) {\n      const { maxValueLength = 250 } = client.getOptions();\n      return _enhanceEventWithErrorData(event, hint, depth, captureErrorCause, maxValueLength);\n    },\n  };\n}) ;\n\nconst extraErrorDataIntegration = defineIntegration(_extraErrorDataIntegration);\n\nfunction _enhanceEventWithErrorData(\n  event,\n  hint = {},\n  depth,\n  captureErrorCause,\n  maxValueLength,\n) {\n  if (!hint.originalException || !isError(hint.originalException)) {\n    return event;\n  }\n  const exceptionName = (hint.originalException ).name || hint.originalException.constructor.name;\n\n  const errorData = _extractErrorData(hint.originalException , captureErrorCause, maxValueLength);\n\n  if (errorData) {\n    const contexts = {\n      ...event.contexts,\n    };\n\n    const normalizedErrorData = normalize(errorData, depth);\n\n    if (isPlainObject(normalizedErrorData)) {\n      // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n      // potentially truncate the data we just already normalized, with a certain depth setting.\n      addNonEnumerableProperty(normalizedErrorData, '__sentry_skip_normalization__', true);\n      contexts[exceptionName] = normalizedErrorData;\n    }\n\n    return {\n      ...event,\n      contexts,\n    };\n  }\n\n  return event;\n}\n\n/**\n * Extract extra information from the Error object\n */\nfunction _extractErrorData(\n  error,\n  captureErrorCause,\n  maxValueLength,\n) {\n  // We are trying to enhance already existing event, so no harm done if it won't succeed\n  try {\n    const nativeKeys = [\n      'name',\n      'message',\n      'stack',\n      'line',\n      'column',\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'toJSON',\n    ];\n\n    const extraErrorInfo = {};\n\n    // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n    for (const key of Object.keys(error)) {\n      if (nativeKeys.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = error[key];\n      extraErrorInfo[key] = isError(value) || typeof value === 'string' ? truncate(`${value}`, maxValueLength) : value;\n    }\n\n    // Error.cause is a standard property that is non enumerable, we therefore need to access it separately.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    if (captureErrorCause && error.cause !== undefined) {\n      extraErrorInfo.cause = isError(error.cause) ? error.cause.toString() : error.cause;\n    }\n\n    // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n    if (typeof error.toJSON === 'function') {\n      const serializedError = error.toJSON() ;\n\n      for (const key of Object.keys(serializedError)) {\n        const value = serializedError[key];\n        extraErrorInfo[key] = isError(value) ? value.toString() : value;\n      }\n    }\n\n    return extraErrorInfo;\n  } catch (oO) {\n    DEBUG_BUILD && debug.error('Unable to extract extra data from the Error object:', oO);\n  }\n\n  return null;\n}\n\nexport { extraErrorDataIntegration };\n//# sourceMappingURL=extraerrordata.js.map\n","import { generateTraceId, generateSpanId } from '../utils/propagationContext.js';\nimport { TRACE_FLAG_NONE } from '../utils/spanUtils.js';\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nclass SentryNonRecordingSpan  {\n\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   end(_timestamp) {}\n\n  /** @inheritdoc */\n   setAttribute(_key, _value) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(_values) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setStatus(_status) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   updateName(_name) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return false;\n  }\n\n  /** @inheritdoc */\n   addEvent(\n    _name,\n    _attributesOrStartTime,\n    _startTime,\n  ) {\n    return this;\n  }\n\n  /** @inheritDoc */\n   addLink(_link) {\n    return this;\n  }\n\n  /** @inheritDoc */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n}\n\nexport { SentryNonRecordingSpan };\n//# sourceMappingURL=sentryNonRecordingSpan.js.map\n","import { getSentryCarrier } from '../carrier.js';\nimport { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.encodePolyfill ? carrier.encodePolyfill(input) : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.decodePolyfill ? carrier.decodePolyfill(input) : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    {\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    },\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  raw_security: 'security',\n  log: 'log_item',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent?.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata?.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dynamicSamplingContext,\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '../semanticAttributes.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nfunction setMeasurement(name, value, unit, activeSpan = getActiveSpan()) {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && debug.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\nexport { setMeasurement, timedEventsToMeasurements };\n//# sourceMappingURL=measurement.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { createSpanEnvelope } from '../envelope.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { generateTraceId, generateSpanId } from '../utils/propagationContext.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanTimeInputToSeconds, convertSpanLinksForEnvelope, getRootSpan, getStatusMessage, spanToJSON, getSpanDescendants, spanToTransactionTraceContext } from '../utils/spanUtils.js';\nimport { timestampInSeconds } from '../utils/time.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { logSpanEnd } from './logSpans.js';\nimport { timedEventsToMeasurements } from './measurement.js';\nimport { getCapturedScopesOnSpan } from './utils.js';\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nclass SentrySpan  {\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /** The timed events added to this span. */\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    this._links = spanContext.links;\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /** @inheritDoc */\n   addLink(link) {\n    if (this._links) {\n      this._links.push(link);\n    } else {\n      this._links = [link];\n    }\n    return this;\n  }\n\n  /** @inheritDoc */\n   addLinks(links) {\n    if (this._links) {\n      this._links.push(...links);\n    } else {\n      this._links = links;\n    }\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n   updateStartTime(timeInput) {\n    this._startTime = spanTimeInputToSeconds(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'custom');\n    return this;\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n    logSpanEnd(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return {\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: getStatusMessage(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._attributes[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n      measurements: timedEventsToMeasurements(this._events),\n      is_segment: (this._isStandaloneSpan && getRootSpan(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? getRootSpan(this).spanContext().spanId : undefined,\n      links: convertSpanLinksForEnvelope(this._links),\n    };\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n   addEvent(\n    name,\n    attributesOrStartTime,\n    startTime,\n  ) {\n    DEBUG_BUILD && debug.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || timestampInSeconds();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event = {\n      name,\n      time: spanTimeInputToSeconds(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n   isStandaloneSpan() {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n   _onSpanEnded() {\n    const client = getClient();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === getRootSpan(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      if (this._sampled) {\n        sendSpanEnvelope(createSpanEnvelope([this], client));\n      } else {\n        DEBUG_BUILD &&\n          debug.log('[Tracing] Discarding standalone span because its trace was not chosen to be sampled.');\n        if (client) {\n          client.recordDroppedEvent('sample_rate', 'span');\n        }\n      }\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = getCapturedScopesOnSpan(this).scope || getCurrentScope();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _convertSpanToTransaction() {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan(spanToJSON(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && debug.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    const normalizedRequest = capturedSpanScope?.getScopeData().sdkProcessingMetadata?.normalizedRequest;\n\n    if (this._sampled !== true) {\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = getSpanDescendants(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => spanToJSON(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n    // remove internal root span attributes we don't need to send.\n    /* eslint-disable @typescript-eslint/no-dynamic-delete */\n    delete this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    spans.forEach(span => {\n      delete span.data[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    });\n    // eslint-enabled-next-line @typescript-eslint/no-dynamic-delete\n\n    const transaction = {\n      contexts: {\n        trace: spanToTransactionTraceContext(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n      },\n      request: normalizedRequest,\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = timedEventsToMeasurements(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        debug.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value) {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input) {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span) {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\nexport { SentrySpan };\n//# sourceMappingURL=sentrySpan.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { spanToJSON, getRootSpan, spanIsSampled } from '../utils/spanUtils.js';\n\n/**\n * Print a log message for a started span.\n */\nfunction logSpanStart(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = spanIsSampled(span);\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = spanToJSON(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  debug.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nfunction logSpanEnd(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  debug.log(msg);\n}\n\nexport { logSpanEnd, logSpanStart };\n//# sourceMappingURL=logSpans.js.map\n","import { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nimport { dsnToString } from './utils/dsn.js';\nimport { getSdkMetadataForEnvelopeHeader, createEventEnvelopeHeaders, createEnvelope, createSpanEnvelopeItem } from './utils/envelope.js';\nimport { spanToJSON, showSpanDropWarning } from './utils/spanUtils.js';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata?.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nfunction createSpanEnvelope(spans, client) {\n  function dscHasRequiredProps(dsc) {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client?.getDsn();\n  const tunnel = client?.getOptions().tunnel;\n\n  const headers = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client?.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span) => {\n        const spanJson = spanToJSON(span);\n        const processedSpan = beforeSendSpan(spanJson);\n\n        if (!processedSpan) {\n          showSpanDropWarning();\n          return spanJson;\n        }\n\n        return processedSpan;\n      }\n    : spanToJSON;\n\n  const items = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope(headers, items);\n}\n\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { withScope, getCurrentScope, getClient, getIsolationScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled.js';\nimport { parseSampleRate } from '../utils/parseSampleRate.js';\nimport { generateTraceId } from '../utils/propagationContext.js';\nimport { _setSpanForScope, _getSpanForScope } from '../utils/spanOnScope.js';\nimport { spanToJSON, spanTimeInputToSeconds, getRootSpan, addChildSpanToSpan, spanIsSampled } from '../utils/spanUtils.js';\nimport { propagationContextFromHeaders } from '../utils/tracing.js';\nimport { getDynamicSamplingContextFromSpan, freezeDscOnSpan } from './dynamicSamplingContext.js';\nimport { logSpanStart } from './logSpans.js';\nimport { sampleSpan } from './sampling.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SentrySpan } from './sentrySpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { setCapturedScopesOnSpan } from './utils.js';\n\n/* eslint-disable max-lines */\n\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan, scope: customScope } = options;\n\n  // We still need to fork a potentially passed scope, as we set the active span on it\n  // and we need to ensure that it is cleaned up properly once the span ends.\n  const customForkedScope = customScope?.clone();\n\n  return withScope(customForkedScope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope, customParentSpan);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n        () => {\n          activeSpan.end();\n        },\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. Use `span.end()` to end the span.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan, scope: customScope } = options;\n\n  const customForkedScope = customScope?.clone();\n\n  return withScope(customForkedScope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope, customParentSpan);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        // We pass the `finish` function to the callback, so the user can finish the span manually\n        // this is mainly here for historic purposes because previously, we instructed users to call\n        // `finish` instead of `span.end()` to also clean up the scope. Nowadays, calling `span.end()`\n        // or `finish` has the same effect and we simply leave it here to avoid breaking user code.\n        () => callback(activeSpan, () => activeSpan.end()),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(options) {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(options);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  // If `options.scope` is defined, we use this as as a wrapper,\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = options.scope\n    ? (callback) => withScope(options.scope, callback)\n    : customParentSpan !== undefined\n      ? (callback) => withActiveSpan(customParentSpan, callback)\n      : (callback) => callback();\n\n  return wrapper(() => {\n    const scope = getCurrentScope();\n    const parentSpan = getParentSpan(scope, customParentSpan);\n\n    const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n\n    if (shouldSkipSpan) {\n      return new SentryNonRecordingSpan();\n    }\n\n    return createChildOrRootSpan({\n      parentSpan,\n      spanArguments,\n      forceTransaction,\n      scope,\n    });\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nconst continueTrace = (\n  options\n\n,\n  callback,\n) => {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.continueTrace) {\n    return acs.continueTrace(options, callback);\n  }\n\n  const { sentryTrace, baggage } = options;\n\n  return withScope(scope => {\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return withScope(scope => {\n    _setSpanForScope(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return withScope(scope => {\n    // Note: We do not wait for the callback to finish before we reset the metadata\n    // the reason for this is that otherwise, in the browser this can lead to very weird behavior\n    // as there is only a single top scope, if the callback takes longer to finish,\n    // other, unrelated spans may also be suppressed, which we do not want\n    // so instead, we only suppress tracing synchronoysly in the browser\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    const res = callback();\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: undefined });\n    return res;\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nfunction startNewTrace(callback) {\n  return withScope(scope => {\n    scope.setPropagationContext({\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    });\n    DEBUG_BUILD && debug.log(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanArguments,\n  forceTransaction,\n  scope,\n}\n\n) {\n  if (!hasSpansEnabled()) {\n    const span = new SentryNonRecordingSpan();\n\n    // If this is a root span, we ensure to freeze a DSC\n    // So we can have at least partial data here\n    if (forceTransaction || !parentSpan) {\n      const dsc = {\n        sampled: 'false',\n        sample_rate: '0',\n        transaction: spanArguments.name,\n        ...getDynamicSamplingContextFromSpan(span),\n      } ;\n      freezeDscOnSpan(span, dsc);\n    }\n\n    return span;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanArguments);\n    addChildSpanToSpan(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = spanIsSampled(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    freezeDscOnSpan(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      freezeDscOnSpan(span, dsc);\n    }\n  }\n\n  logSpanStart(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n */\nfunction parseSentrySpanArguments(options) {\n  const exp = options.experimental || {};\n  const initialCtx = {\n    isStandalone: exp.standalone,\n    ...options,\n  };\n\n  if (options.startTime) {\n    const ctx = { ...initialCtx };\n    ctx.startTimestamp = spanTimeInputToSeconds(options.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs() {\n  const carrier = getMainCarrier();\n  return getAsyncContextStrategy(carrier);\n}\n\nfunction _startRootSpan(spanArguments, scope, parentSampled) {\n  const client = getClient();\n  const options = client?.getOptions() || {};\n\n  const { name = '' } = spanArguments;\n\n  const mutableSpanSamplingData = { spanAttributes: { ...spanArguments.attributes }, spanName: name, parentSampled };\n\n  // we don't care about the decision for the moment; this is just a placeholder\n  client?.emit('beforeSampling', mutableSpanSamplingData, { decision: false });\n\n  // If hook consumers override the parentSampled flag, we will use that value instead of the actual one\n  const finalParentSampled = mutableSpanSamplingData.parentSampled ?? parentSampled;\n  const finalAttributes = mutableSpanSamplingData.spanAttributes;\n\n  const currentPropagationContext = scope.getPropagationContext();\n  const [sampled, sampleRate, localSampleRateWasApplied] = scope.getScopeData().sdkProcessingMetadata[\n    SUPPRESS_TRACING_KEY\n  ]\n    ? [false]\n    : sampleSpan(\n        options,\n        {\n          name,\n          parentSampled: finalParentSampled,\n          attributes: finalAttributes,\n          parentSampleRate: parseSampleRate(currentPropagationContext.dsc?.sample_rate),\n        },\n        currentPropagationContext.sampleRand,\n      );\n\n  const rootSpan = new SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]:\n        sampleRate !== undefined && localSampleRateWasApplied ? sampleRate : undefined,\n      ...finalAttributes,\n    },\n    sampled,\n  });\n\n  if (!sampled && client) {\n    DEBUG_BUILD && debug.log('[Tracing] Discarding root span because its trace was not chosen to be sampled.');\n    client.recordDroppedEvent('sample_rate', 'transaction');\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan, scope, spanArguments) {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : spanIsSampled(parentSpan);\n\n  const childSpan = sampled\n    ? new SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new SentryNonRecordingSpan({ traceId });\n\n  addChildSpanToSpan(parentSpan, childSpan);\n\n  const client = getClient();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope, customParentSpan) {\n  // always use the passed in span directly\n  if (customParentSpan) {\n    return customParentSpan ;\n  }\n\n  // This is different from `undefined` as it means the user explicitly wants no parent span\n  if (customParentSpan === null) {\n    return undefined;\n  }\n\n  const span = _getSpanForScope(scope) ;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = getClient();\n  const options = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return getRootSpan(span) ;\n  }\n\n  return span;\n}\n\nfunction getActiveSpanWrapper(parentSpan) {\n  return parentSpan !== undefined\n    ? (callback) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback) => callback();\n}\n\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan };\n//# sourceMappingURL=trace.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled.js';\nimport { parseSampleRate } from '../utils/parseSampleRate.js';\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nfunction sampleSpan(\n  options,\n  samplingContext,\n  sampleRand,\n) {\n  // nothing to do if span recording is not enabled\n  if (!hasSpansEnabled(options)) {\n    return [false];\n  }\n\n  let localSampleRateWasApplied = undefined;\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      ...samplingContext,\n      inheritOrSampleWith: fallbackSampleRate => {\n        // If we have an incoming parent sample rate, we'll just use that one.\n        // The sampling decision will be inherited because of the sample_rand that was generated when the trace reached the incoming boundaries of the SDK.\n        if (typeof samplingContext.parentSampleRate === 'number') {\n          return samplingContext.parentSampleRate;\n        }\n\n        // Fallback if parent sample rate is not on the incoming trace (e.g. if there is no baggage)\n        // This is to provide backwards compatibility if there are incoming traces from older SDKs that don't send a parent sample rate or a sample rand. In these cases we just want to force either a sampling decision on the downstream traces via the sample rate.\n        if (typeof samplingContext.parentSampled === 'boolean') {\n          return Number(samplingContext.parentSampled);\n        }\n\n        return fallbackSampleRate;\n      },\n    });\n    localSampleRateWasApplied = true;\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    localSampleRateWasApplied = true;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = parseSampleRate(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    DEBUG_BUILD &&\n      debug.warn(\n        `[Tracing] Discarding root span because of invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    DEBUG_BUILD &&\n      debug.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate, localSampleRateWasApplied];\n  }\n\n  // We always compare the sample rand for the current execution context against the chosen sample rate.\n  // Read more: https://develop.sentry.dev/sdk/telemetry/traces/#propagated-random-value\n  const shouldSample = sampleRand < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    DEBUG_BUILD &&\n      debug.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n  }\n\n  return [shouldSample, parsedSampleRate, localSampleRateWasApplied];\n}\n\nexport { sampleSpan };\n//# sourceMappingURL=sampling.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '../semanticAttributes.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled.js';\nimport { _setSpanForScope } from '../utils/spanOnScope.js';\nimport { getActiveSpan, spanTimeInputToSeconds, getSpanDescendants, spanToJSON, removeChildSpanFromSpan } from '../utils/spanUtils.js';\nimport { timestampInSeconds } from '../utils/time.js';\nimport { getDynamicSamplingContextFromSpan, freezeDscOnSpan } from './dynamicSamplingContext.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SentrySpan } from './sentrySpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { startInactiveSpan } from './trace.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  childSpanTimeout: 15000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nfunction startIdleSpan(startSpanOptions, options = {}) {\n  // Activities store a list of active spans\n  const activities = new Map();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID;\n\n  // The reason why the span was finished\n  let _finishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed = !options.disableAutoFinish;\n\n  const _cleanupHooks = [];\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = getClient();\n\n  if (!client || !hasSpansEnabled()) {\n    const span = new SentryNonRecordingSpan();\n\n    const dsc = {\n      sample_rate: '0',\n      sampled: 'false',\n      ...getDynamicSamplingContextFromSpan(span),\n    } ;\n    freezeDscOnSpan(span, dsc);\n\n    return span;\n  }\n\n  const scope = getCurrentScope();\n  const previousActiveSpan = getActiveSpan();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // If the span is non-recording, nothing more to do here...\n      // This is the case if tracing is enabled but this specific span was not sampled\n      if (thisArg instanceof SentryNonRecordingSpan) {\n        return;\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || timestampInSeconds();\n      const spanEndTimestamp = spanTimeInputToSeconds(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = getSpanDescendants(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => spanToJSON(span).timestamp)\n        .filter(timestamp => !!timestamp) ;\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = spanToJSON(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout() {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp) {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp) {\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId) {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = timestampInSeconds();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId) {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = timestampInSeconds();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp) {\n    _finished = true;\n    activities.clear();\n\n    _cleanupHooks.forEach(cleanup => cleanup());\n\n    _setSpanForScope(scope, previousActiveSpan);\n\n    const spanJSON = spanToJSON(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data;\n    if (!attributes[SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    debug.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = getSpanDescendants(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        DEBUG_BUILD &&\n          debug.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = spanToJSON(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          debug.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          debug.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        removeChildSpanFromSpan(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  _cleanupHooks.push(\n    client.on('spanStart', startedSpan => {\n      // If we already finished the idle span,\n      // or if this is the idle span itself being started,\n      // or if the started span has already been closed,\n      // we don't care about it for activity\n      if (\n        _finished ||\n        startedSpan === span ||\n        !!spanToJSON(startedSpan).timestamp ||\n        (startedSpan instanceof SentrySpan && startedSpan.isStandaloneSpan())\n      ) {\n        return;\n      }\n\n      const allSpans = getSpanDescendants(span);\n\n      // If the span that was just started is a child of the idle span, we should track it\n      if (allSpans.includes(startedSpan)) {\n        _pushActivity(startedSpan.spanContext().spanId);\n      }\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('spanEnd', endedSpan => {\n      if (_finished) {\n        return;\n      }\n\n      _popActivity(endedSpan.spanContext().spanId);\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n      if (spanToAllowAutoFinish === span) {\n        _autoFinishAllowed = true;\n        _restartIdleTimeout();\n\n        if (activities.size) {\n          _restartChildSpanTimeout();\n        }\n      }\n    }),\n  );\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options) {\n  const span = startInactiveSpan(options);\n\n  _setSpanForScope(getCurrentScope(), span);\n\n  DEBUG_BUILD && debug.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n\nexport { TRACING_DEFAULTS, startIdleSpan };\n//# sourceMappingURL=idleSpan.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { addGlobalErrorInstrumentationHandler } from '../instrument/globalError.js';\nimport { addGlobalUnhandledRejectionInstrumentationHandler } from '../instrument/globalUnhandledRejection.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  /**\n   * If an error or unhandled promise occurs, we mark the active root span as failed\n   */\n  function errorCallback() {\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const message = 'internal_error';\n      DEBUG_BUILD && debug.log(`[Tracing] Root span: ${message} -> Global error occurred`);\n      rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message });\n    }\n  }\n\n  // The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n  // node.js default exit behaviour\n  errorCallback.tag = 'sentry_tracingErrorCallback';\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\nexport { registerSpanErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue ?? 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// sentry-specific change:\n// add optional param to not check for responseStart (see comment below)\nconst getNavigationEntry = (checkResponseStart = true) => {\n  const navigationEntry = WINDOW.performance?.getEntriesByType?.('navigation')[0];\n  // Check to ensure the `responseStart` property is present and valid.\n  // In some cases a zero value is reported by the browser (for\n  // privacy/security reasons), and in other cases (bugs) the value is\n  // negative or is larger than the current page time. Ignore these cases:\n  // - https://github.com/GoogleChrome/web-vitals/issues/137\n  // - https://github.com/GoogleChrome/web-vitals/issues/162\n  // - https://github.com/GoogleChrome/web-vitals/issues/275\n  if (\n    // sentry-specific change:\n    // We don't want to check for responseStart for our own use of `getNavigationEntry`\n    !checkResponseStart ||\n    (navigationEntry && navigationEntry.responseStart > 0 && navigationEntry.responseStart < performance.now())\n  ) {\n    return navigationEntry;\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return navEntry?.activationStart ?? 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value = -1) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document?.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document?.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v5-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst instanceMap = new WeakMap();\n\n/**\n * A function that accepts and identity object and a class object and returns\n * either a new instance of that class or an existing instance, if the\n * identity object was previously used.\n */\nfunction initUnique(identityObj, ClassObj) {\n  if (!instanceMap.get(identityObj)) {\n    instanceMap.set(identityObj, new ClassObj());\n  }\n  return instanceMap.get(identityObj) ;\n}\n\nexport { initUnique };\n//# sourceMappingURL=initUnique.js.map\n","/* eslint-disable jsdoc/require-jsdoc */\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass LayoutShiftManager {constructor() { LayoutShiftManager.prototype.__init.call(this);LayoutShiftManager.prototype.__init2.call(this); }\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init() {this._sessionValue = 0;}\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init2() {this._sessionEntries = [];}\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _processEntry(entry) {\n    // Only count layout shifts without recent user input.\n    if (entry.hadRecentInput) return;\n\n    const firstSessionEntry = this._sessionEntries[0];\n    // This previously used `this._sessionEntries.at(-1)` but that is ES2022. We support ES2021 and earlier.\n    const lastSessionEntry = this._sessionEntries[this._sessionEntries.length - 1];\n\n    // If the entry occurred less than 1 second after the previous entry\n    // and less than 5 seconds after the first entry in the session,\n    // include the entry in the current session. Otherwise, start a new\n    // session.\n    if (\n      this._sessionValue &&\n      firstSessionEntry &&\n      lastSessionEntry &&\n      entry.startTime - lastSessionEntry.startTime < 1000 &&\n      entry.startTime - firstSessionEntry.startTime < 5000\n    ) {\n      this._sessionValue += entry.value;\n      this._sessionEntries.push(entry);\n    } else {\n      this._sessionValue = entry.value;\n      this._sessionEntries = [entry];\n    }\n\n    this._onAfterProcessingUnexpectedShift?.(entry);\n  }\n}\n\nexport { LayoutShiftManager };\n//# sourceMappingURL=LayoutShiftManager.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts = {},\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe({ type, buffered: true, ...opts });\n      return po;\n    }\n  } catch {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return () => {\n    if (!called) {\n      cb();\n      called = true;\n    }\n  };\n};\n\nexport { runOnce };\n//# sourceMappingURL=runOnce.js.map\n","import { WINDOW } from '../../../types.js';\nimport { getActivationStart } from './getActivationStart.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  return WINDOW.document?.visibilityState === 'hidden' && !WINDOW.document?.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeChangeListeners();\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst removeChangeListeners = () => {\n  removeEventListener('visibilitychange', onVisibilityUpdate, true);\n  removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // Check if we have a previous hidden `visibility-state` performance entry.\n    const activationStart = getActivationStart();\n    const firstVisibilityStateHiddenTime = !WINDOW.document.prerendering\n      ? globalThis.performance\n          .getEntriesByType('visibility-state')\n          .filter(e => e.name === 'hidden' && e.startTime > activationStart)[0]?.startTime\n      : undefined;\n\n    // Prefer that, but if it's not available and the document is hidden when\n    // this code runs, assume it was hidden since navigation start. This isn't\n    // a perfect heuristic, but it's the best we can do until the\n    // `visibility-state` performance entry becomes available in all browsers.\n    firstHiddenTime = firstVisibilityStateHiddenTime ?? initHiddenTime();\n    // We're still going to listen to for changes so we can handle things like\n    // bfcache restores and/or prerender without having to examine individual\n    // timestamps in detail.\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (WINDOW.document?.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\nexport { whenActivated };\n//# sourceMappingURL=whenActivated.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      for (const entry of entries) {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      }\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\nexport { FCPThresholds, onFCP };\n//# sourceMappingURL=onFCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { initUnique } from './lib/initUnique.js';\nimport { LayoutShiftManager } from './lib/LayoutShiftManager.js';\nimport { observe } from './lib/observe.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { onFCP } from './onFCP.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report;\n\n      const layoutShiftManager = initUnique(opts, LayoutShiftManager);\n\n      const handleEntries = (entries) => {\n        for (const entry of entries) {\n          layoutShiftManager._processEntry(entry);\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (layoutShiftManager._sessionValue > metric.value) {\n          metric.value = layoutShiftManager._sessionValue;\n          metric.entries = layoutShiftManager._sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        WINDOW.document?.addEventListener('visibilitychange', () => {\n          if (WINDOW.document?.visibilityState === 'hidden') {\n            handleEntries(po.takeRecords() );\n            report(true);\n          }\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        WINDOW?.setTimeout?.(report);\n      }\n    }),\n  );\n};\n\nexport { CLSThresholds, onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Sentry-specific change:\n// This function's logic was NOT updated to web-vitals 4.2.4 or 5.x but we continue\n// to use the web-vitals 3.5.2 versiondue to us having stricter browser support.\n// PR with context that made the changes: https://github.com/GoogleChrome/web-vitals/pull/442/files#r1530492402\n// The PR removed listening to the `pagehide` event, in favour of only listening to `visibilitychange` event.\n// This is \"more correct\" but some browsers we still support (Safari <14.4) don't fully support `visibilitychange`\n// or have known bugs w.r.t the `visibilitychange` event.\n// TODO (v10): If we decide to drop support for Safari 14.4, we can use the logic from web-vitals 4.2.4\n// In this case, we also need to update the integration tests that currently trigger the `pagehide` event to\n// simulate the page being hidden.\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || WINDOW.document?.visibilityState === 'hidden') {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * // Sentry: web-vitals removed FID reporting from v5. We're keeping it around\n * for the time being.\n * // TODO(v10): Remove FID reporting!\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // sentry: TODO: Figure out if we can use new whinIdleOrHidden insteard of onHidden\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\nexport { FIDThresholds, onFID };\n//# sourceMappingURL=getFID.js.map\n","import { observe } from '../observe.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  entries.forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\nexport { getInteractionCount, initInteractionCountPolyfill };\n//# sourceMappingURL=interactionCountPolyfill.js.map\n","import { getInteractionCount } from './polyfills/interactionCountPolyfill.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nlet prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n/**\n *\n */\nclass InteractionManager {constructor() { InteractionManager.prototype.__init.call(this);InteractionManager.prototype.__init2.call(this); }\n  /**\n   * A list of longest interactions on the page (by latency) sorted so the\n   * longest one is first. The list is at most MAX_INTERACTIONS_TO_CONSIDER\n   * long.\n   */\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init() {this._longestInteractionList = [];}\n\n  /**\n   * A mapping of longest interactions by their interaction ID.\n   * This is used for faster lookup.\n   */\n  // eslint-disable-next-line @sentry-internal/sdk/no-class-field-initializers, @typescript-eslint/explicit-member-accessibility\n  __init2() {this._longestInteractionMap = new Map();}\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility, jsdoc/require-jsdoc\n  _resetInteractions() {\n    prevInteractionCount = getInteractionCount();\n    this._longestInteractionList.length = 0;\n    this._longestInteractionMap.clear();\n  }\n\n  /**\n   * Returns the estimated p98 longest interaction based on the stored\n   * interaction candidates and the interaction count for the current page.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _estimateP98LongestInteraction() {\n    const candidateInteractionIndex = Math.min(\n      this._longestInteractionList.length - 1,\n      Math.floor(getInteractionCountForNavigation() / 50),\n    );\n\n    return this._longestInteractionList[candidateInteractionIndex];\n  }\n\n  /**\n   * Takes a performance entry and adds it to the list of worst interactions\n   * if its duration is long enough to make it among the worst. If the\n   * entry is part of an existing interaction, it is merged and the latency\n   * and entries list is updated as needed.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  _processEntry(entry) {\n    this._onBeforeProcessingEntry?.(entry);\n\n    // Skip further processing for entries that cannot be INP candidates.\n    if (!(entry.interactionId || entry.entryType === 'first-input')) return;\n\n    // The least-long of the 10 longest interactions.\n    const minLongestInteraction = this._longestInteractionList.at(-1);\n\n    let interaction = this._longestInteractionMap.get(entry.interactionId);\n\n    // Only process the entry if it's possibly one of the ten longest,\n    // or if it's part of an existing interaction.\n    if (\n      interaction ||\n      this._longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n      // If the above conditions are false, `minLongestInteraction` will be set.\n      entry.duration > minLongestInteraction._latency\n    ) {\n      // If the interaction already exists, update it. Otherwise create one.\n      if (interaction) {\n        // If the new entry has a longer duration, replace the old entries,\n        // otherwise add to the array.\n        if (entry.duration > interaction._latency) {\n          interaction.entries = [entry];\n          interaction._latency = entry.duration;\n        } else if (entry.duration === interaction._latency && entry.startTime === interaction.entries[0].startTime) {\n          interaction.entries.push(entry);\n        }\n      } else {\n        interaction = {\n          id: entry.interactionId,\n          entries: [entry],\n          _latency: entry.duration,\n        };\n        this._longestInteractionMap.set(interaction.id, interaction);\n        this._longestInteractionList.push(interaction);\n      }\n\n      // Sort the entries by latency (descending) and keep only the top ten.\n      this._longestInteractionList.sort((a, b) => b._latency - a._latency);\n      if (this._longestInteractionList.length > MAX_INTERACTIONS_TO_CONSIDER) {\n        const removedInteractions = this._longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER);\n\n        for (const interaction of removedInteractions) {\n          this._longestInteractionMap.delete(interaction.id);\n        }\n      }\n\n      // Call any post-processing on the interaction\n      this._onAfterProcessingINPCandidate?.(interaction);\n    }\n  }\n}\n\nexport { InteractionManager };\n//# sourceMappingURL=InteractionManager.js.map\n","import { WINDOW } from '../../../types.js';\nimport { onHidden } from './onHidden.js';\nimport { runOnce } from './runOnce.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs the passed callback during the next idle period, or immediately\n * if the browser's visibility state is (or becomes) hidden.\n */\nconst whenIdleOrHidden = (cb) => {\n  const rIC = WINDOW.requestIdleCallback || WINDOW.setTimeout;\n\n  // If the document is hidden, run the callback immediately, otherwise\n  // race an idle callback with the next `visibilitychange` event.\n  if (WINDOW.document?.visibilityState === 'hidden') {\n    cb();\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    cb = runOnce(cb);\n    rIC(cb);\n    // sentry: we use onHidden instead of directly listening to visibilitychange\n    // because some browsers we still support (Safari <14.4) don't fully support\n    // `visibilitychange` or have known bugs w.r.t the `visibilitychange` event.\n    onHidden(cb);\n  }\n};\n\nexport { whenIdleOrHidden };\n//# sourceMappingURL=whenIdleOrHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { initUnique } from './lib/initUnique.js';\nimport { InteractionManager } from './lib/InteractionManager.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdleOrHidden } from './lib/whenIdleOrHidden.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n// The default `durationThreshold` used across this library for observing\n// `event` entries via PerformanceObserver.\nconst DEFAULT_DURATION_THRESHOLD = 40;\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed\n * to control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 will not\n * be reported. To avoid reporting no interactions in these cases, the library\n * will fall back to the input delay of the first interaction. Note that this\n * will not affect your 75th percentile INP value unless that value is also\n * less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  // Return if the browser doesn't support all APIs needed to measure INP.\n  if (!(globalThis.PerformanceEventTiming && 'interactionId' in PerformanceEventTiming.prototype)) {\n    return;\n  }\n\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const interactionManager = initUnique(opts, InteractionManager);\n\n    const handleEntries = (entries) => {\n      // Queue the `handleEntries()` callback in the next idle task.\n      // This is needed to increase the chances that all event entries that\n      // occurred between the user interaction and the next paint\n      // have been dispatched. Note: there is currently an experiment\n      // running in Chrome (EventTimingKeypressAndCompositionInteractionId)\n      // 123+ that if rolled out fully may make this no longer necessary.\n      whenIdleOrHidden(() => {\n        for (const entry of entries) {\n          interactionManager._processEntry(entry);\n        }\n\n        const inp = interactionManager._estimateP98LongestInteraction();\n\n        if (inp && inp._latency !== metric.value) {\n          metric.value = inp._latency;\n          metric.entries = inp.entries;\n          report();\n        }\n      });\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold ?? DEFAULT_DURATION_THRESHOLD,\n    });\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // Also observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      po.observe({ type: 'first-input', buffered: true });\n\n      // sentry: we use onHidden instead of directly listening to visibilitychange\n      // because some browsers we still support (Safari <14.4) don't fully support\n      // `visibilitychange` or have known bugs w.r.t the `visibilitychange` event.\n      onHidden(() => {\n        handleEntries(po.takeRecords() );\n        report(true);\n      });\n    }\n  });\n};\n\nexport { INPThresholds, onINP };\n//# sourceMappingURL=getINP.js.map\n","/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nclass LCPEntryManager {\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility, jsdoc/require-jsdoc\n  _processEntry(entry) {\n    this._onBeforeProcessingEntry?.(entry);\n  }\n}\n\nexport { LCPEntryManager };\n//# sourceMappingURL=LCPEntryManager.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { initUnique } from './lib/initUnique.js';\nimport { LCPEntryManager } from './lib/LCPEntryManager.js';\nimport { observe } from './lib/observe.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdleOrHidden } from './lib/whenIdleOrHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report;\n\n    const lcpEntryManager = initUnique(opts, LCPEntryManager);\n\n    const handleEntries = (entries) => {\n      // If reportAllChanges is set then call this function for each entry,\n      // otherwise only consider the last one.\n      if (!opts.reportAllChanges) {\n        // eslint-disable-next-line no-param-reassign\n        entries = entries.slice(-1);\n      }\n\n      for (const entry of entries) {\n        lcpEntryManager._processEntry(entry);\n\n        // Only report if the page wasn't hidden prior to LCP.\n        if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was prerendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n          metric.entries = [entry];\n          report();\n        }\n      }\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      // Ensure this logic only runs once, since it can be triggered from\n      // any of three different event listeners below.\n      const stopListening = runOnce(() => {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        report(true);\n      });\n\n      // Stop listening after input or visibilitychange.\n      // Note: while scrolling is an input that stops LCP observation, it's\n      // unreliable since it can be programmatically generated.\n      // See: https://github.com/GoogleChrome/web-vitals/issues/75\n      for (const type of ['keydown', 'click', 'visibilitychange']) {\n        // Wrap the listener in an idle callback so it's run in a separate\n        // task to reduce potential INP impact.\n        // https://github.com/GoogleChrome/web-vitals/issues/383\n        if (WINDOW.document) {\n          addEventListener(type, () => whenIdleOrHidden(stopListening), {\n            capture: true,\n            once: true,\n          });\n        }\n      }\n    }\n  });\n};\n\nexport { LCPThresholds, onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (WINDOW.document?.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document?.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navigationEntry = getNavigationEntry();\n\n    if (navigationEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navigationEntry.responseStart - getActivationStart(), 0);\n\n      metric.entries = [navigationEntry];\n      report(true);\n    }\n  });\n};\n\nexport { TTFBThresholds, onTTFB };\n//# sourceMappingURL=onTTFB.js.map\n","import { debug, getFunctionName } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\nimport { onTTFB } from './web-vitals/onTTFB.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(callback) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers?.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        debug.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler, isPerformanceEventTiming };\n//# sourceMappingURL=instrument.js.map\n","import { spanToJSON, withActiveSpan, startInactiveSpan, getClient, getCurrentScope } from '@sentry/core';\nimport { WINDOW } from '../types.js';\nimport { onHidden } from './web-vitals/lib/onHidden.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/**\n * Starts an inactive, standalone span used to send web vital values to Sentry.\n * DO NOT use this for arbitrary spans, as these spans require special handling\n * during ingestion to extract metrics.\n *\n * This function adds a bunch of attributes and data to the span that's shared\n * by all web vital standalone spans. However, you need to take care of adding\n * the actual web vital value as an event to the span. Also, you need to assign\n * a transaction name and some other values that are specific to the web vital.\n *\n * Ultimately, you also need to take care of ending the span to send it off.\n *\n * @param options\n *\n * @returns an inactive, standalone and NOT YET ended span\n */\nfunction startStandaloneWebVitalSpan(options) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const { name, transaction, attributes: passedAttributes, startTime } = options;\n\n  const { release, environment, sendDefaultPii } = client.getOptions();\n  // We need to get the replay, user, and activeTransaction from the current scope\n  // so that we can associate replay id, profile id, and a user display to the span\n  const replay = client.getIntegrationByName('Replay');\n  const replayId = replay?.getReplayId();\n\n  const scope = getCurrentScope();\n\n  const user = scope.getUser();\n  const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n\n  let profileId;\n  try {\n    // @ts-expect-error skip optional chaining to save bundle size with try catch\n    profileId = scope.getScopeData().contexts.profile.profile_id;\n  } catch {\n    // do nothing\n  }\n\n  const attributes = {\n    release,\n    environment,\n\n    user: userDisplay || undefined,\n    profile_id: profileId || undefined,\n    replay_id: replayId || undefined,\n\n    transaction,\n\n    // Web vital score calculation relies on the user agent to account for different\n    // browsers setting different thresholds for what is considered a good/meh/bad value.\n    // For example: Chrome vs. Chrome Mobile\n    'user_agent.original': WINDOW.navigator?.userAgent,\n\n    // This tells Sentry to infer the IP address from the request\n    'client.address': sendDefaultPii ? '{{auto}}' : undefined,\n\n    ...passedAttributes,\n  };\n\n  return startInactiveSpan({\n    name,\n    attributes,\n    startTime,\n    experimental: {\n      standalone: true,\n    },\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') ;\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] ;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\n/**\n * Generic support check for web vitals\n */\nfunction supportsWebVital(entryType) {\n  try {\n    return PerformanceObserver.supportedEntryTypes.includes(entryType);\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Listens for events on which we want to collect a previously accumulated web vital value.\n * Currently, this includes:\n *\n * - pagehide (i.e. user minimizes browser window, hides tab, etc)\n * - soft navigation (we only care about the vital of the initially loaded route)\n *\n * As a \"side-effect\", this function will also collect the span id of the pageload span.\n *\n * @param collectorCallback the callback to be called when the first of these events is triggered. Parameters:\n * - event: the event that triggered the reporting of the web vital value.\n * - pageloadSpanId: the span id of the pageload span. This is used to link the web vital span to the pageload span.\n */\nfunction listenForWebVitalReportEvents(\n  client,\n  collectorCallback,\n) {\n  let pageloadSpanId;\n\n  let collected = false;\n  function _runCollectorCallbackOnce(event) {\n    if (!collected && pageloadSpanId) {\n      collectorCallback(event, pageloadSpanId);\n    }\n    collected = true;\n  }\n\n  onHidden(() => {\n    _runCollectorCallbackOnce('pagehide');\n  });\n\n  const unsubscribeStartNavigation = client.on('beforeStartNavigationSpan', (_, options) => {\n    // we only want to collect LCP if we actually navigate. Redirects should be ignored.\n    if (!options?.isRedirect) {\n      _runCollectorCallbackOnce('navigation');\n      unsubscribeStartNavigation?.();\n      unsubscribeAfterStartPageLoadSpan?.();\n    }\n  });\n\n  const unsubscribeAfterStartPageLoadSpan = client.on('afterStartPageLoadSpan', span => {\n    pageloadSpanId = span.spanContext().spanId;\n    unsubscribeAfterStartPageLoadSpan?.();\n  });\n}\n\nexport { extractNetworkProtocol, getBrowserPerformanceAPI, isMeasurementValue, listenForWebVitalReportEvents, msToSec, startAndEndSpan, startStandaloneWebVitalSpan, supportsWebVital };\n//# sourceMappingURL=utils.js.map\n","import { browserPerformanceTimeOrigin, spanToJSON, setMeasurement, getActiveSpan, parseUrl, stringMatchesSomePattern, isPrimitive, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, htmlTreeAsString, getComponentName } from '@sentry/core';\nimport { WINDOW } from '../types.js';\nimport { trackClsAsStandaloneSpan } from './cls.js';\nimport { addPerformanceInstrumentationHandler, addFidInstrumentationHandler, addLcpInstrumentationHandler, addTtfbInstrumentationHandler, addClsInstrumentationHandler } from './instrument.js';\nimport { trackLcpAsStandaloneSpan } from './lcp.js';\nimport { getBrowserPerformanceAPI, msToSec, startAndEndSpan, extractNetworkProtocol, isMeasurementValue } from './utils.js';\nimport { getActivationStart } from './web-vitals/lib/getActivationStart.js';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry.js';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher.js';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals({\n  recordClsStandaloneSpans,\n  recordLcpStandaloneSpans,\n  client,\n}) {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin()) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCleanupCallback = _trackFID();\n    const lcpCleanupCallback = recordLcpStandaloneSpans ? trackLcpAsStandaloneSpan(client) : _trackLCP();\n    const ttfbCleanupCallback = _trackTtfb();\n    const clsCleanupCallback = recordClsStandaloneSpans ? trackClsAsStandaloneSpan(client) : _trackCLS();\n\n    return () => {\n      fidCleanupCallback();\n      lcpCleanupCallback?.();\n      ttfbCleanupCallback();\n      clsCleanupCallback?.();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n\n    const { op: parentOp, start_timestamp: parentStartTimestamp } = spanToJSON(parent);\n\n    for (const entry of entries) {\n      const startTime = msToSec((browserPerformanceTimeOrigin() ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding a span if the long task started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n    }\n  });\n}\n\n/**\n * Start tracking long animation frames.\n */\nfunction startTrackingLongAnimationFrames() {\n  // NOTE: the current web-vitals version (3.5.2) does not support long-animation-frame, so\n  // we directly observe `long-animation-frame` events instead of through the web-vitals\n  // `observe` helper function.\n  const observer = new PerformanceObserver(list => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of list.getEntries() ) {\n      if (!entry.scripts[0]) {\n        continue;\n      }\n\n      const startTime = msToSec((browserPerformanceTimeOrigin() ) + entry.startTime);\n\n      const { start_timestamp: parentStartTimestamp, op: parentOp } = spanToJSON(parent);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding the span if the long animation frame started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n      const duration = msToSec(entry.duration);\n\n      const attributes = {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      };\n\n      const initialScript = entry.scripts[0];\n      const { invoker, invokerType, sourceURL, sourceFunctionName, sourceCharPosition } = initialScript;\n      attributes['browser.script.invoker'] = invoker;\n      attributes['browser.script.invoker_type'] = invokerType;\n      if (sourceURL) {\n        attributes['code.filepath'] = sourceURL;\n      }\n      if (sourceFunctionName) {\n        attributes['code.function'] = sourceFunctionName;\n      }\n      if (sourceCharPosition !== -1) {\n        attributes['browser.script.source_char_position'] = sourceCharPosition;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-animation-frame',\n        attributes,\n      });\n    }\n  });\n\n  observer.observe({ type: 'long-animation-frame', buffered: true });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of entries) {\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin() ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        startAndEndSpan(parent, startTime, startTime + duration, spanOptions);\n      }\n    }\n  });\n}\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value and last entry\n * to the `_measurements` object which ultimately is applied to the pageload span's measurements.\n */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin() );\n    const startTime = msToSec(entry.startTime);\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span, options) {\n  const performance = getBrowserPerformanceAPI();\n  const origin = browserPerformanceTimeOrigin();\n  if (!performance?.getEntries || !origin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  const timeOrigin = msToSec(origin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  performanceEntries.slice(_performanceCursor).forEach(entry => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(\n      // Inexplicably, Chrome sometimes emits a negative duration. We need to work around this.\n      // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display\n      // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.\n      // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.\n      Math.max(0, entry.duration),\n    );\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry , timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin, options.ignorePerformanceApiSpans);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(\n          span,\n          entry ,\n          entry.name,\n          startTime,\n          duration,\n          timeOrigin,\n          options.ignoreResourceSpans,\n        );\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If CLS standalone spans are enabled, don't record CLS as a measurement\n    if (!options.recordClsOnPageloadSpan) {\n      delete _measurements.cls;\n    }\n\n    // If LCP standalone spans are enabled, don't record LCP as a measurement\n    if (!options.recordLcpOnPageloadSpan) {\n      delete _measurements.lcp;\n    }\n\n    Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n      setMeasurement(measurementName, measurement.value, measurement.unit);\n    });\n\n    // Set timeOrigin which denotes the timestamp which to base the LCP/FCP/FP/TTFB measurements on\n    span.setAttribute('performance.timeOrigin', timeOrigin);\n\n    // In prerendering scenarios, where a page might be prefetched and pre-rendered before the user clicks the link,\n    // the navigation starts earlier than when the user clicks it. Web Vitals should always be based on the\n    // user-perceived time, so they are not reported from the actual start of the navigation, but rather from the\n    // time where the user actively started the navigation, for example by clicking a link.\n    // This is user action is called \"activation\" and the time between navigation and activation is stored in\n    // the `activationStart` attribute of the \"navigation\" PerformanceEntry.\n    span.setAttribute('performance.activationStart', getActivationStart());\n\n    _setWebVitalAttributes(span, options);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/**\n * Create measure related spans.\n * Exported only for tests.\n */\nfunction _addMeasureSpans(\n  span,\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n  ignorePerformanceApiSpans,\n) {\n  if (\n    ['mark', 'measure'].includes(entry.entryType) &&\n    stringMatchesSomePattern(entry.name, ignorePerformanceApiSpans)\n  ) {\n    return;\n  }\n\n  const navEntry = getNavigationEntry(false);\n  const requestTime = msToSec(navEntry ? navEntry.requestStart : 0);\n  // Because performance.measure accepts arbitrary timestamps it can produce\n  // spans that happen before the browser even makes a request for the page.\n  //\n  // An example of this is the automatically generated Next.js-before-hydration\n  // spans created by the Next.js framework.\n  //\n  // To prevent this we will pin the start timestamp to the request start time\n  // This does make duration inaccurate, so if this does happen, we will add\n  // an attribute to the span\n  const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n  const startTimeStamp = timeOrigin + startTime;\n  const measureEndTimestamp = startTimeStamp + duration;\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n\n  if (measureStartTimestamp !== startTimeStamp) {\n    attributes['sentry.browser.measure_happened_before_request'] = true;\n    attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n  }\n\n  _addDetailToSpanAttributes(attributes, entry );\n\n  // Measurements from third parties can be off, which would create invalid spans, dropping transactions in the process.\n  if (measureStartTimestamp <= measureEndTimestamp) {\n    startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n      name: entry.name ,\n      op: entry.entryType ,\n      attributes,\n    });\n  }\n}\n\nfunction _addDetailToSpanAttributes(attributes, performanceMeasure) {\n  try {\n    // Accessing detail might throw in some browsers (e.g., Firefox) due to security restrictions\n    const detail = performanceMeasure.detail;\n\n    if (!detail) {\n      return;\n    }\n\n    // Process detail based on its type\n    if (typeof detail === 'object') {\n      // Handle object details\n      for (const [key, value] of Object.entries(detail)) {\n        if (value && isPrimitive(value)) {\n          attributes[`sentry.browser.measure.detail.${key}`] = value ;\n        } else if (value !== undefined) {\n          try {\n            // This is user defined so we can't guarantee it's serializable\n            attributes[`sentry.browser.measure.detail.${key}`] = JSON.stringify(value);\n          } catch {\n            // Skip values that can't be stringified\n          }\n        }\n      }\n      return;\n    }\n\n    if (isPrimitive(detail)) {\n      // Handle primitive details\n      attributes['sentry.browser.measure.detail'] = detail ;\n      return;\n    }\n\n    try {\n      attributes['sentry.browser.measure.detail'] = JSON.stringify(detail);\n    } catch {\n      // Skip if stringification fails\n    }\n  } catch {\n    // Silently ignore any errors when accessing detail\n    // This handles the Firefox \"Permission denied to access object\" error\n  }\n}\n\n/**\n * Instrument navigation entries\n * exported only for tests\n */\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  (['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'] ).forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  entry,\n  event,\n  timeOrigin,\n  name = event,\n) {\n  const eventEnd = _getEndPropertyNameForNavigationTiming(event) ;\n  const end = entry[eventEnd];\n  const start = entry[`${event}Start`];\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: `browser.${name}`,\n    name: entry.name,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      ...(event === 'redirect' && entry.redirectCount != null ? { 'http.redirect_count': entry.redirectCount } : {}),\n    },\n  });\n}\n\nfunction _getEndPropertyNameForNavigationTiming(event) {\n  if (event === 'secureConnection') {\n    return 'connectEnd';\n  }\n  if (event === 'fetch') {\n    return 'domainLookupStart';\n  }\n  return `${event}End`;\n}\n\n/** Create request and response related spans */\nfunction _addRequest(span, entry, timeOrigin) {\n  const requestStartTimestamp = timeOrigin + msToSec(entry.requestStart );\n  const responseEndTimestamp = timeOrigin + msToSec(entry.responseEnd );\n  const responseStartTimestamp = timeOrigin + msToSec(entry.responseStart );\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(span, requestStartTimestamp, responseEndTimestamp, {\n      op: 'browser.request',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n\n    startAndEndSpan(span, responseStartTimestamp, responseEndTimestamp, {\n      op: 'browser.response',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n  }\n}\n\n/**\n * Create resource-related spans.\n * Exported only for tests.\n */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n  ignoreResourceSpans,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const op = entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other';\n  if (ignoreResourceSpans?.includes(op)) {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  // `deliveryType` is experimental and does not exist everywhere\n  const deliveryType = (entry ).deliveryType;\n  if (deliveryType != null) {\n    attributes['http.response_delivery_type'] = deliveryType;\n  }\n\n  // Types do not reflect this property yet\n  const renderBlockingStatus = (entry )\n    .renderBlockingStatus;\n  if (renderBlockingStatus) {\n    attributes['resource.render_blocking_status'] = renderBlockingStatus;\n  }\n\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  // Checking for only `undefined` and `null` is intentional because it's\n  // valid for `nextHopProtocol` to be an empty string.\n  if (entry.nextHopProtocol != null) {\n    const { name, version } = extractNetworkProtocol(entry.nextHopProtocol);\n    attributes['network.protocol.name'] = name;\n    attributes['network.protocol.version'] = version;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op,\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _setWebVitalAttributes(span, options) {\n  // Only add LCP attributes if LCP is being recorded on the pageload span\n  if (_lcpEntry && options.recordLcpOnPageloadSpan) {\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    if (_lcpEntry.loadTime != null) {\n      // loadTime is the time of LCP that's related to receiving the LCP element response..\n      span.setAttribute('lcp.loadTime', _lcpEntry.loadTime);\n    }\n\n    if (_lcpEntry.renderTime != null) {\n      // renderTime is loadTime + rendering time\n      // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n      // `Timing-Allow-Origin` header.\n      span.setAttribute('lcp.renderTime', _lcpEntry.renderTime);\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // Only add CLS attributes if CLS is being recorded on the pageload span\n  if (_clsEntry?.sources && options.recordClsOnPageloadSpan) {\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = getNavigationEntry(false);\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\nexport { _addMeasureSpans, _addNavigationSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=browserMetrics.js.map\n","import { debug, browserPerformanceTimeOrigin, getCurrentScope, htmlTreeAsString, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { addLcpInstrumentationHandler } from './instrument.js';\nimport { supportsWebVital, listenForWebVitalReportEvents, msToSec, startStandaloneWebVitalSpan } from './utils.js';\n\n/**\n * Starts tracking the Largest Contentful Paint on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop LCP measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the LCP value is sent as a standalone span and we stop\n * measuring LCP for subsequent routes.\n */\nfunction trackLcpAsStandaloneSpan(client) {\n  let standaloneLcpValue = 0;\n  let standaloneLcpEntry;\n\n  if (!supportsWebVital('largest-contentful-paint')) {\n    return;\n  }\n\n  const cleanupLcpHandler = addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    standaloneLcpValue = metric.value;\n    standaloneLcpEntry = entry;\n  }, true);\n\n  listenForWebVitalReportEvents(client, (reportEvent, pageloadSpanId) => {\n    _sendStandaloneLcpSpan(standaloneLcpValue, standaloneLcpEntry, pageloadSpanId, reportEvent);\n    cleanupLcpHandler();\n  });\n}\n\n/**\n * Exported only for testing!\n */\nfunction _sendStandaloneLcpSpan(\n  lcpValue,\n  entry,\n  pageloadSpanId,\n  reportEvent,\n) {\n  DEBUG_BUILD && debug.log(`Sending LCP span (${lcpValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin() || 0) + (entry?.startTime || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.element) : 'Largest contentful paint';\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.lcp',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.lcp',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: 0, // LCP is a point-in-time metric\n    // attach the pageload span id to the LCP span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n    // describes what triggered the web vital to be reported\n    'sentry.report_event': reportEvent,\n  };\n\n  if (entry) {\n    entry.element && (attributes['lcp.element'] = htmlTreeAsString(entry.element));\n    entry.id && (attributes['lcp.id'] = entry.id);\n\n    // Trim URL to the first 200 characters.\n    entry.url && (attributes['lcp.url'] = entry.url.trim().slice(0, 200));\n\n    // loadTime is the time of LCP that's related to receiving the LCP element response..\n    entry.loadTime != null && (attributes['lcp.loadTime'] = entry.loadTime);\n\n    // renderTime is loadTime + rendering time\n    // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n    // `Timing-Allow-Origin` header.\n    entry.renderTime != null && (attributes['lcp.renderTime'] = entry.renderTime);\n\n    entry.size != null && (attributes['lcp.size'] = entry.size);\n  }\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('lcp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: lcpValue,\n    });\n\n    // LCP is a point-in-time metric, so we end the span immediately\n    span.end(startTime);\n  }\n}\n\nexport { _sendStandaloneLcpSpan, trackLcpAsStandaloneSpan };\n//# sourceMappingURL=lcp.js.map\n","import { debug, browserPerformanceTimeOrigin, getCurrentScope, htmlTreeAsString, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { addClsInstrumentationHandler } from './instrument.js';\nimport { supportsWebVital, listenForWebVitalReportEvents, msToSec, startStandaloneWebVitalSpan } from './utils.js';\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop CLS measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the CLS value is sent as a standalone span and we stop\n * measuring CLS.\n */\nfunction trackClsAsStandaloneSpan(client) {\n  let standaloneCLsValue = 0;\n  let standaloneClsEntry;\n\n  if (!supportsWebVital('layout-shift')) {\n    return;\n  }\n\n  const cleanupClsHandler = addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    standaloneCLsValue = metric.value;\n    standaloneClsEntry = entry;\n  }, true);\n\n  listenForWebVitalReportEvents(client, (reportEvent, pageloadSpanId) => {\n    sendStandaloneClsSpan(standaloneCLsValue, standaloneClsEntry, pageloadSpanId, reportEvent);\n    cleanupClsHandler();\n  });\n}\n\nfunction sendStandaloneClsSpan(\n  clsValue,\n  entry,\n  pageloadSpanId,\n  reportEvent,\n) {\n  DEBUG_BUILD && debug.log(`Sending CLS span (${clsValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin() || 0) + (entry?.startTime || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.sources[0]?.node) : 'Layout shift';\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.cls',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.cls',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry?.duration || 0,\n    // attach the pageload span id to the CLS span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n    // describes what triggered the web vital to be reported\n    'sentry.report_event': reportEvent,\n  };\n\n  // Add CLS sources as span attributes to help with debugging layout shifts\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift/sources\n  if (entry?.sources) {\n    entry.sources.forEach((source, index) => {\n      attributes[`cls.source.${index + 1}`] = htmlTreeAsString(source.node);\n    });\n  }\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('cls', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: '',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: clsValue,\n    });\n\n    // LayoutShift performance entries always have a duration of 0, so we don't need to add `entry.duration` here\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration\n    span.end(startTime);\n  }\n}\n\nexport { trackClsAsStandaloneSpan };\n//# sourceMappingURL=cls.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, getRootSpan, spanToJSON, getCurrentScope, htmlTreeAsString, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { addPerformanceInstrumentationHandler, addInpInstrumentationHandler, isPerformanceEventTiming } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startStandaloneWebVitalSpan } from './utils.js';\n\nconst LAST_INTERACTIONS = [];\nconst INTERACTIONS_SPAN_MAP = new Map();\n\n/**\n * 60 seconds is the maximum for a plausible INP value\n * (source: Me)\n */\nconst MAX_PLAUSIBLE_INP_DURATION = 60;\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin()) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. #\n * exported only for testing\n */\nfunction _trackINP() {\n  return addInpInstrumentationHandler(_onInp);\n}\n\n/**\n * exported only for testing\n */\nconst _onInp = ({ metric }) => {\n  if (metric.value == undefined) {\n    return;\n  }\n\n  const duration = msToSec(metric.value);\n\n  // We received occasional reports of hour-long INP values.\n  // Therefore, we add a sanity check to avoid creating spans for\n  // unrealistically long INP durations.\n  if (duration > MAX_PLAUSIBLE_INP_DURATION) {\n    return;\n  }\n\n  const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n  if (!entry) {\n    return;\n  }\n\n  const { interactionId } = entry;\n  const interactionType = INP_ENTRY_MAP[entry.name];\n\n  /** Build the INP span, create an envelope from the span, and then send the envelope */\n  const startTime = msToSec((browserPerformanceTimeOrigin() ) + entry.startTime);\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n  // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n  // where we cache the route per interactionId\n  const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n\n  const spanToUse = cachedSpan || rootSpan;\n\n  // Else, we try to use the active span.\n  // Finally, we fall back to look at the transactionName on the scope\n  const routeName = spanToUse ? spanToJSON(spanToUse).description : getCurrentScope().getScopeData().transactionName;\n\n  const name = htmlTreeAsString(entry.target);\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${interactionType}`,\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry.duration,\n  };\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('inp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  }\n};\n\n/**\n * Register a listener to cache route information for INP interactions.\n */\nfunction registerInpInteractionListener() {\n  const handleEntries = ({ entries }) => {\n    const activeSpan = getActiveSpan();\n    const activeRootSpan = activeSpan && getRootSpan(activeSpan);\n\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !activeRootSpan) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() ;\n        INTERACTIONS_SPAN_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the span for this interaction\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nexport { _onInp, _trackINP, registerInpInteractionListener, startTrackingINP };\n//# sourceMappingURL=inp.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, getRootSpan, spanToJSON, getCurrentScope, timestampInSeconds, startSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { addPerformanceInstrumentationHandler } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec } from './utils.js';\n\n// ElementTiming interface based on the W3C spec\n\n/**\n * Start tracking ElementTiming performance entries.\n */\nfunction startTrackingElementTiming() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin()) {\n    return addPerformanceInstrumentationHandler('element', _onElementTiming);\n  }\n\n  return () => undefined;\n}\n\n/**\n * exported only for testing\n */\nconst _onElementTiming = ({ entries }) => {\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n  const transactionName = rootSpan\n    ? spanToJSON(rootSpan).description\n    : getCurrentScope().getScopeData().transactionName;\n\n  entries.forEach(entry => {\n    const elementEntry = entry ;\n\n    // Skip entries without identifier (elementtiming attribute)\n    if (!elementEntry.identifier) {\n      return;\n    }\n\n    // `name` contains the type of the element paint. Can be `'image-paint'` or `'text-paint'`.\n    // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming#instance_properties\n    const paintType = elementEntry.name ;\n\n    const renderTime = elementEntry.renderTime;\n    const loadTime = elementEntry.loadTime;\n\n    // starting the span at:\n    // - `loadTime` if available (should be available for all \"image-paint\" entries, 0 otherwise)\n    // - `renderTime` if available (available for all entries, except 3rd party images, but these should be covered by `loadTime`, 0 otherwise)\n    // - `timestampInSeconds()` as a safeguard\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming/renderTime#cross-origin_image_render_time\n    const [spanStartTime, spanStartTimeSource] = loadTime\n      ? [msToSec(loadTime), 'load-time']\n      : renderTime\n        ? [msToSec(renderTime), 'render-time']\n        : [timestampInSeconds(), 'entry-emission'];\n\n    const duration =\n      paintType === 'image-paint'\n        ? // for image paints, we can acually get a duration because image-paint entries also have a `loadTime`\n          // and `renderTime`. `loadTime` is the time when the image finished loading and `renderTime` is the\n          // time when the image finished rendering.\n          msToSec(Math.max(0, (renderTime ?? 0) - (loadTime ?? 0)))\n        : // for `'text-paint'` entries, we can't get a duration because the `loadTime` is always zero.\n          0;\n\n    const attributes = {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.elementtiming',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.elementtiming',\n      // name must be user-entered, so we can assume low cardinality\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'component',\n      // recording the source of the span start time, as it varies depending on available data\n      'sentry.span_start_time_source': spanStartTimeSource,\n      'sentry.transaction_name': transactionName,\n      'element.id': elementEntry.id,\n      'element.type': elementEntry.element?.tagName?.toLowerCase() || 'unknown',\n      'element.size':\n        elementEntry.naturalWidth && elementEntry.naturalHeight\n          ? `${elementEntry.naturalWidth}x${elementEntry.naturalHeight}`\n          : undefined,\n      'element.render_time': renderTime,\n      'element.load_time': loadTime,\n      // `url` is `0`(number) for text paints (hence we fall back to undefined)\n      'element.url': elementEntry.url || undefined,\n      'element.identifier': elementEntry.identifier,\n      'element.paint_type': paintType,\n    };\n\n    startSpan(\n      {\n        name: `element[${elementEntry.identifier}]`,\n        attributes,\n        startTime: spanStartTime,\n        onlyIfParent: true,\n      },\n      span => {\n        span.end(spanStartTime + duration);\n      },\n    );\n  });\n};\n\nexport { _onElementTiming, startTrackingElementTiming };\n//# sourceMappingURL=elementTiming.js.map\n","import { isThenable } from './is.js';\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(fn, onError, onFinally = () => {}) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if (isThenable(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\nexport { handleCallbackErrors };\n//# sourceMappingURL=handleCallbackErrors.js.map\n","import { getRootSpan, getCurrentScope, SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE, spanToJSON, debug, SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport '@sentry-internal/browser-utils';\nimport '../stack-parsers.js';\nimport '../integrations/breadcrumbs.js';\nimport '../integrations/browserapierrors.js';\nimport '../integrations/browsersession.js';\nimport '../integrations/globalhandlers.js';\nimport '../integrations/httpcontext.js';\nimport '../integrations/linkederrors.js';\n\n// 1h in seconds\nconst PREVIOUS_TRACE_MAX_DURATION = 3600;\n\n// session storage key\nconst PREVIOUS_TRACE_KEY = 'sentry_previous_trace';\n\nconst PREVIOUS_TRACE_TMP_SPAN_ATTRIBUTE = 'sentry.previous_trace';\n\n/**\n * Takes care of linking traces and applying the (consistent) sampling behavoiour based on the passed options\n * @param options - options for linking traces and consistent trace sampling (@see BrowserTracingOptions)\n * @param client - Sentry client\n */\nfunction linkTraces(\n  client,\n  {\n    linkPreviousTrace,\n    consistentTraceSampling,\n  }\n\n,\n) {\n  const useSessionStorage = linkPreviousTrace === 'session-storage';\n\n  let inMemoryPreviousTraceInfo = useSessionStorage ? getPreviousTraceFromSessionStorage() : undefined;\n\n  client.on('spanStart', span => {\n    if (getRootSpan(span) !== span) {\n      return;\n    }\n\n    const oldPropagationContext = getCurrentScope().getPropagationContext();\n    inMemoryPreviousTraceInfo = addPreviousTraceSpanLink(inMemoryPreviousTraceInfo, span, oldPropagationContext);\n\n    if (useSessionStorage) {\n      storePreviousTraceInSessionStorage(inMemoryPreviousTraceInfo);\n    }\n  });\n\n  let isFirstTraceOnPageload = true;\n  if (consistentTraceSampling) {\n    /*\n    When users opt into `consistentTraceSampling`, we need to ensure that we propagate\n    the previous trace's sample rate and rand to the current trace. This is necessary because otherwise, span\n    metric extrapolation is inaccurate, as we'd propagate too high of a sample rate for the subsequent traces.\n\n    So therefore, we pretend that the previous trace was the parent trace of the newly started trace. To do that,\n    we mutate the propagation context of the current trace and set the sample rate and sample rand of the previous trace.\n    Timing-wise, it is fine because it happens before we even sample the root span.\n\n    @see https://github.com/getsentry/sentry-javascript/issues/15754\n    */\n    client.on('beforeSampling', mutableSamplingContextData => {\n      if (!inMemoryPreviousTraceInfo) {\n        return;\n      }\n\n      const scope = getCurrentScope();\n      const currentPropagationContext = scope.getPropagationContext();\n\n      // We do not want to force-continue the sampling decision if we continue a trace\n      // that was started on the backend. Most prominently, this will happen in MPAs where\n      // users hard-navigate between pages. In this case, the sampling decision of a potentially\n      // started trace on the server takes precedence.\n      // Why? We want to prioritize inter-trace consistency over intra-trace consistency.\n      if (isFirstTraceOnPageload && currentPropagationContext.parentSpanId) {\n        isFirstTraceOnPageload = false;\n        return;\n      }\n\n      scope.setPropagationContext({\n        ...currentPropagationContext,\n        dsc: {\n          ...currentPropagationContext.dsc,\n          sample_rate: String(inMemoryPreviousTraceInfo.sampleRate),\n          sampled: String(spanContextSampled(inMemoryPreviousTraceInfo.spanContext)),\n        },\n        sampleRand: inMemoryPreviousTraceInfo.sampleRand,\n      });\n\n      mutableSamplingContextData.parentSampled = spanContextSampled(inMemoryPreviousTraceInfo.spanContext);\n      mutableSamplingContextData.parentSampleRate = inMemoryPreviousTraceInfo.sampleRate;\n\n      mutableSamplingContextData.spanAttributes = {\n        ...mutableSamplingContextData.spanAttributes,\n        [SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE]: inMemoryPreviousTraceInfo.sampleRate,\n      };\n    });\n  }\n}\n\n/**\n * Adds a previous_trace span link to the passed span if the passed\n * previousTraceInfo is still valid.\n *\n * @returns the updated previous trace info (based on the current span/trace) to\n * be used on the next call\n */\nfunction addPreviousTraceSpanLink(\n  previousTraceInfo,\n  span,\n  oldPropagationContext,\n) {\n  const spanJson = spanToJSON(span);\n\n  function getSampleRate() {\n    try {\n      return (\n        Number(oldPropagationContext.dsc?.sample_rate) ?? Number(spanJson.data?.[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE])\n      );\n    } catch {\n      return 0;\n    }\n  }\n\n  const updatedPreviousTraceInfo = {\n    spanContext: span.spanContext(),\n    startTimestamp: spanJson.start_timestamp,\n    sampleRate: getSampleRate(),\n    sampleRand: oldPropagationContext.sampleRand,\n  };\n\n  if (!previousTraceInfo) {\n    return updatedPreviousTraceInfo;\n  }\n\n  const previousTraceSpanCtx = previousTraceInfo.spanContext;\n  if (previousTraceSpanCtx.traceId === spanJson.trace_id) {\n    // This means, we're still in the same trace so let's not update the previous trace info\n    // or add a link to the current span.\n    // Once we move away from the long-lived, route-based trace model, we can remove this cases\n    return previousTraceInfo;\n  }\n\n  // Only add the link if the startTimeStamp of the previous trace's root span is within\n  // PREVIOUS_TRACE_MAX_DURATION (1h) of the current root span's startTimestamp\n  // This is done to\n  // - avoid adding links to \"stale\" traces\n  // - enable more efficient querying for previous/next traces in Sentry\n  if (Date.now() / 1000 - previousTraceInfo.startTimestamp <= PREVIOUS_TRACE_MAX_DURATION) {\n    if (DEBUG_BUILD) {\n      debug.log(\n        `Adding previous_trace ${previousTraceSpanCtx} link to span ${{\n          op: spanJson.op,\n          ...span.spanContext(),\n        }}`,\n      );\n    }\n\n    span.addLink({\n      context: previousTraceSpanCtx,\n      attributes: {\n        [SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE]: 'previous_trace',\n      },\n    });\n\n    // TODO: Remove this once EAP can store span links. We currently only set this attribute so that we\n    // can obtain the previous trace information from the EAP store. Long-term, EAP will handle\n    // span links and then we should remove this again. Also throwing in a TODO(v10), to remind us\n    // to check this at v10 time :)\n    span.setAttribute(\n      PREVIOUS_TRACE_TMP_SPAN_ATTRIBUTE,\n      `${previousTraceSpanCtx.traceId}-${previousTraceSpanCtx.spanId}-${\n        spanContextSampled(previousTraceSpanCtx) ? 1 : 0\n      }`,\n    );\n  }\n\n  return updatedPreviousTraceInfo;\n}\n\n/**\n * Stores @param previousTraceInfo in sessionStorage.\n */\nfunction storePreviousTraceInSessionStorage(previousTraceInfo) {\n  try {\n    WINDOW.sessionStorage.setItem(PREVIOUS_TRACE_KEY, JSON.stringify(previousTraceInfo));\n  } catch (e) {\n    // Ignore potential errors (e.g. if sessionStorage is not available)\n    DEBUG_BUILD && debug.warn('Could not store previous trace in sessionStorage', e);\n  }\n}\n\n/**\n * Retrieves the previous trace from sessionStorage if available.\n */\nfunction getPreviousTraceFromSessionStorage() {\n  try {\n    const previousTraceInfo = WINDOW.sessionStorage?.getItem(PREVIOUS_TRACE_KEY);\n    // @ts-expect-error - intentionally risking JSON.parse throwing when previousTraceInfo is null to save bundle size\n    return JSON.parse(previousTraceInfo);\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * see {@link import('@sentry/core').spanIsSampled}\n */\nfunction spanContextSampled(ctx) {\n  return ctx.traceFlags === 0x1;\n}\n\nexport { PREVIOUS_TRACE_KEY, PREVIOUS_TRACE_MAX_DURATION, PREVIOUS_TRACE_TMP_SPAN_ATTRIBUTE, addPreviousTraceSpanLink, getPreviousTraceFromSessionStorage, linkTraces, spanContextSampled, storePreviousTraceInSessionStorage };\n//# sourceMappingURL=linkedTraces.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getClient, getCurrentScope } from '../currentScopes.js';\nimport { isEnabled } from '../exports.js';\nimport { debug } from './debug-logger.js';\nimport { getActiveSpan, spanToTraceHeader } from './spanUtils.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromScope } from '../tracing/dynamicSamplingContext.js';\nimport { TRACEPARENT_REGEXP, generateSentryTraceHeader } from './tracing.js';\nimport { dynamicSamplingContextToSentryBaggageHeader } from './baggage.js';\n\n/**\n * Extracts trace propagation data from the current span or from the client's scope (via transaction or propagation\n * context) and serializes it to `sentry-trace` and `baggage` values to strings. These values can be used to propagate\n * a trace via our tracing Http headers or Html `<meta>` tags.\n *\n * This function also applies some validation to the generated sentry-trace and baggage values to ensure that\n * only valid strings are returned.\n *\n * @returns an object with the tracing data values. The object keys are the name of the tracing key to be used as header\n * or meta tag name.\n */\nfunction getTraceData(options = {}) {\n  const client = options.client || getClient();\n  if (!isEnabled() || !client) {\n    return {};\n  }\n\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getTraceData) {\n    return acs.getTraceData(options);\n  }\n\n  const scope = options.scope || getCurrentScope();\n  const span = options.span || getActiveSpan();\n  const sentryTrace = span ? spanToTraceHeader(span) : scopeToTraceHeader(scope);\n  const dsc = span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromScope(client, scope);\n  const baggage = dynamicSamplingContextToSentryBaggageHeader(dsc);\n\n  const isValidSentryTraceHeader = TRACEPARENT_REGEXP.test(sentryTrace);\n  if (!isValidSentryTraceHeader) {\n    debug.warn('Invalid sentry-trace data. Cannot generate trace data');\n    return {};\n  }\n\n  return {\n    'sentry-trace': sentryTrace,\n    baggage,\n  };\n}\n\n/**\n * Get a sentry-trace header value for the given scope.\n */\nfunction scopeToTraceHeader(scope) {\n  const { traceId, sampled, propagationSpanId } = scope.getPropagationContext();\n  return generateSentryTraceHeader(traceId, propagationSpanId, sampled);\n}\n\nexport { getTraceData };\n//# sourceMappingURL=traceData.js.map\n","import { getClient } from './currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from './semanticAttributes.js';\nimport { getActiveSpan } from './utils/spanUtils.js';\nimport { setHttpStatus, SPAN_STATUS_ERROR } from './tracing/spanstatus.js';\nimport { isRequest, isInstanceOf } from './utils/is.js';\nimport { hasSpansEnabled } from './utils/hasSpansEnabled.js';\nimport { SENTRY_BAGGAGE_KEY_PREFIX } from './utils/baggage.js';\nimport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nimport { startInactiveSpan } from './tracing/trace.js';\nimport { getTraceData } from './utils/traceData.js';\nimport { parseStringToURLObject, getSanitizedUrlStringFromUrlObject, isURLObjectRelative } from './utils/url.js';\n\n/**\n * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!handlerData.fetchData) {\n    return undefined;\n  }\n\n  const { method, url } = handlerData.fetchData;\n\n  const shouldCreateSpanResult = hasSpansEnabled() && shouldCreateSpan(url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan(getSpanStartOptions(url, method, spanOrigin))\n      : new SentryNonRecordingSpan();\n\n  handlerData.fetchData.__span = span.spanContext().spanId;\n  spans[span.spanContext().spanId] = span;\n\n  if (shouldAttachHeaders(handlerData.fetchData.url)) {\n    const request = handlerData.args[0];\n\n    const options = handlerData.args[1] || {};\n\n    const headers = _addTracingHeadersToFetchRequest(\n      request,\n      options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasSpansEnabled() && hasParent ? span : undefined,\n    );\n    if (headers) {\n      // Ensure this is actually set, if no options have been passed previously\n      handlerData.args[1] = options;\n      options.headers = headers;\n    }\n  }\n\n  const client = getClient();\n\n  if (client) {\n    const fetchHint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp: handlerData.startTimestamp,\n      endTimestamp: handlerData.endTimestamp,\n    } ;\n\n    client.emit('beforeOutgoingRequestSpan', span, fetchHint);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n * exported only for testing purposes\n *\n * When we determine if we should add a baggage header, there are 3 cases:\n * 1. No previous baggage header -> add baggage\n * 2. Previous baggage header has no sentry baggage values -> add our baggage\n * 3. Previous baggage header has sentry baggage values -> do nothing (might have been added manually by users)\n */\n// eslint-disable-next-line complexity -- yup it's this complicated :(\nfunction _addTracingHeadersToFetchRequest(\n  request,\n  fetchOptionsObj\n\n,\n  span,\n) {\n  const traceHeaders = getTraceData({ span });\n  const sentryTrace = traceHeaders['sentry-trace'];\n  const baggage = traceHeaders.baggage;\n\n  // Nothing to do, when we return undefined here, the original headers will be used\n  if (!sentryTrace) {\n    return undefined;\n  }\n\n  const originalHeaders = fetchOptionsObj.headers || (isRequest(request) ? request.headers : undefined);\n\n  if (!originalHeaders) {\n    return { ...traceHeaders };\n  } else if (isHeaders(originalHeaders)) {\n    const newHeaders = new Headers(originalHeaders);\n\n    // We don't want to override manually added sentry headers\n    if (!newHeaders.get('sentry-trace')) {\n      newHeaders.set('sentry-trace', sentryTrace);\n    }\n\n    if (baggage) {\n      const prevBaggageHeader = newHeaders.get('baggage');\n\n      if (!prevBaggageHeader) {\n        newHeaders.set('baggage', baggage);\n      } else if (!baggageHeaderHasSentryBaggageValues(prevBaggageHeader)) {\n        newHeaders.set('baggage', `${prevBaggageHeader},${baggage}`);\n      }\n    }\n\n    return newHeaders;\n  } else if (Array.isArray(originalHeaders)) {\n    const newHeaders = [...originalHeaders];\n\n    if (!originalHeaders.find(header => header[0] === 'sentry-trace')) {\n      newHeaders.push(['sentry-trace', sentryTrace]);\n    }\n\n    const prevBaggageHeaderWithSentryValues = originalHeaders.find(\n      header => header[0] === 'baggage' && baggageHeaderHasSentryBaggageValues(header[1]),\n    );\n\n    if (baggage && !prevBaggageHeaderWithSentryValues) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push(['baggage', baggage]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingSentryTraceHeader = 'sentry-trace' in originalHeaders ? originalHeaders['sentry-trace'] : undefined;\n\n    const existingBaggageHeader = 'baggage' in originalHeaders ? originalHeaders.baggage : undefined;\n    const newBaggageHeaders = existingBaggageHeader\n      ? Array.isArray(existingBaggageHeader)\n        ? [...existingBaggageHeader]\n        : [existingBaggageHeader]\n      : [];\n\n    const prevBaggageHeaderWithSentryValues =\n      existingBaggageHeader &&\n      (Array.isArray(existingBaggageHeader)\n        ? existingBaggageHeader.find(headerItem => baggageHeaderHasSentryBaggageValues(headerItem))\n        : baggageHeaderHasSentryBaggageValues(existingBaggageHeader));\n\n    if (baggage && !prevBaggageHeaderWithSentryValues) {\n      newBaggageHeaders.push(baggage);\n    }\n\n    return {\n      ...(originalHeaders ),\n      'sentry-trace': (existingSentryTraceHeader ) ?? sentryTrace,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength = handlerData.response?.headers?.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n  }\n  span.end();\n}\n\nfunction baggageHeaderHasSentryBaggageValues(baggageHeader) {\n  return baggageHeader.split(',').some(baggageEntry => baggageEntry.trim().startsWith(SENTRY_BAGGAGE_KEY_PREFIX));\n}\n\nfunction isHeaders(headers) {\n  return typeof Headers !== 'undefined' && isInstanceOf(headers, Headers);\n}\n\nfunction getSpanStartOptions(\n  url,\n  method,\n  spanOrigin,\n) {\n  const parsedUrl = parseStringToURLObject(url);\n  return {\n    name: parsedUrl ? `${method} ${getSanitizedUrlStringFromUrlObject(parsedUrl)}` : method,\n    attributes: getFetchSpanAttributes(url, parsedUrl, method, spanOrigin),\n  };\n}\n\nfunction getFetchSpanAttributes(\n  url,\n  parsedUrl,\n  method,\n  spanOrigin,\n) {\n  const attributes = {\n    url,\n    type: 'fetch',\n    'http.method': method,\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n  };\n  if (parsedUrl) {\n    if (!isURLObjectRelative(parsedUrl)) {\n      attributes['http.url'] = parsedUrl.href;\n      attributes['server.address'] = parsedUrl.host;\n    }\n    if (parsedUrl.search) {\n      attributes['http.query'] = parsedUrl.search;\n    }\n    if (parsedUrl.hash) {\n      attributes['http.fragment'] = parsedUrl.hash;\n    }\n  }\n  return attributes;\n}\n\nexport { _addTracingHeadersToFetchRequest, instrumentFetchRequest };\n//# sourceMappingURL=fetch.js.map\n","import { browserPerformanceTimeOrigin } from '@sentry/core';\nimport { extractNetworkProtocol } from '@sentry-internal/browser-utils';\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin() || performance.timeOrigin) + time) / 1000;\n}\n\n/**\n * Converts a PerformanceResourceTiming entry to span data for the resource span.\n *\n * @param resourceTiming\n * @returns An array where the first element is the attribute name and the second element is the attribute value.\n */\nfunction resourceTimingToSpanAttributes(\n  resourceTiming,\n) {\n  const timingSpanData = [];\n  // Checking for only `undefined` and `null` is intentional because it's\n  // valid for `nextHopProtocol` to be an empty string.\n  if (resourceTiming.nextHopProtocol != undefined) {\n    const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n    timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n  }\n  if (!browserPerformanceTimeOrigin()) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\nexport { resourceTimingToSpanAttributes };\n//# sourceMappingURL=resource-timing.js.map\n","import { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, instrumentFetchRequest, parseUrl, getLocationHref, stringMatchesSomePattern, spanToJSON, hasSpansEnabled, setHttpStatus, stripUrlQueryAndFragment, getActiveSpan, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SentryNonRecordingSpan, getClient, getTraceData } from '@sentry/core';\nimport { addXhrInstrumentationHandler, addPerformanceInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { WINDOW } from '../helpers.js';\nimport { resourceTimingToSpanAttributes } from './resource-timing.js';\n\n/** Options for Request Instrumentation */\n\nconst responseToSpanId = new WeakMap();\nconst spanIdToEndTimestamp = new Map();\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  trackFetchStreamPerformance: false,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(client, _options) {\n  const {\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    tracePropagationTargets,\n    onRequestSpanStart,\n  } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  const shouldAttachHeadersWithTargets = (url) => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans = {};\n\n  if (traceFetch) {\n    // Keeping track of http requests, whose body payloads resolved later than the initial resolved request\n    // e.g. streaming using server sent events (SSE)\n    client.addEventProcessor(event => {\n      if (event.type === 'transaction' && event.spans) {\n        event.spans.forEach(span => {\n          if (span.op === 'http.client') {\n            const updatedTimestamp = spanIdToEndTimestamp.get(span.span_id);\n            if (updatedTimestamp) {\n              span.timestamp = updatedTimestamp / 1000;\n              spanIdToEndTimestamp.delete(span.span_id);\n            }\n          }\n        });\n      }\n      return event;\n    });\n\n    if (trackFetchStreamPerformance) {\n      addFetchEndInstrumentationHandler(handlerData => {\n        if (handlerData.response) {\n          const span = responseToSpanId.get(handlerData.response);\n          if (span && handlerData.endTimestamp) {\n            spanIdToEndTimestamp.set(span, handlerData.endTimestamp);\n          }\n        }\n      });\n    }\n\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n\n      if (handlerData.response && handlerData.fetchData.__span) {\n        responseToSpanId.set(handlerData.response, handlerData.fetchData.__span);\n      }\n\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n\n        if (enableHTTPTimings) {\n          addHTTPTimings(createdSpan);\n        }\n\n        onRequestSpanStart?.(createdSpan, { headers: handlerData.headers });\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (createdSpan) {\n        if (enableHTTPTimings) {\n          addHTTPTimings(createdSpan);\n        }\n\n        let headers;\n        try {\n          headers = new Headers(handlerData.xhr.__sentry_xhr_v3__?.request_headers);\n        } catch {\n          // noop\n        }\n        onRequestSpanStart?.(createdSpan, { headers });\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = spanToJSON(span).data;\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanAttributes = resourceTimingToSpanAttributes(entry);\n        spanAttributes.forEach(attributeArray => span.setAttribute(...attributeArray));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nfunction shouldAttachHeaders(\n  targetUrl,\n  tracePropagationTargets,\n) {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = getLocationHref();\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr?.[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const { url, method } = sentryXhrData;\n\n  const shouldCreateSpanResult = hasSpansEnabled() && shouldCreateSpan(url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(url);\n  const parsedUrl = fullUrl ? parseUrl(fullUrl) : parseUrl(url);\n\n  const urlForSpanName = stripUrlQueryAndFragment(url);\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${method} ${urlForSpanName}`,\n          attributes: {\n            url,\n            type: 'xhr',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': parsedUrl?.host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n            ...(parsedUrl?.search && { 'http.query': parsedUrl?.search }),\n            ...(parsedUrl?.hash && { 'http.fragment': parsedUrl?.hash }),\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  if (shouldAttachHeaders(url)) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasSpansEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  const client = getClient();\n  if (client) {\n    client.emit('beforeOutgoingRequestSpan', span, handlerData );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr, span) {\n  const { 'sentry-trace': sentryTrace, baggage } = getTraceData({ span });\n\n  if (sentryTrace) {\n    setHeaderOnXhr(xhr, sentryTrace, baggage);\n  }\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  const originalHeaders = xhr.__sentry_xhr_v3__?.request_headers;\n\n  if (originalHeaders?.['sentry-trace']) {\n    // bail if a sentry-trace header is already set\n    return;\n  }\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // only add our headers if\n      // - no pre-existing baggage header exists\n      // - or it is set and doesn't yet contain sentry values\n      const originalBaggageHeader = originalHeaders?.['baggage'];\n      if (!originalBaggageHeader || !baggageHeaderHasSentryValues(originalBaggageHeader)) {\n        // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n        // We can therefore simply set a baggage header without checking what was there before\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        xhr.setRequestHeader('baggage', sentryBaggageHeader);\n      }\n    }\n  } catch {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction baggageHeaderHasSentryValues(baggageHeader) {\n  return baggageHeader.split(',').some(value => value.trim().startsWith('sentry-'));\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { TRACING_DEFAULTS, getLocationHref, browserPerformanceTimeOrigin, parseStringToURLObject, registerSpanErrorInstrumentation, GLOBAL_OBJ, getClient, debug, getIsolationScope, generateTraceId, getCurrentScope, propagationContextFromHeaders, spanToJSON, dateTimestampInSeconds, timestampInSeconds, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, startInactiveSpan, startIdleSpan, getDynamicSamplingContextFromSpan, spanIsSampled, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, addNonEnumerableProperty, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { addHistoryInstrumentationHandler, registerInpInteractionListener, startTrackingWebVitals, startTrackingINP, startTrackingElementTiming, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingInteractions, addPerformanceEntries } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW, getHttpRequestData } from '../helpers.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { linkTraces } from './linkedTraces.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableLongAnimationFrame: true,\n  enableInp: true,\n  enableElementTiming: true,\n  ignoreResourceSpans: [],\n  ignorePerformanceApiSpans: [],\n  detectRedirects: true,\n  linkPreviousTrace: 'in-memory',\n  consistentTraceSampling: false,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  const latestRoute = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /**\n   * This is just a small wrapper that makes `document` optional.\n   * We want to be extra-safe and always check that this exists, to ensure weird environments do not blow up.\n   */\n  const optionalWindowDocument = WINDOW.document ;\n\n  const {\n    enableInp,\n    enableElementTiming,\n    enableLongTask,\n    enableLongAnimationFrame,\n    _experiments: { enableInteractions, enableStandaloneClsSpans, enableStandaloneLcpSpans },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    ignoreResourceSpans,\n    ignorePerformanceApiSpans,\n    instrumentPageLoad,\n    instrumentNavigation,\n    detectRedirects,\n    linkPreviousTrace,\n    consistentTraceSampling,\n    onRequestSpanStart,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  let _collectWebVitals;\n  let lastInteractionTimestamp;\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client, startSpanOptions, makeActive = true) {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    if (!makeActive) {\n      // We want to ensure this has 0s duration\n      const now = dateTimestampInSeconds();\n      startInactiveSpan({\n        ...finalStartSpanOptions,\n        startTime: now,\n      }).end(now);\n      return;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        // This will generally always be defined here, because it is set in `setup()` of the integration\n        // but technically, it is optional, so we guard here to be extra safe\n        _collectWebVitals?.();\n        addPerformanceEntries(span, {\n          recordClsOnPageloadSpan: !enableStandaloneClsSpans,\n          recordLcpOnPageloadSpan: !enableStandaloneLcpSpans,\n          ignoreResourceSpans,\n          ignorePerformanceApiSpans,\n        });\n        setActiveIdleSpan(client, undefined);\n\n        // A trace should stay consistent over the entire timespan of one route - even after the pageload/navigation ended.\n        // Only when another navigation happens, we want to create a new trace.\n        // This way, e.g. errors that occur after the pageload span ended are still associated to the pageload trace.\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          traceId: idleSpan.spanContext().traceId,\n          sampled: spanIsSampled(idleSpan),\n          dsc: getDynamicSamplingContextFromSpan(span),\n        });\n      },\n    });\n\n    setActiveIdleSpan(client, idleSpan);\n\n    function emitFinish() {\n      if (optionalWindowDocument && ['interactive', 'complete'].includes(optionalWindowDocument.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && optionalWindowDocument) {\n      optionalWindowDocument.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    setup(client) {\n      registerSpanErrorInstrumentation();\n\n      _collectWebVitals = startTrackingWebVitals({\n        recordClsStandaloneSpans: enableStandaloneClsSpans || false,\n        recordLcpStandaloneSpans: enableStandaloneLcpSpans || false,\n        client,\n      });\n\n      if (enableInp) {\n        startTrackingINP();\n      }\n\n      if (enableElementTiming) {\n        startTrackingElementTiming();\n      }\n\n      if (\n        enableLongAnimationFrame &&\n        GLOBAL_OBJ.PerformanceObserver &&\n        PerformanceObserver.supportedEntryTypes &&\n        PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')\n      ) {\n        startTrackingLongAnimationFrames();\n      } else if (enableLongTask) {\n        startTrackingLongTasks();\n      }\n\n      if (enableInteractions) {\n        startTrackingInteractions();\n      }\n\n      if (detectRedirects && optionalWindowDocument) {\n        const interactionHandler = () => {\n          lastInteractionTimestamp = timestampInSeconds();\n        };\n        addEventListener('click', interactionHandler, { capture: true });\n        addEventListener('keydown', interactionHandler, { capture: true, passive: true });\n      }\n\n      function maybeEndActiveSpan() {\n        const activeSpan = getActiveIdleSpan(client);\n\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && debug.log(`[Tracing] Finishing current active span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open active span, we need to finish it before creating an new one.\n          activeSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'cancelled');\n          activeSpan.end();\n        }\n      }\n\n      client.on('startNavigationSpan', (startSpanOptions, navigationOptions) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        if (navigationOptions?.isRedirect) {\n          DEBUG_BUILD &&\n            debug.warn('[Tracing] Detected redirect, navigation span will not be the root span, but a child span.');\n          _createRouteSpan(\n            client,\n            {\n              op: 'navigation.redirect',\n              ...startSpanOptions,\n            },\n            false,\n          );\n          return;\n        }\n\n        maybeEndActiveSpan();\n\n        getIsolationScope().setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n        const scope = getCurrentScope();\n        scope.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n        // We reset this to ensure we do not have lingering incorrect data here\n        // places that call this hook may set this where appropriate - else, the URL at span sending time is used\n        scope.setSDKProcessingMetadata({\n          normalizedRequest: undefined,\n        });\n\n        _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n        maybeEndActiveSpan();\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n\n        const scope = getCurrentScope();\n        scope.setPropagationContext(propagationContext);\n\n        // We store the normalized request data on the scope, so we get the request data at time of span creation\n        // otherwise, the URL etc. may already be of the following navigation, and we'd report the wrong URL\n        scope.setSDKProcessingMetadata({\n          normalizedRequest: getHttpRequestData(),\n        });\n\n        _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n    },\n    afterAllSetup(client) {\n      let startingUrl = getLocationHref();\n\n      if (linkPreviousTrace !== 'off') {\n        linkTraces(client, { linkPreviousTrace, consistentTraceSampling });\n      }\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          const origin = browserPerformanceTimeOrigin();\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: origin ? origin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl?.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            startingUrl = undefined;\n            const parsed = parseStringToURLObject(to);\n            const activeSpan = getActiveIdleSpan(client);\n            const navigationIsRedirect =\n              activeSpan && detectRedirects && isRedirect(activeSpan, lastInteractionTimestamp);\n            startBrowserTracingNavigationSpan(\n              client,\n              {\n                name: parsed?.pathname || WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              },\n              { url: to, isRedirect: navigationIsRedirect },\n            );\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(client, idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener();\n      }\n\n      instrumentOutgoingRequests(client, {\n        traceFetch,\n        traceXHR,\n        trackFetchStreamPerformance,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n        onRequestSpanStart,\n      });\n    },\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nfunction startBrowserTracingPageLoadSpan(\n  client,\n  spanOptions,\n  traceOptions,\n) {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const pageloadSpan = getActiveIdleSpan(client);\n\n  if (pageloadSpan) {\n    client.emit('afterStartPageLoadSpan', pageloadSpan);\n  }\n\n  return pageloadSpan;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(\n  client,\n  spanOptions,\n  options,\n) {\n  const { url, isRedirect } = options || {};\n  client.emit('beforeStartNavigationSpan', spanOptions, { isRedirect });\n  client.emit('startNavigationSpan', spanOptions, { isRedirect });\n\n  const scope = getCurrentScope();\n  scope.setTransactionName(spanOptions.name);\n\n  // We store the normalized request data on the scope, so we get the request data at time of span creation\n  // otherwise, the URL etc. may already be of the following navigation, and we'd report the wrong URL\n  if (url && !isRedirect) {\n    scope.setSDKProcessingMetadata({\n      normalizedRequest: {\n        ...getHttpRequestData(),\n        url,\n      },\n    });\n  }\n\n  return getActiveIdleSpan(client);\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  /**\n   * This is just a small wrapper that makes `document` optional.\n   * We want to be extra-safe and always check that this exists, to ensure weird environments do not blow up.\n   */\n  const optionalWindowDocument = WINDOW.document ;\n\n  const metaTag = optionalWindowDocument?.querySelector(`meta[name=${metaName}]`);\n  return metaTag?.getAttribute('content') || undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  client,\n  idleTimeout,\n  finalTimeout,\n  childSpanTimeout,\n  latestRoute,\n) {\n  /**\n   * This is just a small wrapper that makes `document` optional.\n   * We want to be extra-safe and always check that this exists, to ensure weird environments do not blow up.\n   */\n  const optionalWindowDocument = WINDOW.document ;\n\n  let inflightInteractionSpan;\n  const registerInteractionTransaction = () => {\n    const op = 'ui.action.click';\n\n    const activeIdleSpan = getActiveIdleSpan(client);\n    if (activeIdleSpan) {\n      const currentRootSpanOp = spanToJSON(activeIdleSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp )) {\n        DEBUG_BUILD &&\n          debug.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && debug.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (optionalWindowDocument) {\n    addEventListener('click', registerInteractionTransaction, { capture: true });\n  }\n}\n\n// We store the active idle span on the client object, so we can access it from exported functions\nconst ACTIVE_IDLE_SPAN_PROPERTY = '_sentry_idleSpan';\nfunction getActiveIdleSpan(client) {\n  return (client )[ACTIVE_IDLE_SPAN_PROPERTY];\n}\n\nfunction setActiveIdleSpan(client, span) {\n  addNonEnumerableProperty(client, ACTIVE_IDLE_SPAN_PROPERTY, span);\n}\n\n// The max. time in seconds between two pageload/navigation spans that makes us consider the second one a redirect\nconst REDIRECT_THRESHOLD = 0.3;\n\nfunction isRedirect(activeSpan, lastInteractionTimestamp) {\n  const spanData = spanToJSON(activeSpan);\n\n  const now = dateTimestampInSeconds();\n\n  // More than 300ms since last navigation/pageload span?\n  // --> never consider this a redirect\n  const startTimestamp = spanData.start_timestamp;\n  if (now - startTimestamp > REDIRECT_THRESHOLD) {\n    return false;\n  }\n\n  // A click happened in the last 300ms?\n  // --> never consider this a redirect\n  if (lastInteractionTimestamp && now - lastInteractionTimestamp <= REDIRECT_THRESHOLD) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, browserTracingIntegration, getMetaContent, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { getActiveSpan, getRootSpan, spanToJSON, debug, SPAN_STATUS_ERROR } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          debug.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && debug.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","import { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { getTraceContextFromScope, getCurrentScope, getIsolationScope, withScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nimport { createClientReportEnvelope } from './utils/clientreport.js';\nimport { debug } from './utils/debug-logger.js';\nimport { makeDsn, dsnToString } from './utils/dsn.js';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils/envelope.js';\nimport { getPossibleEventMessages } from './utils/eventUtils.js';\nimport { isPrimitive, isParameterizedString, isThenable, isPlainObject } from './utils/is.js';\nimport { merge } from './utils/merge.js';\nimport { uuid4, checkOrSetAlreadyCaught } from './utils/misc.js';\nimport { parseSampleRate } from './utils/parseSampleRate.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\nimport { showSpanDropWarning, getActiveSpan, spanToTraceContext } from './utils/spanUtils.js';\nimport { resolvedSyncPromise, SyncPromise, rejectedSyncPromise } from './utils/syncpromise.js';\nimport { convertTransactionEventToSpanJson, convertSpanJsonToTransactionEvent } from './utils/transactionEvent.js';\n\n/* eslint-disable max-lines */\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\nconst MISSING_RELEASE_FOR_SESSION_ERROR = 'Discarded session because of missing or non-string release';\n\nconst INTERNAL_ERROR_SYMBOL = Symbol.for('SentryInternalError');\nconst DO_NOT_SEND_EVENT_SYMBOL = Symbol.for('SentryDoNotSendEventError');\n\nfunction _makeInternalError(message) {\n  return {\n    message,\n    [INTERNAL_ERROR_SYMBOL]: true,\n  };\n}\n\nfunction _makeDoNotSendEventError(message) {\n  return {\n    message,\n    [DO_NOT_SEND_EVENT_SYMBOL]: true,\n  };\n}\n\nfunction _isInternalError(error) {\n  return !!error && typeof error === 'object' && INTERNAL_ERROR_SYMBOL in error;\n}\n\nfunction _isDoNotSendEventError(error) {\n  return !!error && typeof error === 'object' && DO_NOT_SEND_EVENT_SYMBOL in error;\n}\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link Client._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends Client<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass Client {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && debug.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * Captures an exception event and sends it to Sentry.\n   *\n   * Unlike `captureException` exported from every SDK, this method requires that you pass it the current scope.\n   */\n   captureException(exception, hint, scope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a message event and sends it to Sentry.\n   *\n   * Unlike `captureMessage` exported from every SDK, this method requires that you pass it the current scope.\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a manually created event and sends it to Sentry.\n   *\n   * Unlike `captureEvent` exported from every SDK, this method requires that you pass it the current scope.\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint?.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    this._process(\n      this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope, capturedSpanIsolationScope),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a session.\n   */\n   captureSession(session) {\n    this.sendSession(session);\n    // After sending, we set init false to indicate it's not the first occurrence\n    updateSession(session, { init: false });\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry. This method is not available on all clients.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   * @param scope An optional scope containing event metadata.\n   * @returns A string representing the id of the check in.\n   */\n\n  /**\n   * Get the current Dsn.\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * Get the current options.\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Get the SDK metadata.\n   * @see SdkMetadata\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * Returns the transport that is used by the client.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the client should wait for events to be flushed. Omitting this parameter will\n   *   cause the client to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * Flush the event queue and set the client to `enabled = false`. See {@link Client.flush}.\n   *\n   * @param {number} timeout Maximum time in ms the client should wait before shutting down. Omitting this parameter will cause\n   *   the client to wait until all events are sent before disabling itself.\n   * @returns {Promise<boolean>} A promise which resolves to `true` if the flush completes successfully before the timeout, or `false` if\n   * it doesn't.\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /**\n   * Get all installed event processors.\n   */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /**\n   * Adds an event processor that applies to any event processed by this client.\n   */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Initialize this client.\n   * Call this after the client was set on a scope.\n   */\n   init() {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns {Integration|undefined} The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * Add an integration to the client.\n   * This can be used to e.g. lazy load integrations.\n   * In most cases, this should not be necessary,\n   * and you're better off just passing the integrations via `integrations: []` at initialization time.\n   * However, if you find the need to conditionally load & add an integration, you can use `addIntegration` to do so.\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * Send a fully prepared event to Sentry.\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * Send a session or session aggregrates to Sentry.\n   */\n   sendSession(session) {\n    // Backfill release and environment on session\n    const { release: clientReleaseOption, environment: clientEnvironmentOption = DEFAULT_ENVIRONMENT } = this._options;\n    if ('aggregates' in session) {\n      const sessionAttrs = session.attrs || {};\n      if (!sessionAttrs.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      sessionAttrs.release = sessionAttrs.release || clientReleaseOption;\n      sessionAttrs.environment = sessionAttrs.environment || clientEnvironmentOption;\n      session.attrs = sessionAttrs;\n    } else {\n      if (!session.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      session.release = session.release || clientReleaseOption;\n      session.environment = session.environment || clientEnvironmentOption;\n    }\n\n    this.emit('beforeSendSession', session);\n\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * Record on the client that an event got dropped (ie, an event that will not be sent to Sentry).\n   */\n   recordDroppedEvent(reason, category, count = 1) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && debug.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /* eslint-disable @typescript-eslint/unified-signatures */\n  /**\n   * Register a callback for whenever a span is started.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n\n  /**\n   * Register a hook on this client.\n   */\n   on(hook, callback) {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** Fire a hook whenever a span starts. */\n\n  /**\n   * Emit a hook that was previously registered via `on()`.\n   */\n   emit(hook, ...rest) {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * Send an envelope to Sentry.\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && debug.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && debug.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception?.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism?.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope,\n    isolationScope,\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations?.length) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      this.emit('postprocessEvent', evt, hint);\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(\n    event,\n    hint = {},\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ) {\n    if (DEBUG_BUILD && isErrorEvent(event)) {\n      debug.log(`Captured error event \\`${getPossibleEventMessages(event)[0] || '<unknown>'}\\``);\n    }\n\n    return this._processEvent(event, hint, currentScope, isolationScope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          if (_isDoNotSendEventError(reason)) {\n            debug.log(reason.message);\n          } else if (_isInternalError(reason)) {\n            debug.warn(reason.message);\n          } else {\n            debug.warn(reason);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(\n    event,\n    hint,\n    currentScope,\n    isolationScope,\n  ) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        _makeDoNotSendEventError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    const dataCategory = (eventType === 'replay_event' ? 'replay' : eventType) ;\n\n    return this._prepareEvent(event, hint, currentScope, isolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory);\n          throw _makeDoNotSendEventError('An event processor returned `null`, will not send event.');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw _makeDoNotSendEventError(`${beforeSendLabel} returned \\`null\\`, will not send event.`);\n        }\n\n        const session = currentScope.getSession() || isolationScope.getSession();\n        if (isError && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore = processedEvent.sdkProcessingMetadata?.spanCountBeforeProcessing || 0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (_isDoNotSendEventError(reason) || _isInternalError(reason)) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw _makeInternalError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    DEBUG_BUILD && debug.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && debug.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && debug.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && debug.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n   */\n\n}\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\nconst BaseClient = Client;\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw _makeInternalError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw _makeInternalError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw _makeInternalError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client,\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n  let processedEvent = event;\n\n  if (isErrorEvent(processedEvent) && beforeSend) {\n    return beforeSend(processedEvent, hint);\n  }\n\n  if (isTransactionEvent(processedEvent)) {\n    if (beforeSendSpan) {\n      // process root span\n      const processedRootSpanJson = beforeSendSpan(convertTransactionEventToSpanJson(processedEvent));\n      if (!processedRootSpanJson) {\n        showSpanDropWarning();\n      } else {\n        // update event with processed root span values\n        processedEvent = merge(event, convertSpanJsonToTransactionEvent(processedRootSpanJson));\n      }\n\n      // process child spans\n      if (processedEvent.spans) {\n        const processedSpans = [];\n        for (const span of processedEvent.spans) {\n          const processedSpan = beforeSendSpan(span);\n          if (!processedSpan) {\n            showSpanDropWarning();\n            processedSpans.push(span);\n          } else {\n            processedSpans.push(processedSpan);\n          }\n        }\n        processedEvent.spans = processedSpans;\n      }\n    }\n\n    if (beforeSendTransaction) {\n      if (processedEvent.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = processedEvent.spans.length;\n        processedEvent.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(processedEvent , hint);\n    }\n  }\n\n  return processedEvent;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** Extract trace information from scope */\nfunction _getTraceInfoFromScope(\n  client,\n  scope,\n) {\n  if (!scope) {\n    return [undefined, undefined];\n  }\n\n  return withScope(scope, () => {\n    const span = getActiveSpan();\n    const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n    const dynamicSamplingContext = span\n      ? getDynamicSamplingContextFromSpan(span)\n      : getDynamicSamplingContextFromScope(client, scope);\n    return [dynamicSamplingContext, traceContext];\n  });\n}\n\nexport { BaseClient, Client, _getTraceInfoFromScope };\n//# sourceMappingURL=client.js.map\n","import { makeDsn, dsnToString } from './utils/dsn.js';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  const params = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(dsnLike, dialogOptions) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes.js';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nfunction convertTransactionEventToSpanJson(event) {\n  const { trace_id, parent_span_id, span_id, status, origin, data, op } = event.contexts?.trace ?? {};\n\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n    measurements: event.measurements,\n    is_segment: true,\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nfunction convertSpanJsonToTransactionEvent(span) {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && { [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id }),\n          ...(span.exclusive_time && { [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time }),\n        },\n      },\n    },\n    measurements: span.measurements,\n  };\n}\n\nexport { convertSpanJsonToTransactionEvent, convertTransactionEventToSpanJson };\n//# sourceMappingURL=transactionEvent.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { getGlobalSingleton } from '../carrier.js';\nimport { _getTraceInfoFromScope } from '../client.js';\nimport { getClient, getCurrentScope, getGlobalScope, getIsolationScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { mergeScopeData } from '../utils/applyScopeDataToEvent.js';\nimport { debug, consoleSandbox } from '../utils/debug-logger.js';\nimport { isParameterizedString } from '../utils/is.js';\nimport { _getSpanForScope } from '../utils/spanOnScope.js';\nimport { timestampInSeconds } from '../utils/time.js';\nimport { SEVERITY_TEXT_TO_SEVERITY_NUMBER } from './constants.js';\nimport { createLogEnvelope } from './envelope.js';\n\nconst MAX_LOG_BUFFER_SIZE = 100;\n\n/**\n * Converts a log attribute to a serialized log attribute.\n *\n * @param key - The key of the log attribute.\n * @param value - The value of the log attribute.\n * @returns The serialized log attribute.\n */\nfunction logAttributeToSerializedLogAttribute(value) {\n  switch (typeof value) {\n    case 'number':\n      if (Number.isInteger(value)) {\n        return {\n          value,\n          type: 'integer',\n        };\n      }\n      return {\n        value,\n        type: 'double',\n      };\n    case 'boolean':\n      return {\n        value,\n        type: 'boolean',\n      };\n    case 'string':\n      return {\n        value,\n        type: 'string',\n      };\n    default: {\n      let stringValue = '';\n      try {\n        stringValue = JSON.stringify(value) ?? '';\n      } catch {\n        // Do nothing\n      }\n      return {\n        value: stringValue,\n        type: 'string',\n      };\n    }\n  }\n}\n\n/**\n * Sets a log attribute if the value exists and the attribute key is not already present.\n *\n * @param logAttributes - The log attributes object to modify.\n * @param key - The attribute key to set.\n * @param value - The value to set (only sets if truthy and key not present).\n * @param setEvenIfPresent - Whether to set the attribute if it is present. Defaults to true.\n */\nfunction setLogAttribute(\n  logAttributes,\n  key,\n  value,\n  setEvenIfPresent = true,\n) {\n  if (value && (!logAttributes[key] || setEvenIfPresent)) {\n    logAttributes[key] = value;\n  }\n}\n\n/**\n * Captures a serialized log event and adds it to the log buffer for the given client.\n *\n * @param client - A client. Uses the current client if not provided.\n * @param serializedLog - The serialized log event to capture.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nfunction _INTERNAL_captureSerializedLog(client, serializedLog) {\n  const bufferMap = _getBufferMap();\n\n  const logBuffer = _INTERNAL_getLogBuffer(client);\n  if (logBuffer === undefined) {\n    bufferMap.set(client, [serializedLog]);\n  } else {\n    bufferMap.set(client, [...logBuffer, serializedLog]);\n    if (logBuffer.length >= MAX_LOG_BUFFER_SIZE) {\n      _INTERNAL_flushLogsBuffer(client, logBuffer);\n    }\n  }\n}\n\n/**\n * Captures a log event and sends it to Sentry.\n *\n * @param log - The log event to capture.\n * @param scope - A scope. Uses the current scope if not provided.\n * @param client - A client. Uses the current client if not provided.\n * @param captureSerializedLog - A function to capture the serialized log.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nfunction _INTERNAL_captureLog(\n  beforeLog,\n  client = getClient(),\n  currentScope = getCurrentScope(),\n  captureSerializedLog = _INTERNAL_captureSerializedLog,\n) {\n  if (!client) {\n    DEBUG_BUILD && debug.warn('No client available to capture log.');\n    return;\n  }\n\n  const { release, environment, enableLogs, beforeSendLog, _experiments } = client.getOptions();\n  // eslint-disable-next-line deprecation/deprecation\n  const shouldEnableLogs = enableLogs ?? _experiments?.enableLogs;\n  if (!shouldEnableLogs) {\n    DEBUG_BUILD && debug.warn('logging option not enabled, log will not be captured.');\n    return;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  const actualBeforeSendLog = beforeSendLog ?? _experiments?.beforeSendLog;\n\n  const [, traceContext] = _getTraceInfoFromScope(client, currentScope);\n\n  const processedLogAttributes = {\n    ...beforeLog.attributes,\n  };\n\n  const {\n    user: { id, email, username },\n  } = getMergedScopeData(currentScope);\n  setLogAttribute(processedLogAttributes, 'user.id', id, false);\n  setLogAttribute(processedLogAttributes, 'user.email', email, false);\n  setLogAttribute(processedLogAttributes, 'user.name', username, false);\n\n  setLogAttribute(processedLogAttributes, 'sentry.release', release);\n  setLogAttribute(processedLogAttributes, 'sentry.environment', environment);\n\n  const { name, version } = client.getSdkMetadata()?.sdk ?? {};\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.name', name);\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.version', version);\n\n  const beforeLogMessage = beforeLog.message;\n  if (isParameterizedString(beforeLogMessage)) {\n    const { __sentry_template_string__, __sentry_template_values__ = [] } = beforeLogMessage;\n    processedLogAttributes['sentry.message.template'] = __sentry_template_string__;\n    __sentry_template_values__.forEach((param, index) => {\n      processedLogAttributes[`sentry.message.parameter.${index}`] = param;\n    });\n  }\n\n  const span = _getSpanForScope(currentScope);\n  // Add the parent span ID to the log attributes for trace context\n  setLogAttribute(processedLogAttributes, 'sentry.trace.parent_span_id', span?.spanContext().spanId);\n\n  const processedLog = { ...beforeLog, attributes: processedLogAttributes };\n\n  client.emit('beforeCaptureLog', processedLog);\n\n  // We need to wrap this in `consoleSandbox` to avoid recursive calls to `beforeSendLog`\n  const log = actualBeforeSendLog ? consoleSandbox(() => actualBeforeSendLog(processedLog)) : processedLog;\n  if (!log) {\n    client.recordDroppedEvent('before_send', 'log_item', 1);\n    DEBUG_BUILD && debug.warn('beforeSendLog returned null, log will not be captured.');\n    return;\n  }\n\n  const { level, message, attributes = {}, severityNumber } = log;\n\n  const serializedLog = {\n    timestamp: timestampInSeconds(),\n    level,\n    body: message,\n    trace_id: traceContext?.trace_id,\n    severity_number: severityNumber ?? SEVERITY_TEXT_TO_SEVERITY_NUMBER[level],\n    attributes: Object.keys(attributes).reduce(\n      (acc, key) => {\n        acc[key] = logAttributeToSerializedLogAttribute(attributes[key]);\n        return acc;\n      },\n      {} ,\n    ),\n  };\n\n  captureSerializedLog(client, serializedLog);\n\n  client.emit('afterCaptureLog', log);\n}\n\n/**\n * Flushes the logs buffer to Sentry.\n *\n * @param client - A client.\n * @param maybeLogBuffer - A log buffer. Uses the log buffer for the given client if not provided.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nfunction _INTERNAL_flushLogsBuffer(client, maybeLogBuffer) {\n  const logBuffer = maybeLogBuffer ?? _INTERNAL_getLogBuffer(client) ?? [];\n  if (logBuffer.length === 0) {\n    return;\n  }\n\n  const clientOptions = client.getOptions();\n  const envelope = createLogEnvelope(logBuffer, clientOptions._metadata, clientOptions.tunnel, client.getDsn());\n\n  // Clear the log buffer after envelopes have been constructed.\n  _getBufferMap().set(client, []);\n\n  client.emit('flushLogs');\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\n/**\n * Returns the log buffer for a given client.\n *\n * Exported for testing purposes.\n *\n * @param client - The client to get the log buffer for.\n * @returns The log buffer for the given client.\n */\nfunction _INTERNAL_getLogBuffer(client) {\n  return _getBufferMap().get(client);\n}\n\n/**\n * Get the scope data for the current scope after merging with the\n * global scope and isolation scope.\n *\n * @param currentScope - The current scope.\n * @returns The scope data.\n */\nfunction getMergedScopeData(currentScope) {\n  const scopeData = getGlobalScope().getScopeData();\n  mergeScopeData(scopeData, getIsolationScope().getScopeData());\n  mergeScopeData(scopeData, currentScope.getScopeData());\n  return scopeData;\n}\n\nfunction _getBufferMap() {\n  // The reference to the Client <> LogBuffer map is stored on the carrier to ensure it's always the same\n  return getGlobalSingleton('clientToLogBufferMap', () => new WeakMap());\n}\n\nexport { _INTERNAL_captureLog, _INTERNAL_captureSerializedLog, _INTERNAL_flushLogsBuffer, _INTERNAL_getLogBuffer, logAttributeToSerializedLogAttribute };\n//# sourceMappingURL=exports.js.map\n","import { dsnToString } from '../utils/dsn.js';\nimport { createEnvelope } from '../utils/envelope.js';\n\n/**\n * Creates a log container envelope item for a list of logs.\n *\n * @param items - The logs to include in the envelope.\n * @returns The created log container envelope item.\n */\nfunction createLogContainerEnvelopeItem(items) {\n  return [\n    {\n      type: 'log',\n      item_count: items.length,\n      content_type: 'application/vnd.sentry.items.log+json',\n    },\n    {\n      items,\n    },\n  ];\n}\n\n/**\n * Creates an envelope for a list of logs.\n *\n * Logs from multiple traces can be included in the same envelope.\n *\n * @param logs - The logs to include in the envelope.\n * @param metadata - The metadata to include in the envelope.\n * @param tunnel - The tunnel to include in the envelope.\n * @param dsn - The DSN to include in the envelope.\n * @returns The created envelope.\n */\nfunction createLogEnvelope(\n  logs,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {};\n\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  return createEnvelope(headers, [createLogContainerEnvelopeItem(logs)]);\n}\n\nexport { createLogContainerEnvelopeItem, createLogEnvelope };\n//# sourceMappingURL=envelope.js.map\n","// By default, we want to infer the IP address, unless this is explicitly set to `null`\n// We do this after all other processing is done\n// If `ip_address` is explicitly set to `null` or a value, we leave it as is\n\n/**\n * @internal\n */\nfunction addAutoIpAddressToUser(objWithMaybeUser) {\n  if (objWithMaybeUser.user?.ip_address === undefined) {\n    objWithMaybeUser.user = {\n      ...objWithMaybeUser.user,\n      ip_address: '{{auto}}',\n    };\n  }\n}\n\n/**\n * @internal\n */\nfunction addAutoIpAddressToSession(session) {\n  if ('aggregates' in session) {\n    if (session.attrs?.['ip_address'] === undefined) {\n      session.attrs = {\n        ...session.attrs,\n        ip_address: '{{auto}}',\n      };\n    }\n  } else {\n    if (session.ipAddress === undefined) {\n      session.ipAddress = '{{auto}}';\n    }\n  }\n}\n\nexport { addAutoIpAddressToSession, addAutoIpAddressToUser };\n//# sourceMappingURL=ipAddress.js.map\n","import { Client, getSDKSource, applySdkMetadata, _INTERNAL_flushLogsBuffer, addAutoIpAddressToUser, addAutoIpAddressToSession } from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends Client {\n\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    const { sendDefaultPii, sendClientReports, enableLogs, _experiments } = this._options;\n    // eslint-disable-next-line deprecation/deprecation\n    const shouldEnableLogs = enableLogs ?? _experiments?.enableLogs;\n\n    if (WINDOW.document && (sendClientReports || shouldEnableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (shouldEnableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n\n    if (shouldEnableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope,\n    isolationScope,\n  ) {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nfunction applyDefaultOptions(optionsArg) {\n  return {\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE?.id, // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg,\n  };\n}\n\nexport { BrowserClient, applyDefaultOptions };\n//# sourceMappingURL=client.js.map\n","import { SDK_VERSION } from './version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `debug` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { SyncPromise, resolvedSyncPromise, rejectedSyncPromise } from './syncpromise.js';\n\nconst SENTRY_BUFFER_FULL_ERROR = Symbol.for('SentryBufferFullError');\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(SENTRY_BUFFER_FULL_ERROR);\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { SENTRY_BUFFER_FULL_ERROR, makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { debug } from '../utils/debug-logger.js';\nimport { forEachEnvelopeItem, envelopeItemTypeToDataCategory, createEnvelope, serializeEnvelope } from '../utils/envelope.js';\nimport { makePromiseBuffer, SENTRY_BUFFER_FULL_ERROR } from '../utils/promisebuffer.js';\nimport { isRateLimited, updateRateLimits } from '../utils/ratelimit.js';\nimport { resolvedSyncPromise } from '../utils/syncpromise.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && debug.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          DEBUG_BUILD && debug.error('Encountered error running transport request:', error);\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error === SENTRY_BUFFER_FULL_ERROR) {\n          DEBUG_BUILD && debug.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers?.['x-sentry-rate-limits'];\n  const retryAfterHeader = headers?.['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { isNativeFunction, debug } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) );\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow?.[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && debug.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout };\n//# sourceMappingURL=getNativeImplementation.js.map\n","import { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport { getNativeImplementation, clearCachedImplementation } from '@sentry-internal/browser-utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeImplementation('fetch'),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'strict-origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // Note: We do not need to suppress tracing here, becasue we are using the native fetch, instead of our wrapped one.\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) ;\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line) ;\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line) ;\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line) ;\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] ) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import {\n  breadcrumbsIntegration,\n  BrowserClient,\n  browserTracingIntegration,\n  defaultStackParser,\n  extraErrorDataIntegration,\n  getDefaultIntegrations,\n  makeFetchTransport,\n  Scope,\n} from '@sentry/browser';\nimport { browser_api } from '@app/browser_api';\n\nexport function createSentryScope(name: string) {\n  // Check if we're in a browser context (not service worker)\n  const isBrowserContext = typeof document !== 'undefined';\n\n  const integrations = isBrowserContext\n    ? [\n        ...getDefaultIntegrations({}),\n        extraErrorDataIntegration({ depth: 10 }),\n        browserTracingIntegration(),\n        breadcrumbsIntegration(),\n      ]\n    : [\n        // Minimal integrations for service worker context\n        extraErrorDataIntegration({ depth: 10 }),\n      ];\n\n  const client = new BrowserClient({\n    dsn: process.env.SENTRY_DSN,\n    environment: process.env.NODE_ENV,\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n    integrations: integrations,\n    ignoreErrors: [],\n  });\n\n  const scope = new Scope();\n\n  scope.setClient(client);\n\n  scope.setTag('extension_code', process.env.EXTENSION_CODE);\n  scope.setTag('environment', process.env.NODE_ENV);\n  scope.setTag('service', name);\n  scope.setTag('version', browser_api.runtime.getManifest().version);\n\n  client.init();\n\n  self.addEventListener('error', (error) => {\n    scope.setExtras({\n      type: error.type,\n      message: error.message,\n      currentTarget: error.currentTarget,\n      target: error.target,\n      error,\n    });\n    scope.captureException(error);\n  });\n\n  self.addEventListener('unhandledrejection', (error) => {\n    scope.setExtras({\n      type: error.type,\n      reason: error.reason,\n      promise: error.promise,\n      currentTarget: error.currentTarget,\n      target: error.target,\n      error,\n    });\n    scope.captureException(error);\n  });\n\n  return scope;\n}\n","import { inboundFiltersIntegration, functionToStringIntegration, dedupeIntegration, getIntegrationsToSetup, stackParserFromStackParserOptions, initAndBind } from '@sentry/core';\nimport { BrowserClient } from './client.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nimport { browserSessionIntegration } from './integrations/browsersession.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { checkAndWarnIfIsEmbeddedBrowserExtension } from './utils/detectBrowserExtension.js';\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(_options) {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    // TODO(v10): Replace with `eventFiltersIntegration` once we remove the deprecated `inboundFiltersIntegration`\n    // eslint-disable-next-line deprecation/deprecation\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n    browserSessionIntegration(),\n  ];\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  const shouldDisableBecauseIsBrowserExtenstion =\n    !options.skipBrowserExtensionCheck && checkAndWarnIfIsEmbeddedBrowserExtension();\n\n  const clientOptions = {\n    ...options,\n    enabled: shouldDisableBecauseIsBrowserExtenstion ? false : options.enabled,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup({\n      integrations: options.integrations,\n      defaultIntegrations:\n        options.defaultIntegrations == null ? getDefaultIntegrations() : options.defaultIntegrations,\n    }),\n    transport: options.transport || makeFetchTransport,\n  };\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\nexport { forceLoad, getDefaultIntegrations, init, onLoad };\n//# sourceMappingURL=sdk.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { WINDOW, getHttpRequestData } from '../helpers.js';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nconst httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      const reqData = getHttpRequestData();\n      const headers = {\n        ...reqData.headers,\n        ...event.request?.headers,\n      };\n\n      event.request = {\n        ...reqData,\n        ...event.request,\n        headers,\n      };\n    },\n  };\n});\n\nexport { httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { defineIntegration, debug, startSession, captureSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nconst browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          debug.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n\nexport { browserSessionIntegration };\n//# sourceMappingURL=browsersession.js.map\n","export enum Feature {\n  DevMeta = 'dev-meta',\n  PACLite = 'pac-lite',\n  CaptchaCrackerDisabled = 'captcha-cracker-disabled',\n  OnFailDisabled = 'on-fail-disabled',\n  AdfoxBanner = 'adfox-banner',\n  ProxyControlledByOtherExtensionsVisibility = 'proxy-controlled-by-other-extensions-visibility',\n  ProxyAuth = 'proxy-auth',\n  FreeUsersReview = 'free-users-review',\n  MultiLocalesSupport = 'multi-locales-support',\n  GiftAdvertising = 'gift-advertising',\n}\n\nexport type FeatureList = {\n  [Feature.DevMeta]: boolean;\n  [Feature.PACLite]: boolean;\n  [Feature.CaptchaCrackerDisabled]: boolean;\n  [Feature.OnFailDisabled]: boolean;\n  [Feature.AdfoxBanner]: boolean;\n  [Feature.ProxyControlledByOtherExtensionsVisibility]: boolean;\n  [Feature.ProxyAuth]: boolean;\n  [Feature.FreeUsersReview]: boolean;\n  [Feature.MultiLocalesSupport]: boolean;\n  [Feature.GiftAdvertising]: boolean;\n};\n\nexport type FeatureListResponse = {\n  [Feature.DevMeta]: string;\n  [Feature.PACLite]: string;\n  [Feature.CaptchaCrackerDisabled]: string;\n  [Feature.OnFailDisabled]: string;\n  [Feature.AdfoxBanner]: string;\n  [Feature.ProxyControlledByOtherExtensionsVisibility]: string;\n  [Feature.ProxyAuth]: string;\n  [Feature.FreeUsersReview]: string;\n  [Feature.MultiLocalesSupport]: string;\n  [Feature.GiftAdvertising]: string;\n};\n\nexport type FeatureStore = {\n  isInitialized: boolean;\n  featuresList: FeatureList;\n  loading: boolean;\n  error: Error | null;\n};\n\nexport function isFeatureStore(value: unknown): value is FeatureStore {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    'featuresList' in value &&\n    typeof (value as any).featuresList === 'object'\n  );\n}\n","export async function wait(ms: number): Promise<void> {\n  await new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n","export const getFibonacciNumber = (index: number): number => {\n  if (index <= 1) {\n    return 1;\n  }\n\n  let a = 1;\n  let b = 1;\n\n  for (let i = 2; i <= index; i++) {\n    const sum = a + b;\n    a = b;\n    b = sum;\n  }\n\n  return b;\n};\n","import {\n  PersistentStorageData,\n  PersistentStorageKey,\n} from '@app/storage/local/types/persistentTypes';\nimport {\n  ExpirableData,\n  ExpirableStorageKey,\n} from '@app/storage/local/types/expirableTypes';\nimport {\n  OneDayData,\n  OneDayStorageKeys,\n} from '@app/storage/local/types/oneDayTypes';\n\nexport type LocalStorageData = PersistentStorageData &\n  ExpirableData &\n  OneDayData;\n\nexport const LocalStorageKey = {\n  ...PersistentStorageKey,\n  ...ExpirableStorageKey,\n  ...OneDayStorageKeys,\n} as const;\n\nexport type LocalStorageKeyType =\n  (typeof LocalStorageKey)[keyof typeof LocalStorageKey];\n\nexport type LocalStorageValue<K extends LocalStorageKeyType> =\n  LocalStorageData[K];\n","import { PremiumAlarms } from '@app/alarms/premium';\nimport { ExtensionMonitoringData } from '@background/extensions/extensionMonitor';\nimport { Tariff } from '@api/premium/types/Tariff';\nimport { DeviceLimit } from '@api/urls';\n\nexport type ConnectionState =\n  | 'connected'\n  | 'disconnected'\n  | 'connecting'\n  | 'error';\n\ntype Theme = 'light' | 'dark';\n\nexport type PACData = { free: string };\n\nexport type PACRegistryData = {\n  free: string;\n  premium: string;\n  freeLite?: string;\n  premiumLite?: string;\n  updatedAt: string;\n};\n\nexport type BrowserProxySettings = {\n  levelOfControl: chrome.types.ChromeSettingGetResultDetails['levelOfControl'];\n  pacScript?: string;\n};\n\nexport type AlarmTries = Partial<Record<PremiumAlarms, number>>;\nexport type OnboardingScreenStatus = 'step-zero' | 'step-one' | 'done';\nexport type PACPremiumData = {\n  premium: string;\n  allInternet: string;\n};\nexport type PaymentStatus = 'New' | 'Paid' | 'Expired' | 'Trial' | 'Free';\n\nexport enum PersistentStorageKey {\n  FeedbackProvided = 'feedbackProvided',\n  TargetState = 'targetState',\n  CurrentState = 'currentState',\n  Theme = 'theme',\n  ConnectionCount = 'connectionCount',\n  DeviceId = 'deviceId',\n\n  /** @deprecated - will remove after backend fix */\n  DeviceIp = 'deviceIp',\n\n  IsBrowserError = 'isBrowserError',\n  PACData = 'pacData',\n  PACRegistryData = 'pacRegistryData',\n  AlarmTries = 'alarmTries',\n  OnboardingScreenStatus = 'onboardingScreenStatus',\n  BrowserProxySettings = 'browserProxySettings',\n  SavedTime = 'savedTime',\n  IsLitePAC = 'isLitePAC',\n  ExtensionMonitoring = 'extensionMonitoring',\n  UserId = 'userId',\n  CookieLoaded = 'cookieLoaded',\n  FeatureStore = 'featureStore',\n  FeaturesListLocal = 'featuresListLocal',\n  ConfigsBaseUrl = 'configsBaseUrl',\n  ErrorMessage = 'errorMessage',\n  ProxyData = 'proxyData',\n  IsInitProxyAuthStarted = 'isInitProxyAuthStarted',\n  ClientId = 'clientId',\n\n  DaysLeft = 'daysLeft',\n  HasPremium = 'hasPremium',\n  PaidUntil = 'paidUntil',\n  SecondsLeft = 'secondsLeft',\n  Status = 'status',\n  IsSubscriptionInfoError = 'isSubscriptionInfoError',\n  IsChangeDeviceError = 'isChangeDeviceError',\n  IsAdBannerShown = 'isAdBannerShown',\n  IsAllInternetProxy = 'isAllInternetProxy',\n  PACPremiumData = 'pacPremiumData',\n  IsFreePremiumTrialAvailable = 'isFreePremiumTrialAvailable',\n  CurrentTariff = 'currentTariff',\n  DeviceLimit = 'deviceLimit',\n  ActiveDevices = 'activeDevices',\n\n  ConnectionTimeLeft = 'connectionTimeLeft',\n  LastConnectionTimestamp = 'lastConnectionTimestamp',\n  HasBonusConnectionTime = 'hasBonusConnectionTime',\n}\n\nexport type PersistentStorageData = {\n  [PersistentStorageKey.FeedbackProvided]?: boolean;\n  [PersistentStorageKey.TargetState]?: 'connected' | 'disconnected';\n  [PersistentStorageKey.CurrentState]?: ConnectionState;\n  [PersistentStorageKey.Theme]?: Theme;\n  [PersistentStorageKey.ConnectionCount]?: number;\n  [PersistentStorageKey.DeviceId]?: string;\n  [PersistentStorageKey.DeviceIp]?: string;\n  [PersistentStorageKey.IsBrowserError]?: boolean;\n  [PersistentStorageKey.PACData]?: PACData;\n  [PersistentStorageKey.PACRegistryData]?: PACRegistryData;\n  [PersistentStorageKey.AlarmTries]?: AlarmTries;\n  [PersistentStorageKey.OnboardingScreenStatus]?: OnboardingScreenStatus;\n  [PersistentStorageKey.BrowserProxySettings]?: BrowserProxySettings;\n  [PersistentStorageKey.SavedTime]?: Record<string, number>;\n  [PersistentStorageKey.IsLitePAC]?: boolean;\n  [PersistentStorageKey.ExtensionMonitoring]?: ExtensionMonitoringData;\n  [PersistentStorageKey.UserId]?: string;\n  [PersistentStorageKey.CookieLoaded]?: boolean;\n  [PersistentStorageKey.FeatureStore]?: Record<string, unknown>;\n  [PersistentStorageKey.FeaturesListLocal]?: Record<string, boolean>;\n  [PersistentStorageKey.ConfigsBaseUrl]?: string;\n  [PersistentStorageKey.ErrorMessage]?: string;\n  [PersistentStorageKey.ProxyData]?: Record<string, unknown>;\n  [PersistentStorageKey.IsInitProxyAuthStarted]?: boolean;\n  [PersistentStorageKey.ClientId]?: string;\n\n  [PersistentStorageKey.DaysLeft]?: number;\n  [PersistentStorageKey.HasPremium]?: boolean;\n  [PersistentStorageKey.PaidUntil]?: string;\n  [PersistentStorageKey.SecondsLeft]?: number;\n  [PersistentStorageKey.Status]?: PaymentStatus;\n  [PersistentStorageKey.IsSubscriptionInfoError]?: boolean;\n  [PersistentStorageKey.IsChangeDeviceError]?: boolean;\n  [PersistentStorageKey.IsAdBannerShown]?: boolean;\n  [PersistentStorageKey.IsAllInternetProxy]?: boolean;\n  [PersistentStorageKey.PACPremiumData]?: PACPremiumData;\n  [PersistentStorageKey.IsFreePremiumTrialAvailable]?: boolean;\n  [PersistentStorageKey.CurrentTariff]?: Tariff;\n  [PersistentStorageKey.DeviceLimit]?: DeviceLimit;\n  [PersistentStorageKey.ActiveDevices]?: number;\n\n  [PersistentStorageKey.ConnectionTimeLeft]?: number;\n  [PersistentStorageKey.LastConnectionTimestamp]?: number;\n  [PersistentStorageKey.HasBonusConnectionTime]?: boolean;\n};\n","import type { Browser } from 'detect-browser';\nimport { PaymentMethod } from '@app/features/types/paymentMethodTypes';\n\nexport type MetaApiData = {\n  apiBaseUrl: string;\n  cookieDomain: string;\n  availableAlarmTries: number;\n  showOnUpdateVersion?: string;\n  currentVersion: string;\n  requiredVersion: string;\n  supportedBrowsers: Browser[];\n  proxyUpdatePeriod?: number;\n  proxyUpdatePeriodPremium?: number;\n  shouldUpdatePAC?: string;\n  shouldUpdatePACVersion?: string;\n  availableBannersData?: string;\n  androidAppUrl?: string;\n  availablePaymentMethods?: PaymentMethod[];\n  publicOfferUrl?: string;\n  advMinVersion?: string;\n  updateSubscriptionInfoPeriod?: number;\n  adfoxBannerUrl?: string;\n  giftAdvertisingAvailableDates?: [string, string];\n  giftAdvertisingPeriodInMinutes?: number;\n};\n\nexport interface SessionDataType {\n  timestamp: number;\n  session_id: string;\n}\n\nexport enum ExpirableStorageKey {\n  IsProxyControlledByOtherExtensions = 'isProxyControlledByOtherExtensions',\n  IsAdBlockersWork = 'isAdBlockersWork',\n  PopupWasOpened = 'popupWasOpened',\n  MetaApiData = 'metaApiData',\n  IsNetworkError = 'isNetworkError',\n  ConnectRetryFailed = 'connectRetryFailed',\n  LastProxyHost = 'lastProxyHost',\n  LastProxyPort = 'lastProxyPort',\n  IsInitialized = 'isInitialized',\n  RequestBlockedError = 'requestBlockedError',\n  UpdateSubscriptionInfoPeriod = 'updateSubscriptionInfoPeriod',\n  email = 'email',\n  SessionData = 'sessionData',\n}\n\nexport type ExpirableData = {\n  [ExpirableStorageKey.IsProxyControlledByOtherExtensions]?: boolean;\n  [ExpirableStorageKey.IsAdBlockersWork]?: boolean;\n  [ExpirableStorageKey.PopupWasOpened]?: boolean;\n  [ExpirableStorageKey.MetaApiData]?: MetaApiData;\n  [ExpirableStorageKey.IsNetworkError]?: boolean;\n  [ExpirableStorageKey.ConnectRetryFailed]?: boolean;\n  [ExpirableStorageKey.LastProxyHost]?: string;\n  [ExpirableStorageKey.LastProxyPort]?: number;\n  [ExpirableStorageKey.IsInitialized]?: boolean;\n  [ExpirableStorageKey.RequestBlockedError]?: string;\n  [ExpirableStorageKey.UpdateSubscriptionInfoPeriod]?: number;\n  [ExpirableStorageKey.email]?: string;\n  [ExpirableStorageKey.SessionData]?: SessionDataType;\n};\n","type ApiHttpErrors = Record<\n  string,\n  {\n    timestampUtc: string;\n    message: string;\n    errorData: unknown;\n    status: number;\n    statusText: string;\n    requestData: unknown;\n  }\n>;\n\ntype ApiHttpSuccess = Record<\n  string,\n  {\n    timestampUtc: string;\n    status: number;\n    statusText: string;\n    url: string;\n  }\n>;\n\nexport enum OneDayStorageKeys {\n  ApiHttpErrors = 'apiHttpErrors',\n  ApiHttpSuccess = 'apiHttpSuccess',\n}\n\nexport type OneDayData = {\n  [OneDayStorageKeys.ApiHttpErrors]?: ApiHttpErrors;\n  [OneDayStorageKeys.ApiHttpSuccess]?: ApiHttpSuccess;\n};\n","import {\n  getLocalStorageData,\n\n} from '@app/storage/local/shared';\n\n\nimport { LocalStorageKey } from '@app/storage/local/types/sharedTypes';\n\nexport const getConfigsUrl = async (endpoint?: string) => {\n  if (!endpoint) {\n    console.error('No endpoint provided');\n\n    return null;\n  }\n  const { configsBaseUrl } = await getLocalStorageData(\n    LocalStorageKey.ConfigsBaseUrl,\n  );\n\n  if (configsBaseUrl) {\n    return new URL(endpoint, configsBaseUrl);\n  }\n  return new URL(endpoint, process.env.CONFIG_BASE_URL_1);\n};\n","export class HTTPError extends Error {\n    response;\n    request;\n    options;\n    constructor(response, request, options) {\n        const code = (response.status || response.status === 0) ? response.status : '';\n        const title = response.statusText || '';\n        const status = `${code} ${title}`.trim();\n        const reason = status ? `status code ${status}` : 'an unknown error';\n        super(`Request failed with ${reason}: ${request.method} ${request.url}`);\n        this.name = 'HTTPError';\n        this.response = response;\n        this.request = request;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=HTTPError.js.map","export class TimeoutError extends Error {\n    request;\n    constructor(request) {\n        super(`Request timed out: ${request.method} ${request.url}`);\n        this.name = 'TimeoutError';\n        this.request = request;\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map","export const supportsRequestStreams = (() => {\n    let duplexAccessed = false;\n    let hasContentType = false;\n    const supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n    const supportsRequest = typeof globalThis.Request === 'function';\n    if (supportsReadableStream && supportsRequest) {\n        try {\n            hasContentType = new globalThis.Request('https://empty.invalid', {\n                body: new globalThis.ReadableStream(),\n                method: 'POST',\n                // @ts-expect-error - Types are outdated.\n                get duplex() {\n                    duplexAccessed = true;\n                    return 'half';\n                },\n            }).headers.has('Content-Type');\n        }\n        catch (error) {\n            // QQBrowser on iOS throws \"unsupported BodyInit type\" error (see issue #581)\n            if (error instanceof Error && error.message === 'unsupported BodyInit type') {\n                return false;\n            }\n            throw error;\n        }\n    }\n    return duplexAccessed && !hasContentType;\n})();\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsAbortSignal = typeof globalThis.AbortSignal === 'function' && typeof globalThis.AbortSignal.any === 'function';\nexport const supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst validate = () => undefined;\nvalidate();\nexport const responseTypes = {\n    json: 'application/json',\n    text: 'text/*',\n    formData: 'multipart/form-data',\n    arrayBuffer: '*/*',\n    blob: '*/*',\n};\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n// Size in bytes of a typical form boundary, used to help estimate upload size\nexport const usualFormBoundarySize = new TextEncoder().encode('------WebKitFormBoundaryaxpyiPgbbPti10Rw').length;\nexport const stop = Symbol('stop');\nexport const kyOptionKeys = {\n    json: true,\n    parseJson: true,\n    stringifyJson: true,\n    searchParams: true,\n    prefixUrl: true,\n    retry: true,\n    timeout: true,\n    hooks: true,\n    throwHttpErrors: true,\n    onDownloadProgress: true,\n    onUploadProgress: true,\n    fetch: true,\n};\nexport const requestOptionsRegistry = {\n    method: true,\n    headers: true,\n    body: true,\n    mode: true,\n    credentials: true,\n    cache: true,\n    redirect: true,\n    referrer: true,\n    referrerPolicy: true,\n    integrity: true,\n    keepalive: true,\n    signal: true,\n    window: true,\n    dispatcher: true,\n    duplex: true,\n    priority: true,\n};\n//# sourceMappingURL=constants.js.map","// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value) => value !== null && typeof value === 'object';\n//# sourceMappingURL=is.js.map","import { isObject } from './is.js';\nexport const validateAndMerge = (...sources) => {\n    for (const source of sources) {\n        if ((!isObject(source) || Array.isArray(source)) && source !== undefined) {\n            throw new TypeError('The `options` argument must be an object');\n        }\n    }\n    return deepMerge({}, ...sources);\n};\nexport const mergeHeaders = (source1 = {}, source2 = {}) => {\n    const result = new globalThis.Headers(source1);\n    const isHeadersInstance = source2 instanceof globalThis.Headers;\n    const source = new globalThis.Headers(source2);\n    for (const [key, value] of source.entries()) {\n        if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n            result.delete(key);\n        }\n        else {\n            result.set(key, value);\n        }\n    }\n    return result;\n};\nfunction newHookValue(original, incoming, property) {\n    return (Object.hasOwn(incoming, property) && incoming[property] === undefined)\n        ? []\n        : deepMerge(original[property] ?? [], incoming[property] ?? []);\n}\nexport const mergeHooks = (original = {}, incoming = {}) => ({\n    beforeRequest: newHookValue(original, incoming, 'beforeRequest'),\n    beforeRetry: newHookValue(original, incoming, 'beforeRetry'),\n    afterResponse: newHookValue(original, incoming, 'afterResponse'),\n    beforeError: newHookValue(original, incoming, 'beforeError'),\n});\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = (...sources) => {\n    let returnValue = {};\n    let headers = {};\n    let hooks = {};\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            if (!Array.isArray(returnValue)) {\n                returnValue = [];\n            }\n            returnValue = [...returnValue, ...source];\n        }\n        else if (isObject(source)) {\n            for (let [key, value] of Object.entries(source)) {\n                if (isObject(value) && key in returnValue) {\n                    value = deepMerge(returnValue[key], value);\n                }\n                returnValue = { ...returnValue, [key]: value };\n            }\n            if (isObject(source.hooks)) {\n                hooks = mergeHooks(hooks, source.hooks);\n                returnValue.hooks = hooks;\n            }\n            if (isObject(source.headers)) {\n                headers = mergeHeaders(headers, source.headers);\n                returnValue.headers = headers;\n            }\n        }\n    }\n    return returnValue;\n};\n//# sourceMappingURL=merge.js.map","import { requestMethods } from '../core/constants.js';\nexport const normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nconst retryAfterStatusCodes = [413, 429, 503];\nconst defaultRetryOptions = {\n    limit: 2,\n    methods: retryMethods,\n    statusCodes: retryStatusCodes,\n    afterStatusCodes: retryAfterStatusCodes,\n    maxRetryAfter: Number.POSITIVE_INFINITY,\n    backoffLimit: Number.POSITIVE_INFINITY,\n    delay: attemptCount => 0.3 * (2 ** (attemptCount - 1)) * 1000,\n};\nexport const normalizeRetryOptions = (retry = {}) => {\n    if (typeof retry === 'number') {\n        return {\n            ...defaultRetryOptions,\n            limit: retry,\n        };\n    }\n    if (retry.methods && !Array.isArray(retry.methods)) {\n        throw new Error('retry.methods must be an array');\n    }\n    if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n        throw new Error('retry.statusCodes must be an array');\n    }\n    return {\n        ...defaultRetryOptions,\n        ...retry,\n    };\n};\n//# sourceMappingURL=normalize.js.map","import { HTTPError } from '../errors/HTTPError.js';\nimport { TimeoutError } from '../errors/TimeoutError.js';\nimport { streamRequest, streamResponse } from '../utils/body.js';\nimport { mergeHeaders, mergeHooks } from '../utils/merge.js';\nimport { normalizeRequestMethod, normalizeRetryOptions } from '../utils/normalize.js';\nimport timeout from '../utils/timeout.js';\nimport delay from '../utils/delay.js';\nimport { findUnknownOptions } from '../utils/options.js';\nimport { maxSafeTimeout, responseTypes, stop, supportsAbortController, supportsAbortSignal, supportsFormData, supportsResponseStreams, supportsRequestStreams, } from './constants.js';\nexport class Ky {\n    static create(input, options) {\n        const ky = new Ky(input, options);\n        const function_ = async () => {\n            if (typeof ky._options.timeout === 'number' && ky._options.timeout > maxSafeTimeout) {\n                throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n            }\n            // Delay the fetch so that body method shortcuts can set the Accept header\n            await Promise.resolve();\n            // Before using ky.request, _fetch clones it and saves the clone for future retries to use.\n            // If retry is not needed, close the cloned request's ReadableStream for memory safety.\n            let response = await ky._fetch();\n            for (const hook of ky._options.hooks.afterResponse) {\n                // eslint-disable-next-line no-await-in-loop\n                const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n                if (modifiedResponse instanceof globalThis.Response) {\n                    response = modifiedResponse;\n                }\n            }\n            ky._decorateResponse(response);\n            if (!response.ok && ky._options.throwHttpErrors) {\n                let error = new HTTPError(response, ky.request, ky._options);\n                for (const hook of ky._options.hooks.beforeError) {\n                    // eslint-disable-next-line no-await-in-loop\n                    error = await hook(error);\n                }\n                throw error;\n            }\n            // If `onDownloadProgress` is passed, it uses the stream API internally\n            if (ky._options.onDownloadProgress) {\n                if (typeof ky._options.onDownloadProgress !== 'function') {\n                    throw new TypeError('The `onDownloadProgress` option must be a function');\n                }\n                if (!supportsResponseStreams) {\n                    throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                }\n                return streamResponse(response.clone(), ky._options.onDownloadProgress);\n            }\n            return response;\n        };\n        const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n        const result = (isRetriableMethod ? ky._retry(function_) : function_())\n            .finally(async () => {\n            // Now that we know a retry is not needed, close the ReadableStream of the cloned request.\n            if (!ky.request.bodyUsed) {\n                await ky.request.body?.cancel();\n            }\n        });\n        for (const [type, mimeType] of Object.entries(responseTypes)) {\n            result[type] = async () => {\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                const response = await result;\n                if (type === 'json') {\n                    if (response.status === 204) {\n                        return '';\n                    }\n                    const arrayBuffer = await response.clone().arrayBuffer();\n                    const responseSize = arrayBuffer.byteLength;\n                    if (responseSize === 0) {\n                        return '';\n                    }\n                    if (options.parseJson) {\n                        return options.parseJson(await response.text());\n                    }\n                }\n                return response[type]();\n            };\n        }\n        return result;\n    }\n    request;\n    abortController;\n    _retryCount = 0;\n    _input;\n    _options;\n    // eslint-disable-next-line complexity\n    constructor(input, options = {}) {\n        this._input = input;\n        this._options = {\n            ...options,\n            headers: mergeHeaders(this._input.headers, options.headers),\n            hooks: mergeHooks({\n                beforeRequest: [],\n                beforeRetry: [],\n                beforeError: [],\n                afterResponse: [],\n            }, options.hooks),\n            method: normalizeRequestMethod(options.method ?? this._input.method ?? 'GET'),\n            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n            prefixUrl: String(options.prefixUrl || ''),\n            retry: normalizeRetryOptions(options.retry),\n            throwHttpErrors: options.throwHttpErrors !== false,\n            timeout: options.timeout ?? 10_000,\n            fetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n        };\n        if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n            throw new TypeError('`input` must be a string, URL, or Request');\n        }\n        if (this._options.prefixUrl && typeof this._input === 'string') {\n            if (this._input.startsWith('/')) {\n                throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n            }\n            if (!this._options.prefixUrl.endsWith('/')) {\n                this._options.prefixUrl += '/';\n            }\n            this._input = this._options.prefixUrl + this._input;\n        }\n        if (supportsAbortController && supportsAbortSignal) {\n            const originalSignal = this._options.signal ?? this._input.signal;\n            this.abortController = new globalThis.AbortController();\n            this._options.signal = originalSignal ? AbortSignal.any([originalSignal, this.abortController.signal]) : this.abortController.signal;\n        }\n        if (supportsRequestStreams) {\n            // @ts-expect-error - Types are outdated.\n            this._options.duplex = 'half';\n        }\n        if (this._options.json !== undefined) {\n            this._options.body = this._options.stringifyJson?.(this._options.json) ?? JSON.stringify(this._options.json);\n            this._options.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n        }\n        this.request = new globalThis.Request(this._input, this._options);\n        if (this._options.searchParams) {\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const textSearchParams = typeof this._options.searchParams === 'string'\n                ? this._options.searchParams.replace(/^\\?/, '')\n                : new URLSearchParams(this._options.searchParams).toString();\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const searchParams = '?' + textSearchParams;\n            const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n            // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n            if (((supportsFormData && this._options.body instanceof globalThis.FormData)\n                || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n                this.request.headers.delete('content-type');\n            }\n            // The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n            this.request = new globalThis.Request(new globalThis.Request(url, { ...this.request }), this._options);\n        }\n        // If `onUploadProgress` is passed, it uses the stream API internally\n        if (this._options.onUploadProgress) {\n            if (typeof this._options.onUploadProgress !== 'function') {\n                throw new TypeError('The `onUploadProgress` option must be a function');\n            }\n            if (!supportsRequestStreams) {\n                throw new Error('Request streams are not supported in your environment. The `duplex` option for `Request` is not available.');\n            }\n            const originalBody = this.request.body;\n            if (originalBody) {\n                this.request = streamRequest(this.request, this._options.onUploadProgress);\n            }\n        }\n    }\n    _calculateRetryDelay(error) {\n        this._retryCount++;\n        if (this._retryCount > this._options.retry.limit || error instanceof TimeoutError) {\n            throw error;\n        }\n        if (error instanceof HTTPError) {\n            if (!this._options.retry.statusCodes.includes(error.response.status)) {\n                throw error;\n            }\n            const retryAfter = error.response.headers.get('Retry-After')\n                ?? error.response.headers.get('RateLimit-Reset')\n                ?? error.response.headers.get('X-RateLimit-Reset') // GitHub\n                ?? error.response.headers.get('X-Rate-Limit-Reset'); // Twitter\n            if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n                let after = Number(retryAfter) * 1000;\n                if (Number.isNaN(after)) {\n                    after = Date.parse(retryAfter) - Date.now();\n                }\n                else if (after >= Date.parse('2024-01-01')) {\n                    // A large number is treated as a timestamp (fixed threshold protects against clock skew)\n                    after -= Date.now();\n                }\n                const max = this._options.retry.maxRetryAfter ?? after;\n                return after < max ? after : max;\n            }\n            if (error.response.status === 413) {\n                throw error;\n            }\n        }\n        const retryDelay = this._options.retry.delay(this._retryCount);\n        return Math.min(this._options.retry.backoffLimit, retryDelay);\n    }\n    _decorateResponse(response) {\n        if (this._options.parseJson) {\n            response.json = async () => this._options.parseJson(await response.text());\n        }\n        return response;\n    }\n    async _retry(function_) {\n        try {\n            return await function_();\n        }\n        catch (error) {\n            const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n            if (this._retryCount < 1) {\n                throw error;\n            }\n            await delay(ms, { signal: this._options.signal });\n            for (const hook of this._options.hooks.beforeRetry) {\n                // eslint-disable-next-line no-await-in-loop\n                const hookResult = await hook({\n                    request: this.request,\n                    options: this._options,\n                    error: error,\n                    retryCount: this._retryCount,\n                });\n                // If `stop` is returned from the hook, the retry process is stopped\n                if (hookResult === stop) {\n                    return;\n                }\n            }\n            return this._retry(function_);\n        }\n    }\n    async _fetch() {\n        for (const hook of this._options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(this.request, this._options);\n            if (result instanceof Request) {\n                this.request = result;\n                break;\n            }\n            if (result instanceof Response) {\n                return result;\n            }\n        }\n        const nonRequestOptions = findUnknownOptions(this.request, this._options);\n        // Cloning is done here to prepare in advance for retries\n        const mainRequest = this.request;\n        this.request = mainRequest.clone();\n        if (this._options.timeout === false) {\n            return this._options.fetch(mainRequest, nonRequestOptions);\n        }\n        return timeout(mainRequest, nonRequestOptions, this.abortController, this._options);\n    }\n}\n//# sourceMappingURL=Ky.js.map","import { usualFormBoundarySize } from '../core/constants.js';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const getBodySize = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (body instanceof FormData) {\n        // This is an approximation, as FormData size calculation is not straightforward\n        let size = 0;\n        for (const [key, value] of body) {\n            size += usualFormBoundarySize;\n            size += new TextEncoder().encode(`Content-Disposition: form-data; name=\"${key}\"`).length;\n            size += typeof value === 'string'\n                ? new TextEncoder().encode(value).length\n                : value.size;\n        }\n        return size;\n    }\n    if (body instanceof Blob) {\n        return body.size;\n    }\n    if (body instanceof ArrayBuffer) {\n        return body.byteLength;\n    }\n    if (typeof body === 'string') {\n        return new TextEncoder().encode(body).length;\n    }\n    if (body instanceof URLSearchParams) {\n        return new TextEncoder().encode(body.toString()).length;\n    }\n    if ('byteLength' in body) {\n        return (body).byteLength;\n    }\n    if (typeof body === 'object' && body !== null) {\n        try {\n            const jsonString = JSON.stringify(body);\n            return new TextEncoder().encode(jsonString).length;\n        }\n        catch {\n            return 0;\n        }\n    }\n    return 0; // Default case, unable to determine size\n};\nexport const streamResponse = (response, onDownloadProgress) => {\n    const totalBytes = Number(response.headers.get('content-length')) || 0;\n    let transferredBytes = 0;\n    if (response.status === 204) {\n        if (onDownloadProgress) {\n            onDownloadProgress({ percent: 1, totalBytes, transferredBytes }, new Uint8Array());\n        }\n        return new Response(null, {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        });\n    }\n    return new Response(new ReadableStream({\n        async start(controller) {\n            const reader = response.body.getReader();\n            if (onDownloadProgress) {\n                onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());\n            }\n            async function read() {\n                const { done, value } = await reader.read();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (onDownloadProgress) {\n                    transferredBytes += value.byteLength;\n                    const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                    onDownloadProgress({ percent, transferredBytes, totalBytes }, value);\n                }\n                controller.enqueue(value);\n                await read();\n            }\n            await read();\n        },\n    }), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n    });\n};\nexport const streamRequest = (request, onUploadProgress) => {\n    const totalBytes = getBodySize(request.body);\n    let transferredBytes = 0;\n    return new Request(request, {\n        // @ts-expect-error - Types are outdated.\n        duplex: 'half',\n        body: new ReadableStream({\n            async start(controller) {\n                const reader = request.body instanceof ReadableStream ? request.body.getReader() : new Response('').body.getReader();\n                async function read() {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        // Ensure 100% progress is reported when the upload is complete\n                        if (onUploadProgress) {\n                            onUploadProgress({ percent: 1, transferredBytes, totalBytes: Math.max(totalBytes, transferredBytes) }, new Uint8Array());\n                        }\n                        controller.close();\n                        return;\n                    }\n                    transferredBytes += value.byteLength;\n                    let percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                    if (totalBytes < transferredBytes || percent === 1) {\n                        percent = 0.99;\n                    }\n                    if (onUploadProgress) {\n                        onUploadProgress({ percent: Number(percent.toFixed(2)), transferredBytes, totalBytes }, value);\n                    }\n                    controller.enqueue(value);\n                    await read();\n                }\n                await read();\n            },\n        }),\n    });\n};\n//# sourceMappingURL=body.js.map","// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\nexport default async function delay(ms, { signal }) {\n    return new Promise((resolve, reject) => {\n        if (signal) {\n            signal.throwIfAborted();\n            signal.addEventListener('abort', abortHandler, { once: true });\n        }\n        function abortHandler() {\n            clearTimeout(timeoutId);\n            reject(signal.reason);\n        }\n        const timeoutId = setTimeout(() => {\n            signal?.removeEventListener('abort', abortHandler);\n            resolve();\n        }, ms);\n    });\n}\n//# sourceMappingURL=delay.js.map","import { kyOptionKeys, requestOptionsRegistry } from '../core/constants.js';\nexport const findUnknownOptions = (request, options) => {\n    const unknownOptions = {};\n    for (const key in options) {\n        if (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && !(key in request)) {\n            unknownOptions[key] = options[key];\n        }\n    }\n    return unknownOptions;\n};\n//# sourceMappingURL=options.js.map","import { TimeoutError } from '../errors/TimeoutError.js';\n// `Promise.race()` workaround (#91)\nexport default async function timeout(request, init, abortController, options) {\n    return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n            if (abortController) {\n                abortController.abort();\n            }\n            reject(new TimeoutError(request));\n        }, options.timeout);\n        void options\n            .fetch(request, init)\n            .then(resolve)\n            .catch(reject)\n            .then(() => {\n            clearTimeout(timeoutId);\n        });\n    });\n}\n//# sourceMappingURL=timeout.js.map","/*! MIT License © Sindre Sorhus */\nimport { Ky } from './core/Ky.js';\nimport { requestMethods, stop } from './core/constants.js';\nimport { validateAndMerge } from './utils/merge.js';\nconst createInstance = (defaults) => {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n    for (const method of requestMethods) {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));\n    }\n    ky.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));\n    ky.extend = (newDefaults) => {\n        if (typeof newDefaults === 'function') {\n            newDefaults = newDefaults(defaults ?? {});\n        }\n        return createInstance(validateAndMerge(defaults, newDefaults));\n    };\n    ky.stop = stop;\n    return ky;\n};\nconst ky = createInstance();\nexport default ky;\nexport { HTTPError } from './errors/HTTPError.js';\nexport { TimeoutError } from './errors/TimeoutError.js';\n//# sourceMappingURL=index.js.map","import dayjs, { extend } from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport ky, { type KyRequest, type KyResponse } from 'ky';\nimport { createSentryScope } from '@app/sentry/createSentryScope';\nimport { getFibonacciNumber, wait } from 'src/utils';\nimport {\n  getLocalStorageData,\n  setLocalStorageData,\n} from '@app/storage/local/shared';\n\nimport { LocalStorageKey } from '@app/storage/local/types/sharedTypes';\n\nexport const apiScope = createSentryScope('api');\n\nconst limitInSeconds = 60 * 60;\n\nconst getTimingWithLimit = (timingInSec: number, limitInSec: number) => {\n  if (timingInSec > limitInSec) {\n    return limitInSec;\n  }\n  return timingInSec;\n};\n\nextend(utc);\n\nexport const configsClient = ky.extend({\n  timeout: 60000,\n  retry: {\n    limit: 30,\n    methods: ['get', 'post'],\n  },\n  hooks: {\n    beforeRequest: [\n      async (request) => {\n        const { configsBaseUrl } = await getLocalStorageData(\n          LocalStorageKey.ConfigsBaseUrl,\n        );\n\n        let url = request.url;\n\n        if (url.startsWith(process.env.CONFIG_BASE_URL_1) && configsBaseUrl) {\n          url = url.replace(process.env.CONFIG_BASE_URL_1, configsBaseUrl);\n        }\n\n        return new Request(url, request);\n      },\n    ],\n    beforeRetry: [\n      async ({ retryCount }) => {\n        const { configsBaseUrl } = await getLocalStorageData(\n          LocalStorageKey.ConfigsBaseUrl,\n        );\n        if (\n          !configsBaseUrl ||\n          configsBaseUrl === process.env.CONFIG_BASE_URL_1\n        ) {\n          await setLocalStorageData({\n            [LocalStorageKey.ConfigsBaseUrl]: process.env.CONFIG_BASE_URL_2,\n          });\n        }\n        await wait(\n          getTimingWithLimit(getFibonacciNumber(retryCount), limitInSeconds) *\n            1000,\n        );\n        return;\n      },\n    ],\n    afterResponse: [\n      async (request, options, response) => {\n        if (response.ok) {\n          const responseClone = response.clone() as KyResponse;\n          const timestampUtc = dayjs.utc().format();\n\n          let responseData = null;\n          try {\n            responseData = await responseClone.json();\n          } catch (err) {\n            responseData = null;\n          }\n\n          const requestLog = {\n            timestampUtc,\n            status: response.status,\n            statusText: response.statusText,\n            url: request.url,\n          };\n          let { apiHttpSuccess } = await getLocalStorageData(\n            LocalStorageKey.ApiHttpSuccess,\n          );\n          if (!apiHttpSuccess) {\n            apiHttpSuccess = {};\n          }\n          await setLocalStorageData({\n            apiHttpSuccess: {\n              ...apiHttpSuccess,\n              [request.url]: requestLog,\n            },\n          });\n        }\n        return response;\n      },\n    ],\n    beforeError: [\n      async (error) => {\n        const { request, response, message } = error;\n        const responseClone = response.clone() as KyResponse;\n        const requestClone = request.clone() as KyRequest;\n\n        apiScope.setExtra('request', requestClone);\n        apiScope.setExtra('response', responseClone);\n        apiScope.setExtra('message', message);\n        apiScope.setLevel('error');\n        apiScope.setTag('request.url', requestClone.url);\n        apiScope.setTag('request.method', requestClone.method);\n        apiScope.setTag('response.status', responseClone.status);\n        apiScope.captureException(new Error(message));\n\n        let requestData = null;\n        let errorData = null;\n        try {\n          requestData = await requestClone.json();\n          errorData = await responseClone.json();\n        } catch {\n          requestData = null;\n          errorData = null;\n        }\n        const timestampUtc = dayjs.utc().format();\n        const errorLog = {\n          timestampUtc,\n          message,\n          errorData,\n          status: responseClone.status,\n          statusText: responseClone.statusText,\n          requestData,\n        };\n        let { apiHttpErrors } = await getLocalStorageData(\n          LocalStorageKey.ApiHttpErrors,\n        );\n        if (!apiHttpErrors) {\n          apiHttpErrors = {};\n        }\n        await setLocalStorageData({\n          apiHttpErrors: {\n            ...apiHttpErrors,\n            [responseClone.url]: errorLog,\n          },\n        });\n        return error;\n      },\n    ],\n  },\n});\n","export function versionStringToNumber(version: string): number {\n  return Number(\n    version\n      .split('.')\n      .map((segment) => segment.padStart(2, '0')) // Normalize each segment to 2 digits\n      .join(''),\n  );\n}\n","import { versionStringToNumber } from '@popup/shared/helpers/versionStringToNumber';\nimport {\n  type FeatureListResponse,\n  type FeatureList,\n  Feature,\n} from '../types/Feature';\nimport { browser_api } from '@app/browser_api';\n\nfunction getActive(\n  featureVersion?: string | null,\n  defaultValue = false,\n): boolean {\n  const currentVersion = browser_api.runtime.getManifest().version;\n\n  if (!featureVersion) {\n    return defaultValue;\n  }\n\n  return (\n    versionStringToNumber(currentVersion) >=\n    versionStringToNumber(featureVersion)\n  );\n}\n\nexport function formatResponse(\n  featureListDto: FeatureListResponse,\n): FeatureList {\n  const featureList: FeatureList = {\n    [Feature.DevMeta]: getActive(featureListDto[Feature.DevMeta]),\n    [Feature.PACLite]: getActive(featureListDto[Feature.PACLite]),\n    [Feature.CaptchaCrackerDisabled]: getActive(\n      featureListDto[Feature.CaptchaCrackerDisabled],\n      true,\n    ),\n    [Feature.OnFailDisabled]: getActive(\n      featureListDto[Feature.OnFailDisabled],\n      true,\n    ),\n    [Feature.ProxyControlledByOtherExtensionsVisibility]: getActive(\n      featureListDto[Feature.ProxyControlledByOtherExtensionsVisibility],\n    ),\n    [Feature.AdfoxBanner]: getActive(featureListDto[Feature.AdfoxBanner]),\n    [Feature.ProxyAuth]: getActive(featureListDto[Feature.ProxyAuth]),\n    [Feature.FreeUsersReview]: getActive(\n      featureListDto[Feature.FreeUsersReview],\n    ),\n    [Feature.MultiLocalesSupport]: getActive(\n      featureListDto[Feature.MultiLocalesSupport],\n    ),\n    [Feature.GiftAdvertising]: getActive(\n      featureListDto[Feature.GiftAdvertising],\n    ),\n  };\n\n  return featureList;\n}\n","import { type FeatureList } from '@app/features/types/Feature';\nimport { fetchFeaturesData } from '@api/features';\nimport { formatResponse } from '@app/features/utils/formatResponse';\n\nexport async function getFeaturesData(): Promise<FeatureList> {\n  const data = await fetchFeaturesData();\n\n  return formatResponse(data);\n}\n","import { getConfigsUrl } from 'src/utils';\nimport { type FeatureListResponse } from '../app/features/types/Feature';\nimport { configsClient } from './configsClient';\n\nexport async function fetchFeaturesData(): Promise<FeatureListResponse> {\n  const featuresApiUrl = await getConfigsUrl(process.env.FEATURE_LIST_URL);\n\n  if (!featuresApiUrl) {\n    throw new Error('No features API URL provided');\n  }\n\n  const data = await configsClient\n    .get<FeatureListResponse>(featuresApiUrl.toString())\n    .json();\n\n  return data;\n}\n","import { Feature, FeatureList, FeatureStore } from './types/Feature';\nimport { getFeaturesData } from '@app/storage/local/featuresData';\nimport {\n  getLocalStorageData,\n  setLocalStorageData,\n} from '@app/storage/local/shared';\n\nimport { LocalStorageKey } from '@app/storage/local/types/sharedTypes';\n\nlet listeners: Array<() => void> = [];\n\nconst initialStore: FeatureStore = {\n  isInitialized: false,\n  featuresList: {} as FeatureList,\n  loading: false,\n  error: null,\n};\n\nlet tempGlobalStore: FeatureStore = { ...initialStore };\n\nlet tempFeaturesList: FeatureList = {} as FeatureList;\n\nasync function getFeatureStore() {\n  const { featureStore } = await getLocalStorageData(\n    LocalStorageKey.FeatureStore,\n  );\n\n  if (!featureStore) {\n    return initialStore;\n  }\n\n  return featureStore as FeatureStore;\n}\n\nasync function setFeatureStore(store: FeatureStore) {\n  await setLocalStorageData({\n    [LocalStorageKey.FeatureStore]: store,\n  });\n\n  tempGlobalStore = {\n    ...store,\n    featuresList: store.featuresList,\n  };\n}\n\nconst featureStore = {\n  async setFeatureValues(features: Partial<FeatureList>) {\n    tempFeaturesList = {\n      ...tempFeaturesList,\n      ...features,\n    };\n\n    tempGlobalStore = {\n      ...tempGlobalStore,\n      featuresList: {\n        ...tempGlobalStore.featuresList,\n        ...tempFeaturesList,\n      },\n    };\n\n    emitChange();\n\n    await setLocalStorageData({\n      [LocalStorageKey.FeaturesListLocal]: tempFeaturesList,\n    });\n  },\n\n  subscribe(listener: () => void) {\n    if (!tempGlobalStore.isInitialized && !tempGlobalStore.loading) {\n      featureStore.init();\n    }\n\n    listeners = [...listeners, listener];\n\n    return () => {\n      listeners = listeners.filter((l) => l !== listener);\n    };\n  },\n\n  getSnapshot(): FeatureStore {\n    return tempGlobalStore;\n  },\n\n  async getSnapshotAsync(): Promise<FeatureStore> {\n    if (!tempGlobalStore.isInitialized && !tempGlobalStore.loading) {\n      await this.init();\n    }\n\n    const store = await getFeatureStore();\n    const { featuresListLocal } = await getLocalStorageData(\n      LocalStorageKey.FeaturesListLocal,\n    );\n\n    return {\n      ...store,\n      featuresList: {\n        ...store.featuresList,\n        ...featuresListLocal,\n      },\n    };\n  },\n\n  async init() {\n    try {\n      const localStore = await getFeatureStore();\n\n      if (!localStore.isInitialized) {\n        await setFeatureStore({ ...initialStore, loading: true });\n      }\n\n      const features = await getFeaturesData();\n\n      await setFeatureStore({\n        ...initialStore,\n        isInitialized: true,\n        featuresList: {\n          [Feature.DevMeta]: features[Feature.DevMeta] || false,\n          [Feature.PACLite]: features[Feature.PACLite] || false,\n          [Feature.CaptchaCrackerDisabled]:\n            features[Feature.CaptchaCrackerDisabled] || false,\n          [Feature.OnFailDisabled]: features[Feature.OnFailDisabled] || false,\n          [Feature.AdfoxBanner]: features[Feature.AdfoxBanner] || false,\n          [Feature.ProxyControlledByOtherExtensionsVisibility]:\n            features[Feature.ProxyControlledByOtherExtensionsVisibility] ||\n            false,\n          [Feature.ProxyAuth]: features[Feature.ProxyAuth] || false,\n          [Feature.FreeUsersReview]: features[Feature.FreeUsersReview] || false,\n          [Feature.MultiLocalesSupport]:\n            features[Feature.MultiLocalesSupport] || false,\n          [Feature.GiftAdvertising]:\n            features[Feature.GiftAdvertising] || false,\n        },\n        loading: false,\n        error: null,\n      });\n\n      const { featuresListLocal } = await getLocalStorageData(\n        LocalStorageKey.FeaturesListLocal,\n      );\n\n      tempFeaturesList = featuresListLocal as FeatureList;\n\n      tempGlobalStore = {\n        ...tempGlobalStore,\n        featuresList: {\n          ...tempGlobalStore.featuresList,\n          ...featuresListLocal,\n        },\n      };\n\n      emitChange();\n      console.warn('Feature store initialized');\n    } catch (error) {\n      await setFeatureStore({\n        ...initialStore,\n        loading: false,\n        error: error as Error,\n      });\n\n      console.error(error);\n    }\n  },\n\n  async reset() {\n    tempFeaturesList = {} as FeatureList;\n\n    await setLocalStorageData({\n      [LocalStorageKey.FeaturesListLocal]: tempFeaturesList,\n    });\n\n    emitChange();\n  },\n};\n\nfunction emitChange() {\n  for (let listener of listeners) {\n    listener();\n  }\n}\n\nexport { featureStore };\n","import { fetchMetaApiData } from '@api/meta';\nimport { MetaApiData } from '@app/storage/local/types/expirableTypes';\nimport { setLocalStorageData } from '@app/storage/local/shared';\n\nexport async function getMetaApiData(): Promise<MetaApiData> {\n  const data = await fetchMetaApiData();\n\n  await setLocalStorageData({ metaApiData: data });\n  return data;\n}\n","import { Feature } from '@app/features/types/Feature';\nimport { featureStore } from '../app/features/list';\nimport { configsClient } from './configsClient';\nimport { getConfigsUrl } from 'src/utils';\nimport { MetaApiData } from '@app/storage/local/types/expirableTypes';\n\nexport async function fetchMetaApiData(): Promise<MetaApiData> {\n  const store = featureStore.getSnapshot();\n\n  const isDevMeta = store.featuresList[Feature.DevMeta];\n\n  const metaApiPath = isDevMeta\n    ? process.env.DEV_META_API_URL\n    : process.env.META_API_URL;\n\n  const metaApiUrl = await getConfigsUrl(metaApiPath);\n\n  if (!metaApiUrl) {\n    throw new Error('No meta API URL provided');\n  }\n\n  const data = await configsClient\n    .get<MetaApiData>(metaApiUrl.toString())\n    .json();\n\n  const updateMetaApiData: MetaApiData = {\n    apiBaseUrl: data.apiBaseUrl,\n    cookieDomain: data.cookieDomain,\n    currentVersion: data.currentVersion,\n    showOnUpdateVersion: data.showOnUpdateVersion,\n    proxyUpdatePeriod: data.proxyUpdatePeriod ?? 60 * 6,\n    requiredVersion: data.requiredVersion,\n    supportedBrowsers: data.supportedBrowsers,\n    shouldUpdatePAC: data.shouldUpdatePAC,\n    shouldUpdatePACVersion: data.shouldUpdatePACVersion,\n    availableBannersData: data.availableBannersData,\n    androidAppUrl: data.androidAppUrl,\n    availablePaymentMethods: data.availablePaymentMethods,\n    publicOfferUrl: data.publicOfferUrl,\n    advMinVersion: data.advMinVersion,\n    availableAlarmTries: data.availableAlarmTries || 15,\n    updateSubscriptionInfoPeriod: data.updateSubscriptionInfoPeriod || 25,\n    adfoxBannerUrl: data.adfoxBannerUrl,\n    giftAdvertisingAvailableDates: data.giftAdvertisingAvailableDates,\n    giftAdvertisingPeriodInMinutes:\n      data.giftAdvertisingPeriodInMinutes || 24 * 60,\n  };\n\n  return { ...data, ...updateMetaApiData };\n}\n","import { getMetaApiData } from '../local/metaApiData';\nimport type { Cookies } from 'webextension-polyfill';\nimport { browser_api } from '@app/browser_api';\n\nconst COOKIE_OPTIONS = {\n  path: '/',\n  secure: true,\n  sameSite: 'strict' as Cookies.SameSiteStatus,\n  expirationDate: Math.floor(Date.now() / 1000) + 365 * 24 * 60 * 60, // 1 year\n};\n\nexport enum CookieKey {\n  UserId = 'userId',\n  DeviceId = 'deviceId',\n}\n\nexport async function setCookieData(data: {\n  [key: string]: string;\n}): Promise<void> {\n  const { cookieDomain } = await getMetaApiData();\n\n  const entries = Object.entries(data);\n\n  for (const [key, value] of entries) {\n    try {\n      await browser_api.cookies.set({\n        url: `https://${cookieDomain}`,\n        name: key,\n        value: value,\n        ...COOKIE_OPTIONS,\n      });\n    } catch (error) {\n      console.error(`Failed to set cookie for key: ${key}`, error);\n      throw error;\n    }\n  }\n}\n\nexport async function getCookieData(\n  key: CookieKey,\n): Promise<{ [key: string]: string | null }> {\n  try {\n    const { cookieDomain } = await getMetaApiData();\n\n    const cookie = await browser_api.cookies.get({\n      url: `https://${cookieDomain}`,\n      name: key,\n    });\n\n    if (!cookie) {\n      return { [key]: null };\n    }\n\n    return { [key]: cookie.value };\n  } catch (error) {\n    console.error(`Failed to get cookie for key: ${key}`, error);\n    throw error;\n  }\n}\n\nexport async function removeCookieData(\n  key: CookieKey | CookieKey[],\n): Promise<void> {\n  try {\n    const { cookieDomain } = await getMetaApiData();\n\n    if (Array.isArray(key)) {\n      await Promise.all(\n        key.map((k) =>\n          browser_api.cookies.remove({\n            url: `https://${cookieDomain}`,\n            name: k,\n          }),\n        ),\n      );\n    } else {\n      await browser_api.cookies.remove({\n        url: `https://${cookieDomain}`,\n        name: key,\n      });\n    }\n  } catch (error) {\n    console.error(`Failed to remove cookie for key: ${key.toString()}`, error);\n    throw error;\n  }\n}\n","import dayjs, { extend } from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport ky, { HTTPError, type KyRequest, type KyResponse } from 'ky';\nimport { createSentryScope } from '@app/sentry/createSentryScope';\nimport { wait, getFibonacciNumber } from 'src/utils';\nimport { browser_api } from '@app/browser_api';\nimport {\n  getLocalStorageData,\n  setLocalStorageData,\n} from '@app/storage/local/shared';\nimport { LocalStorageKey } from '@app/storage/local/types/sharedTypes';\n\nexport const apiScope = createSentryScope('api');\n\nconst limitInSeconds = 60 * 60;\n\nconst getTimingWithLimit = (timingInSec: number, limitInSec: number) => {\n  if (timingInSec > limitInSec) {\n    return limitInSec;\n  }\n  return timingInSec;\n};\n\nconst getExtensionVersion = (): string => {\n  return browser_api.runtime.getManifest().version;\n};\n\nconst createCustomHeaders = (): Record<string, string> => {\n  return {\n    'X-Client-Version': getExtensionVersion(),\n  };\n};\n\nextend(utc);\n\nexport const httpClient = ky.extend({\n  timeout: 60000,\n  retry: {\n    limit: 30,\n    methods: ['get', 'post'],\n  },\n  hooks: {\n    beforeRequest: [\n      async (request) => {\n        const { metaApiData } = await getLocalStorageData(\n          LocalStorageKey.MetaApiData,\n        );\n\n        const apiUrl = metaApiData?.apiBaseUrl;\n        const cookieDomain = metaApiData?.cookieDomain;\n\n        const url = new URL(request.url);\n        if (\n          apiUrl &&\n          cookieDomain &&\n          (url.hostname.includes(apiUrl) || url.hostname.includes(cookieDomain))\n        ) {\n          const customHeaders = createCustomHeaders();\n          Object.entries(customHeaders).forEach(([key, value]) => {\n            request.headers.set(key, value);\n          });\n        }\n        return request;\n      },\n    ],\n    beforeRetry: [\n      async ({ error, retryCount }) => {\n        if (!(error instanceof HTTPError)) {\n          await wait(\n            getTimingWithLimit(\n              10 + getFibonacciNumber(retryCount),\n              limitInSeconds,\n            ) * 1000,\n          );\n          return;\n        }\n        const retryAfterHeader = error.response.headers.get('Retry-After');\n        const retryAfterTiming = retryAfterHeader\n          ? Number(retryAfterHeader)\n          : NaN;\n        if (!isNaN(retryAfterTiming)) {\n          await wait(\n            getTimingWithLimit(\n              retryAfterTiming + getFibonacciNumber(retryCount),\n              limitInSeconds,\n            ) * 1000,\n          );\n          return;\n        }\n        await wait(\n          getTimingWithLimit(\n            10 + getFibonacciNumber(retryCount),\n            limitInSeconds,\n          ) * 1000,\n        );\n        return;\n      },\n    ],\n    afterResponse: [\n      async (request, options, response) => {\n        if (response.ok) {\n          const responseClone = response.clone() as KyResponse;\n          const timestampUtc = dayjs.utc().format();\n\n          let responseData = null;\n          try {\n            responseData = await responseClone.json();\n          } catch (err) {\n            responseData = null;\n          }\n\n          const requestLog = {\n            timestampUtc,\n            status: response.status,\n            statusText: response.statusText,\n            url: request.url,\n          };\n          let { apiHttpSuccess } = await getLocalStorageData(\n            LocalStorageKey.ApiHttpSuccess,\n          );\n          if (!apiHttpSuccess) {\n            apiHttpSuccess = {};\n          }\n          await setLocalStorageData({\n            apiHttpSuccess: {\n              ...apiHttpSuccess,\n              [request.url]: requestLog,\n            },\n          });\n        }\n        return response;\n      },\n    ],\n    beforeError: [\n      async (error) => {\n        const { request, response, message } = error;\n        const responseClone = response.clone() as KyResponse;\n        const requestClone = request.clone() as KyRequest;\n\n        apiScope.setExtra('request', requestClone);\n        apiScope.setExtra('response', responseClone);\n        apiScope.setExtra('message', message);\n        apiScope.setLevel('error');\n        apiScope.setTag('request.url', requestClone.url);\n        apiScope.setTag('request.method', requestClone.method);\n        apiScope.setTag('response.status', responseClone.status);\n        apiScope.captureException(new Error(message));\n\n        let requestData = null;\n        let errorData = null;\n        try {\n          requestData = await requestClone.json();\n          errorData = await responseClone.json();\n        } catch {\n          requestData = null;\n          errorData = null;\n        }\n        const timestampUtc = dayjs.utc().format();\n        const errorLog = {\n          timestampUtc,\n          message,\n          errorData,\n          status: responseClone.status,\n          statusText: responseClone.statusText,\n          requestData,\n        };\n        let { apiHttpErrors } = await getLocalStorageData(\n          LocalStorageKey.ApiHttpErrors,\n        );\n        if (!apiHttpErrors) {\n          apiHttpErrors = {};\n        }\n        await setLocalStorageData({\n          apiHttpErrors: {\n            ...apiHttpErrors,\n            [responseClone.url]: errorLog,\n          },\n        });\n        return error;\n      },\n    ],\n  },\n});\n","import { createSentryScope } from '@app/sentry/createSentryScope';\nimport { CookieKey, getCookieData, setCookieData } from '../cookies/shared';\nimport { browser_api } from '@app/browser_api';\nimport { GetSubscriptionResponse } from '@api/urls';\nimport { getMetaApiData } from '@app/storage/local/metaApiData';\nimport { getDeviceId, getDeviceIP } from '@background/client/utils';\nimport {\n  fetchSubscriptionInfo,\n  SubscriptionInfoError,\n} from '@api/premium/fetchPremiumData';\nimport { Actions } from '@app/actions/shared';\nimport { getIsPremiumStatus } from '@app/utils/getIsPremiumStatus';\nimport {\n  LocalStorageData,\n  LocalStorageKey,\n  type LocalStorageKeyType,\n} from '@app/storage/local/types/sharedTypes';\n\nexport const localStorageScope = createSentryScope('storage');\n\nexport async function getLocalStorageData<Key extends LocalStorageKeyType>(\n  keys?: Key | Key[],\n): Promise<Partial<Pick<LocalStorageData, Key>>> {\n  if (!keys) {\n    return browser_api.storage.local.get() as Promise<LocalStorageData>;\n  }\n\n  return browser_api.storage.local.get(keys) as Promise<\n    Pick<LocalStorageData, Key>\n  >;\n}\n\nexport async function setLocalStorageData(\n  data: Partial<LocalStorageData>,\n): Promise<void> {\n  await browser_api.storage.local.set(data);\n}\n\nexport async function deleteLocalStorageData(\n  keys: LocalStorageKeyType | LocalStorageKeyType[],\n): Promise<void> {\n  await browser_api.storage.local.remove(keys);\n}\n\n// We need to update the userId in cookies when it changes in local storage\nbrowser_api.storage.local.onChanged.addListener(async (changes) => {\n  if (changes[LocalStorageKey.UserId]) {\n    const { userId: cookieUserId } = await getCookieData(CookieKey.UserId);\n    const newUserId = changes[LocalStorageKey.UserId].newValue;\n\n    if (typeof newUserId === 'string' && newUserId !== cookieUserId) {\n      await setCookieData({\n        [CookieKey.UserId]: newUserId,\n      });\n    }\n  }\n\n  if (changes[LocalStorageKey.DeviceId]) {\n    const { deviceId: cookieDeviceId } = await getCookieData(\n      CookieKey.DeviceId,\n    );\n    const newDeviceId = changes[LocalStorageKey.DeviceId].newValue;\n\n    if (typeof newDeviceId === 'string' && newDeviceId !== cookieDeviceId) {\n      await setCookieData({\n        [CookieKey.DeviceId]: newDeviceId,\n      });\n    }\n  }\n});\n\nfunction isGetSubscriptionInfoError(\n  data: GetSubscriptionResponse | SubscriptionInfoError,\n): data is SubscriptionInfoError {\n  return 'error' in data && data.error !== null;\n}\n\nexport async function setProxyData(\n  lastProxyHost: string,\n  lastProxyPort: number,\n): Promise<void> {\n  await setLocalStorageData({ lastProxyHost, lastProxyPort });\n}\n\nexport async function getSubscriptionInfo(): Promise<GetSubscriptionResponse | null> {\n  if (process.env.EXTENSION_CODE === 'naruzhuv2') {\n    return null;\n  }\n\n  const isOnlyPremium: boolean = process.env.IS_ONLY_PREMIUM === 'true';\n\n  try {\n    await setLocalStorageData({ isSubscriptionInfoError: false });\n\n    const { apiBaseUrl } = await getMetaApiData();\n\n    const deviceId = await getDeviceId();\n    const deviceIp = await getDeviceIP();\n\n    const { userId } = await getLocalStorageData(LocalStorageKey.UserId);\n\n    if (!userId) {\n      localStorageScope.captureException(\n        new Error('User ID is empty when fetching subscription info'),\n      );\n      return null;\n    }\n\n    const subscriptionInfo = await fetchSubscriptionInfo(apiBaseUrl, {\n      userId,\n      deviceId,\n      deviceIp,\n    });\n\n    if (isGetSubscriptionInfoError(subscriptionInfo)) {\n      if (subscriptionInfo.error === 'changeDevice') {\n        try {\n          await browser_api.runtime.sendMessage({\n            action: Actions.OpenPopupChangeDevice,\n          });\n        } catch (error) {\n          console.error(error);\n        }\n\n        await setLocalStorageData({ isChangeDeviceError: true });\n        await setLocalStorageData({ targetState: 'disconnected' });\n        return null;\n      }\n\n      if (subscriptionInfo.error === 'requestBlockedError') {\n        await setLocalStorageData({\n          requestBlockedError:\n            'request fetchSubscriptionInfo is probably blocked',\n        });\n      }\n\n      throw new Error(subscriptionInfo.error);\n    }\n\n    const { daysLeft, paidUntil, status, secondsLeft } =\n      subscriptionInfo?.data?.subscription ?? {};\n\n    const {\n      name: currentTariff,\n      deviceLimit,\n      activeDevices,\n    } = subscriptionInfo?.data?.tariff ?? {};\n\n    const isPremiumStatus = getIsPremiumStatus(status);\n\n    await setLocalStorageData({\n      daysLeft,\n      paidUntil,\n      status,\n      secondsLeft,\n      currentTariff,\n      deviceLimit,\n      activeDevices,\n    });\n\n    const { hasPremium, currentState } = await getLocalStorageData([\n      LocalStorageKey.HasPremium,\n      LocalStorageKey.CurrentState,\n    ]);\n\n    await setLocalStorageData({\n      hasPremium: isOnlyPremium || isPremiumStatus,\n    });\n\n    if (status === 'Expired' && hasPremium && currentState === 'connected') {\n      await setLocalStorageData({ targetState: 'disconnected' });\n    }\n\n    return subscriptionInfo;\n  } catch (error) {\n    console.error(error);\n\n    if (error instanceof Error && error.message === 'userNotFound') {\n      throw error;\n    }\n\n    await setLocalStorageData({ isSubscriptionInfoError: true });\n    return null;\n  }\n}\n","import { PremiumActions } from '@app/actions/premium';\nimport { browser_api } from '@app/browser_api';\nimport { getLocalStorageData } from '@app/storage/local/shared';\n\nimport { LocalStorageKey } from '@app/storage/local/types/sharedTypes';\n\nexport type Details = Record<string, string>;\n\nexport type PaymentStatusEventType = 'payment_status' | 'payment_started';\n\nexport type PaymentMessageEvent = {\n  type: PaymentStatusEventType;\n  details?: Details | null;\n};\n\nconst handleMessage = async (event: MessageEvent<PaymentMessageEvent>) => {\n  try {\n    if (!event.data || typeof event.data !== 'object') return;\n\n    if (event.data.type === 'payment_started') {\n      await browser_api.runtime.sendMessage({\n        action: PremiumActions.PaymentStarted,\n        payload: { details: event.data.details || null },\n      });\n    }\n\n    if (event.data.type === 'payment_status') {\n      handlePaymentStatusReceived();\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst handlePaymentStatusReceived = async () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const app = queryParams.get('app');\n\n  if (window.location.pathname.includes('payment') && app === 'ub') {\n    const { userId } = await getLocalStorageData(LocalStorageKey.UserId);\n    const userIdElementContainer = document.getElementById('user-id');\n\n    if (!userId || !userIdElementContainer) {\n      return;\n    }\n\n    const userText = document.createElement('span');\n    userText.style.fontStyle = 'italic';\n\n    userText.innerHTML =\n      '<br />Ваша подписка обновится в течение 5 минут.<br />Если по истечении этого времени у вас не включился Premium, введите ваш ID в расширении, нажав \"Ввести оплаченный ID\".<br /><br />';\n\n    const userIdElement = document.createElement('span');\n\n    userIdElement.innerText = `Ваш ID - ${userId}`;\n    userIdElement.style.fontWeight = 'bold';\n    userIdElement.style.fontSize = '20px';\n    userIdElement.style.color = 'var(--highlighted-text-color)';\n\n    userIdElementContainer.appendChild(userText);\n    userIdElementContainer.appendChild(userIdElement);\n  }\n};\n\nwindow.addEventListener('message', handleMessage, false);\n"],"names":["module","exports","e","n","r","i","s","u","a","o","c","f","h","d","l","$","y","M","name","weekdays","split","months","ordinal","t","m","String","length","Array","join","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","S","_","O","args","arguments","b","locale","$L","utc","$u","x","$x","$offset","this","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","k","forEach","extend","$i","isDayjs","en","Ls","local","call","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","globalThis","self","chrome","runtime","id","Error","browser","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","wrapAPIs","extensionAPIs","apiMetadata","Object","keys","DefaultWeakMap","WeakMap","constructor","createItem","items","undefined","super","key","has","makeCallback","promise","metadata","callbackArgs","lastError","reject","message","singleCallbackArg","resolve","pluralizeArguments","numArgs","wrapMethod","target","method","wrapper","Proxy","targetMethod","thisObj","hasOwnProperty","Function","bind","wrapObject","wrappers","cache","create","handlers","proxyTarget","prop","receiver","value","minArgs","maxArgs","Promise","fallbackToNoCallback","cbError","console","warn","noCallback","wrapAsyncFunction","defineProperty","configurable","enumerable","desc","Reflect","deleteProperty","wrapEvent","wrapperMap","addListener","listener","hasListener","removeListener","onRequestFinishedWrappers","req","wrappedReq","getContent","onMessageWrappers","sender","sendResponse","wrappedSendResponse","result","didCallSendResponse","sendResponsePromise","response","err","isResultThenable","then","msg","error","__mozWebExtensionPolyfillReject__","catch","wrappedSendMessageCallback","reply","wrappedSendMessage","apiNamespaceObj","wrappedCb","push","sendMessage","staticWrappers","devtools","network","onRequestFinished","onMessage","onMessageExternal","tabs","settingMetadata","clear","privacy","services","websites","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","obj","PremiumActions","__SENTRY_DEBUG__","SDK_VERSION","carrier","__SENTRY__","version","getGlobalSingleton","creator","CONSOLE_LEVELS","originalConsoleMethods","callback","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","isEnabled","_getLoggerSettings","enabled","_maybeLog","enable","disable","log","installedIntegrations","afterSetupIntegrations","client","integrations","integration","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","preprocessEvent","on","event","hint","processEvent","processor","assign","addEventProcessor","getPossibleEventMessages","possibleMessages","lastException","exception","values","type","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isPlainObject","isEvent","Event","Boolean","base","isVueViewModel","__isVue","_isVue","isRequest","request","Request","WINDOW","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","keyAttrs","isArray","maxStringLength","_htmlElementAsString","parentNode","reverse","el","tagName","HTMLElement","dataset","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","classes","allowedAttrs","attr","getLocationHref","document","location","href","getComponentName","truncate","str","max","safeJoin","input","delimiter","output","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","includes","isMatchingPattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","writable","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","crypto","gbl","msCrypto","getCrypto","getRandomByte","random","randomUUID","getRandomValues","typedArray","Uint8Array","getFirstException","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","isAlreadyCaptured","DEFAULT_IGNORE_ERRORS","eventFiltersIntegration","mergedOptions","clientOptions","getOptions","_mergeOptions","_hint","ignoreTransactions","transaction","_isIgnoredTransaction","ignoreErrors","_isIgnoredError","stacktrace","_isUselessError","denyUrls","url","_getEventFilterUrl","_isDeniedUrl","allowUrls","_isAllowedUrl","_shouldDropEvent","inboundFiltersIntegration","internalOptions","disableErrorDefaults","rootException","find","parent_id","frames","frame","filename","_getLastValidUrl","dateTimestampInSeconds","now","_cachedTimestampInSeconds","cachedTimeOrigin","performance","timeOrigin","createUnixTimestampInSecondsFunc","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","getBrowserTimeOrigin","updateSession","session","context","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","started","duration","release","environment","userAgent","errors","status","merge","initialObj","mergeObj","levels","generateSpanId","SCOPE_SPAN_FIELD","scope","span","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","traceId","sampleRand","newScope","flags","_level","_session","_transactionName","_fingerprint","_client","_lastEventId","setClient","setLastEventId","lastEventId","getClient","addScopeListener","setUser","_notifyScopeListeners","getUser","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSession","getSession","update","captureContext","scopeToMerge","scopeInstance","getScopeData","contexts","propagationContext","setPropagationContext","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","recordDroppedEvent","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","clearAttachments","breadcrumbs","attachments","eventProcessors","sdkProcessingMetadata","transactionName","setSDKProcessingMetadata","newData","getPropagationContext","captureException","syntheticException","originalException","captureMessage","captureEvent","AsyncContextStack","isolationScope","assignedScope","assignedIsolationScope","_stack","_isolationScope","withScope","_pushScope","maybePromiseResult","_popScope","res","getStackTop","getScope","getIsolationScope","pop","getAsyncContextStack","sentry","withSetScope","acs","withIsolationScope","withSetIsolationScope","getCurrentScope","rest","parentSpanId","propagationSpanId","traceContext","trace_id","span_id","parent_span_id","originalFunctionToString","SETUP_CLIENTS","functionToStringIntegration","originalFunction","UNKNOWN_FUNCTION","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","getLastStackFrame","arr","defaultFunctionName","getFunctionName","fn","getFramesFromEvent","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","previousFrames","frameA","frameB","lineno","colno","function","currentFingerprint","previousFingerprint","instrumented","addHandler","handler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","instrumentConsole","isNativeFunction","addFetchInstrumentationHandler","skipNativeFetchCheck","instrumentFetch","onFetchResolved","EdgeRuntime","Headers","Response","_isFetchSupported","fetch","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","virtualError","fetchArgs","getUrlFromResource","hasProp","toUpperCase","arg","parseFetchArgs","handlerData","fetchData","startTimestamp","headers","getHeadersFromFetchArgs","async","endTimestamp","TypeError","URL","host","streamHandler","clonedResponseForResolving","onFinishedResolving","body","responseReader","getReader","maxFetchDurationTimeout","setTimeout","cancel","readingActive","chunkTimeout","done","read","clearTimeout","releaseLock","resolveResponse","resource","requestArgument","optionsArgument","DEFAULT_BREADCRUMBS","beforeBreadcrumb","finalBreadcrumb","emit","getBreadcrumbLogLevelFromHttpStatusCode","statusCode","isURLObjectRelative","parseStringToURLObject","urlBase","isRelative","canParse","fullUrlObject","pathname","search","hash","getSanitizedUrlStringFromUrlObject","newUrl","port","password","parseUrl","query","fragment","path","protocol","relative","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","globalObject","originalAddEventListener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","global","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","XMLHttpRequest","xhrproto","open","originalOpen","xhrOpenThisArg","xhrOpenArgArray","parseXhrUrlArg","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","xhr","onreadystatechange","originalOnreadystatechange","onreadystatechangeThisArg","onreadystatechangeArgArray","setRequestHeader","originalSetRequestHeader","setRequestHeaderThisArg","setRequestHeaderArgArray","header","send","originalSend","sendThisArg","sendArgArray","sentryXhrData","lastHref","addHistoryInstrumentationHandler","instrumentHistory","historyReplacementFunction","originalHistoryFunction","from","to","urlOrPath","origin","getAbsoluteUrl","history","DEFAULT_ENVIRONMENT","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","_state","_handlers","_runExecutor","onfulfilled","onrejected","_executeHandlers","val","onfinally","isRejected","cachedHandlers","_value","setResult","state","notifyEventProcessors","processors","index","final","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE","SEMANTIC_ATTRIBUTE_PROFILE_ID","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","baggageHeaderToDynamicSamplingContext","baggageHeader","baggageObject","reduce","acc","curr","currBaggageObject","baggageHeaderToObject","entries","parseBaggageHeader","dynamicSamplingContext","baggageEntry","keyOrValue","decodeURIComponent","trim","ORG_ID_REGEX","DSN_REGEX","dsn","withPassword","pass","projectId","publicKey","dsnFromComponents","components","hasSpansEnabled","maybeOptions","__SENTRY_TRACING__","tracesSampleRate","tracesSampler","setHttpStatus","httpStatus","setAttribute","spanStatus","code","getSpanStatusFromHttpCode","setStatus","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","getCapturedScopesOnSpan","parseSampleRate","sampleRate","rate","parseFloat","isNaN","TRACEPARENT_REGEXP","RegExp","generateSentryTraceHeader","spanId","sampled","sampledString","hasShownSpanDropWarning","spanToTransactionTraceContext","spanContext","op","links","isRemote","convertSpanLinksForEnvelope","traceFlags","restContext","attributes","spanTimeInputToSeconds","ensureTimestampInSeconds","getSpanJSON","spanIsSentrySpan","castSpan","startTime","endTime","spanIsOpenTelemetrySdkTraceBaseSpan","description","start_timestamp","getStatusMessage","spanIsSampled","CHILD_SPANS_FIELD","ROOT_SPAN_FIELD","addChildSpanToSpan","childSpan","rootSpan","Set","getSpanDescendants","resultSet","addSpanChildren","childSpans","getRootSpan","getActiveSpan","showSpanDropWarning","FROZEN_DSC_FIELD","freezeDscOnSpan","dsc","getDynamicSamplingContextFromClient","public_key","getDsn","org_id","orgId","extractOrgIdFromDsnHost","rootSpanJson","rootSpanAttributes","traceState","rootSpanSampleRate","applyLocalSampleRateToDsc","sample_rate","frozenDsc","traceStateDsc","dscOnTraceState","sample_rand","mergeData","mergeAndOverwriteScopeData","mergeVal","parsedStackResults","lastKeysCount","cachedFilenameDebugIds","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","inner","WeakSet","delete","memoBuilder","memoize","unmemoize","isFinite","stringified","_events","window","objName","getPrototypeOf","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","numAdded","visitable","visitKey","visitValue","prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","dist","maxValueLength","applyClientOptions","integrationNames","sdk","applyIntegrationsMetadata","stackParser","filenameDebugIdMap","debugIdMap","_sentryDebugIds","debugIdKeys","stackKey","parsedStack","stackFrame","debugId","getFilenameToDebugIdMap","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","applyDataToEvent","trace","applySpanToEvent","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","applyScopeDataToEvent","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","spans","normalizeEvent","captureContextKeys","startSession","currentScope","navigator","startingTime","attrs","user_agent","sessionToJSON","makeSession","currentSession","endSession","closeSession","_sendSessionUpdate","captureSession","end","ignoreOnError","shouldIgnoreOnError","wrap","isFunction","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","getHttpRequestData","referrer","Referer","breadcrumbsIntegration","_options","dom","addConsoleInstrumentationHandler","category","logger","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","request_body_size","response_body_size","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","eventTarget","requestAnimationFrame","setInterval","unregisterOriginalCallbacks","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","integrationOptions","eventName","handleEvent","removeEventListener","unregisterOriginalCallback","originalEventHandler","_wrapEventTarget","originalCallback","wrapOptions","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","onerror","line","column","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","parseStackFrames","extractType","extractMessage","eventFromError","skipLines","reactMinifiedRegexp","getSkipFirstStackStringLines","framesToPop","getPopFirstTopFrames","isWebAssemblyException","WebAssembly","Exception","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","errorFromProp","getErrorPropertyFromObject","__serialized__","getNonErrorObjectExceptionValue","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","firstKey","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","ev","ev0","ev0s","ev0sf","in_app","_enhanceEventWithInitialFrame","_installGlobalOnErrorHandler","globalHandlerLog","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","limit","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","linkedErrorsIntegration","extraErrorDataIntegration","captureErrorCause","exceptionName","errorData","nativeKeys","extraErrorInfo","cause","serializedError","oO","_extractErrorData","normalizedErrorData","_enhanceEventWithErrorData","_traceId","_spanId","_timestamp","_key","setAttributes","_values","_status","updateName","_name","isRecording","addEvent","_attributesOrStartTime","_startTime","addLink","_link","addLinks","_links","recordException","_exception","_time","createEnvelope","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","encodeUTF8","encodePolyfill","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","item","itemHeaders","payload","stringifiedPayload","buffers","totalLength","buf","merged","offset","buffer","concatBuffers","createSpanEnvelopeItem","spanJson","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","profile_chunk","replay_event","replay_recording","check_in","feedback","raw_security","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","timedEventsToMeasurements","events","measurements","unit","SentrySpan","_attributes","_parentSpanId","_sampled","_endTime","_isStandaloneSpan","isStandalone","_onSpanEnded","link","updateStartTime","timeInput","logSpanEnd","profile_id","exclusive_time","is_segment","segment_id","attributesOrStartTime","time","isSpanTimeInput","isStandaloneSpan","spanItems","sendEnvelope","sendSpanEnvelope","tunnel","sent_at","dscHasRequiredProps","beforeSendSpan","convertToSpanJSON","createSpanEnvelope","transactionEvent","_convertSpanToTransaction","isFullFinishedSpan","capturedSpanScope","capturedSpanIsolationScope","normalizedRequest","transaction_info","SUPPRESS_TRACING_KEY","startInactiveSpan","getAcs","spanArguments","parseSentrySpanArguments","forceTransaction","parentSpan","customParentSpan","withActiveSpan","getParentSpan","onlyIfParent","createChildOrRootSpan","_startChildSpan","parentSampled","_startRootSpan","isRootSpan","infoParts","logSpanStart","setCapturedScopesOnSpan","initialCtx","experimental","standalone","ctx","mutableSpanSamplingData","spanAttributes","spanName","decision","finalParentSampled","finalAttributes","currentPropagationContext","localSampleRateWasApplied","samplingContext","inheritOrSampleWith","fallbackSampleRate","parentSampleRate","parsedSampleRate","shouldSample","sampleSpan","parentSpanIsAlwaysRootSpan","TRACING_DEFAULTS","idleTimeout","finalTimeout","childSpanTimeout","startIdleSpan","startSpanOptions","activities","Map","_idleTimeoutID","_finished","_finishReason","_autoFinishAllowed","disableAutoFinish","_cleanupHooks","beforeSpanEnd","previousActiveSpan","_startIdleSpan","_cancelIdleTimeout","_restartIdleTimeout","size","_restartChildSpanTimeout","onIdleSpanEnded","cleanup","spanJSON","child","discardedSpans","childSpanJSON","childEndTimestamp","childStartTimestamp","spanStartedBeforeIdleSpanEnd","spanEndedBeforeFinalTimeout","stringifiedSpan","removeChildSpanFromSpan","thisArg","definedEndTimestamp","spanEndTimestamp","childEndTimestamps","latestSpanEndTimestamp","spanStartTimestamp","Infinity","startedSpan","endedSpan","spanToAllowAutoFinish","errorsInstrumented","bindReporter","metric","thresholds","reportAllChanges","prevValue","delta","forceReport","rating","getRating","getNavigationEntry","checkResponseStart","navigationEntry","getEntriesByType","responseStart","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","wasDiscarded","instanceMap","initUnique","identityObj","ClassObj","LayoutShiftManager","__init","__init2","_sessionValue","_sessionEntries","_processEntry","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","_onAfterProcessingUnexpectedShift","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","runOnce","cb","called","firstHiddenTime","onVisibilityUpdate","visibilityState","timeStamp","removeChangeListeners","getVisibilityWatcher","firstVisibilityStateHiddenTime","whenActivated","FCPThresholds","CLSThresholds","onHidden","onHiddenOrPageHide","FIDThresholds","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","interactionId","getInteractionCount","interactionCount","initInteractionCountPolyfill","durationThreshold","prevInteractionCount","InteractionManager","_longestInteractionList","_longestInteractionMap","_resetInteractions","_estimateP98LongestInteraction","candidateInteractionIndex","_onBeforeProcessingEntry","entryType","minLongestInteraction","at","interaction","_latency","removedInteractions","splice","_onAfterProcessingINPCandidate","whenIdleOrHidden","rIC","requestIdleCallback","INPThresholds","LCPEntryManager","LCPThresholds","TTFBThresholds","whenReady","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addClsInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentCls","addLcpInstrumentationHandler","instrumentLcp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","onReport","visibilityWatcher","report","disconnect","onFCP","layoutShiftManager","handleEntries","takeRecords","onCLS","instrumentFid","handleEntry","processingStart","onFID","lcpEntryManager","stopListening","capture","once","onLCP","instrumentTtfb","onTTFB","instrumentInp","PerformanceEventTiming","interactionManager","inp","onINP","previousValue","isMeasurementValue","startAndEndSpan","startTimeInSeconds","parentStartTime","startStandaloneWebVitalSpan","passedAttributes","sendDefaultPii","replay","getIntegrationByName","replayId","getReplayId","userDisplay","profileId","replay_id","getBrowserPerformanceAPI","msToSec","extractNetworkProtocol","nextHopProtocol","char","supportsWebVital","listenForWebVitalReportEvents","collectorCallback","pageloadSpanId","collected","_runCollectorCallbackOnce","unsubscribeStartNavigation","isRedirect","unsubscribeAfterStartPageLoadSpan","_lcpEntry","_clsEntry","_performanceCursor","_measurements","startTrackingWebVitals","recordClsStandaloneSpans","recordLcpStandaloneSpans","mark","fidCleanupCallback","lcpCleanupCallback","standaloneLcpEntry","standaloneLcpValue","cleanupLcpHandler","reportEvent","lcpValue","routeName","loadTime","renderTime","_sendStandaloneLcpSpan","trackLcpAsStandaloneSpan","ttfbCleanupCallback","clsCleanupCallback","standaloneClsEntry","standaloneCLsValue","cleanupClsHandler","clsValue","sources","node","sendStandaloneClsSpan","trackClsAsStandaloneSpan","_addPerformanceNavigationTiming","eventEnd","_getEndPropertyNameForNavigationTiming","start","redirectCount","setResourceEntrySizeData","dataKey","entryVal","LAST_INTERACTIONS","INTERACTIONS_SPAN_MAP","INP_ENTRY_MAP","click","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","_onInp","interactionType","activeSpan","spanToUse","_onElementTiming","elementEntry","identifier","paintType","spanStartTime","spanStartTimeSource","naturalWidth","naturalHeight","startSpan","customScope","customForkedScope","onError","onFinally","maybeHandlePromiseRejection","PREVIOUS_TRACE_KEY","spanContextSampled","getTraceData","getTransport","sentryTrace","spanToTraceHeader","scopeToTraceHeader","baggage","objectKey","objectValue","currentIndex","encodeURIComponent","newBaggageHeader","objectToBaggageHeader","dscKey","dscValue","baggageHeaderHasSentryBaggageValues","getFetchSpanAttributes","parsedUrl","spanOrigin","getAbsoluteTime","responseToSpanId","spanIdToEndTimestamp","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","trackFetchStreamPerformance","instrumentOutgoingRequests","shouldCreateSpanForRequest","tracePropagationTargets","onRequestSpanStart","shouldCreateSpan","shouldAttachHeadersWithTargets","targetUrl","resolvedUrl","currentOrigin","isSameOriginRequest","isRelativeSameOriginRequest","shouldAttachHeaders","updatedTimestamp","addFetchEndInstrumentationHandler","createdSpan","shouldCreateSpanResult","__span","contentLength","contentLengthNum","parseInt","endSpan","hasParent","getSpanStartOptions","fetchOptionsObj","traceHeaders","originalHeaders","isHeaders","newHeaders","prevBaggageHeader","prevBaggageHeaderWithSentryValues","existingSentryTraceHeader","existingBaggageHeader","newBaggageHeaders","headerItem","_addTracingHeadersToFetchRequest","fetchHint","instrumentFetchRequest","fullUrl","getFullURL","addHTTPTimings","__sentry_xhr_span_id__","urlForSpanName","sentryTraceHeader","sentryBaggageHeader","__sentry_xhr_v3__","originalBaggageHeader","setHeaderOnXhr","addTracingHeadersToXhrRequest","xhrCallback","initiatorType","isPerformanceResourceTiming","endsWith","resourceTiming","timingSpanData","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseEnd","resourceTimingToSpanAttributes","attributeArray","DEFAULT_BROWSER_TRACING_OPTIONS","instrumentNavigation","instrumentPageLoad","markBackgroundSpan","enableLongTask","enableLongAnimationFrame","enableInp","enableElementTiming","ignoreResourceSpans","ignorePerformanceApiSpans","detectRedirects","linkPreviousTrace","consistentTraceSampling","_experiments","browserTracingIntegration","latestRoute","optionalWindowDocument","enableInteractions","enableStandaloneClsSpans","enableStandaloneLcpSpans","beforeStartSpan","_collectWebVitals","lastInteractionTimestamp","_createRouteSpan","makeActive","isPageloadTransaction","finalStartSpanOptions","idleSpan","performanceEntries","transactionStartTime","requestStartTimestamp","responseEndTimestamp","responseStartTimestamp","_addRequest","_addNavigationSpans","requestTime","measureStartTimestamp","startTimeStamp","measureEndTimestamp","performanceMeasure","_addDetailToSpanAttributes","_addMeasureSpans","firstHidden","shouldRecord","resourceUrl","deliveryType","renderBlockingStatus","_addResourceSpans","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","_addTtfbRequestTimeToMeasurements","fidMark","recordClsOnPageloadSpan","cls","recordLcpOnPageloadSpan","lcp","measurementName","measurement","setMeasurement","_setWebVitalAttributes","addPerformanceEntries","setActiveIdleSpan","oldPropagationContext","emitFinish","errorCallback","tag","registerSpanErrorInstrumentation","inpCallback","startTrackingINP","parent","scripts","parentStartTimestamp","parentOp","initialScript","invoker","invokerType","sourceURL","sourceFunctionName","sourceCharPosition","spanOptions","interactionHandler","passive","maybeEndActiveSpan","getActiveIdleSpan","navigationOptions","traceOptions","traceparentData","traceparent","matches","extractTraceparentData","parsedSampleRand","getSampleRandFromTraceparentAndDsc","getMetaContent","startingUrl","useSessionStorage","inMemoryPreviousTraceInfo","previousTraceInfo","sessionStorage","getItem","getPreviousTraceFromSessionStorage","updatedPreviousTraceInfo","getSampleRate","previousTraceSpanCtx","addPreviousTraceSpanLink","setItem","storePreviousTraceInSessionStorage","isFirstTraceOnPageload","mutableSamplingContextData","linkTraces","startBrowserTracingPageLoadSpan","pageloadSpan","parsed","navigationIsRedirect","spanData","REDIRECT_THRESHOLD","startBrowserTracingNavigationSpan","cancelledStatus","inflightInteractionSpan","activeIdleSpan","currentRootSpanOp","registerInteractionListener","activeRootSpan","isPerformanceEventTiming","last","shift","registerInpInteractionListener","metaName","metaTag","querySelector","ACTIVE_IDLE_SPAN_PROPERTY","ALREADY_SEEN_ERROR","MISSING_RELEASE_FOR_SESSION_ERROR","INTERNAL_ERROR_SYMBOL","Symbol","for","DO_NOT_SEND_EVENT_SYMBOL","_makeInternalError","_makeDoNotSendEventError","_isInternalError","_isDoNotSendEventError","Client","_integrations","_numProcessing","_outcomes","_hooks","_dsn","exec","lastPath","projectMatch","dsnFromString","component","isValidProtocol","validateDsn","sdkInfo","_metadata","getBaseApiEndpoint","_getIngestEndpoint","sentry_version","sentry_key","sentry_client","URLSearchParams","_encodedAuth","_transport","transport","transportOptions","hintWithEventId","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","sendSession","getSdkMetadata","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","close","eventProcessor","_isEnabled","_setupIntegrations","integrationName","addIntegration","isAlreadyInstalled","sendEvent","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelopeHeaders","createEventEnvelope","clientReleaseOption","clientEnvironmentOption","sessionAttrs","createSessionEnvelope","count","sendClientReports","hook","hooks","cbIndex","callbacks","setupIntegrations","_updateSessionFromEvent","crashed","errored","exceptions","sessionNonTerminal","ticked","interval","clearInterval","_prepareEvent","_processEvent","finalEvent","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","__sentry__","beforeSend","beforeSendTransaction","processedEvent","processedRootSpanJson","convertTransactionEventToSpanJson","processedSpans","processedSpan","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","spanCount","droppedSpanCount","transactionInfo","_clearOutcomes","outcomes","quantity","_flushOutcomes","discarded_events","_INTERNAL_flushLogsBuffer","maybeLogBuffer","logBuffer","_getBufferMap","_INTERNAL_getLogBuffer","logs","item_count","createLogEnvelope","addAutoIpAddressToUser","objWithMaybeUser","addAutoIpAddressToSession","optionsArg","__SENTRY_RELEASE__","SENTRY_RELEASE","names","applySdkMetadata","SENTRY_SDK_SOURCE","enableLogs","shouldEnableLogs","_logFlushIdleTimeout","platform","SENTRY_BUFFER_FULL_ERROR","createTransport","makeRequest","remove","task","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","limits","all","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parseRetryAfterHeader","updateRateLimits","cachedImplementations","clearCachedImplementation","nativeFetch","cached","impl","getNativeImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","createFrame","chromeRegexNoFnName","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","parsers","sortedParsers","skipFirstLines","lines","cleanedLine","localStack","stripSentryFramesAndReverse","createStackParser","noFnParts","col","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","createSentryScope","reqData","BrowserClient","process","makeFetchTransport","defaultStackParser","browser_api","getManifest","Feature","wait","getFibonacciNumber","sum","LocalStorageKey","PersistentStorageKey","ExpirableStorageKey","OneDayStorageKeys","getConfigsUrl","endpoint","configsBaseUrl","getLocalStorageData","ConfigsBaseUrl","statusText","TimeoutError","supportsRequestStreams","duplexAccessed","hasContentType","supportsReadableStream","ReadableStream","supportsRequest","duplex","supportsAbortController","AbortController","supportsAbortSignal","AbortSignal","any","supportsResponseStreams","supportsFormData","FormData","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","usualFormBoundarySize","stop","kyOptionKeys","parseJson","stringifyJson","searchParams","prefixUrl","retry","throwHttpErrors","onDownloadProgress","onUploadProgress","requestOptionsRegistry","mode","credentials","redirect","integrity","signal","dispatcher","priority","isObject","validateAndMerge","deepMerge","mergeHeaders","source1","source2","isHeadersInstance","newHookValue","incoming","hasOwn","mergeHooks","beforeRequest","beforeRetry","afterResponse","beforeError","returnValue","normalizeRequestMethod","defaultRetryOptions","methods","statusCodes","afterStatusCodes","maxRetryAfter","POSITIVE_INFINITY","backoffLimit","attemptCount","normalizeRetryOptions","Ky","ky","function_","RangeError","_fetch","modifiedResponse","_decorateResponse","ok","totalBytes","transferredBytes","percent","controller","reader","byteLength","enqueue","streamResponse","_retry","finally","bodyUsed","mimeType","abortController","_retryCount","_input","originalSignal","Blob","ArrayBuffer","jsonString","getBodySize","toFixed","streamRequest","_calculateRetryDelay","after","retryDelay","abortHandler","timeoutId","throwIfAborted","retryCount","nonRequestOptions","unknownOptions","findUnknownOptions","mainRequest","abort","createInstance","defaults","newDefaults","apiScope","configsClient","timingInSec","setLocalStorageData","responseClone","timestampUtc","dayjs","responseData","requestLog","apiHttpSuccess","ApiHttpSuccess","requestClone","requestData","errorLog","apiHttpErrors","ApiHttpErrors","versionStringToNumber","segment","padStart","getActive","featureVersion","defaultValue","currentVersion","getFeaturesData","fetchFeaturesData","featuresApiUrl","featureListDto","DevMeta","PACLite","CaptchaCrackerDisabled","OnFailDisabled","ProxyControlledByOtherExtensionsVisibility","AdfoxBanner","ProxyAuth","FreeUsersReview","MultiLocalesSupport","GiftAdvertising","listeners","initialStore","isInitialized","featuresList","loading","tempGlobalStore","tempFeaturesList","getFeatureStore","featureStore","FeatureStore","setFeatureStore","store","features","emitChange","FeaturesListLocal","subscribe","getSnapshot","featuresListLocal","getMetaApiData","fetchMetaApiData","metaApiPath","metaApiUrl","apiBaseUrl","cookieDomain","showOnUpdateVersion","proxyUpdatePeriod","requiredVersion","supportedBrowsers","shouldUpdatePAC","shouldUpdatePACVersion","availableBannersData","androidAppUrl","availablePaymentMethods","publicOfferUrl","advMinVersion","availableAlarmTries","updateSubscriptionInfoPeriod","adfoxBannerUrl","giftAdvertisingAvailableDates","giftAdvertisingPeriodInMinutes","metaApiData","COOKIE_OPTIONS","secure","sameSite","expirationDate","CookieKey","setCookieData","cookies","getCookieData","cookie","limitInSeconds","getTimingWithLimit","limitInSec","storage","MetaApiData","apiUrl","hostname","customHeaders","HTTPError","retryAfterTiming","onChanged","changes","UserId","userId","cookieUserId","newUserId","newValue","DeviceId","deviceId","cookieDeviceId","newDeviceId","action","PaymentStarted","details","app","userIdElementContainer","getElementById","userText","style","fontStyle","innerHTML","userIdElement","innerText","fontWeight","fontSize","color"],"sourceRoot":""}